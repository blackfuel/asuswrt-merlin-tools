--- ./asuswrt-merlin-380.66-alpha1-original/release/src-rt-6.x.4708/linux/linux-2.6.36/config_base.6a	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src-rt-6.x.4708/linux/linux-2.6.36/config_base.6a	2017-02-24 20:12:15.307321909 -0500
@@ -416,7 +416,7 @@
 CONFIG_INET=y
 CONFIG_IP_MULTICAST=y
 CONFIG_IP_ADVANCED_ROUTER=y
-# CONFIG_IP_MROUTE_MULTIPLE_TABLES is not set
+CONFIG_IP_MROUTE_MULTIPLE_TABLES=y
 CONFIG_ASK_IP_FIB_HASH=y
 # CONFIG_IP_FIB_TRIE is not set
 CONFIG_IP_FIB_HASH=y
@@ -486,7 +486,7 @@
 CONFIG_NETFILTER_NETLINK_LOG=y
 CONFIG_NF_CONNTRACK=y
 CONFIG_NF_CONNTRACK_MARK=y
-# CONFIG_NF_CONNTRACK_EVENTS is not set
+CONFIG_NF_CONNTRACK_EVENTS=y
 # CONFIG_NF_CT_PROTO_DCCP is not set
 CONFIG_NF_CT_PROTO_GRE=m
 # CONFIG_NF_CT_PROTO_SCTP is not set
@@ -529,16 +529,25 @@
 CONFIG_NETFILTER_XT_TARGET_NOTRACK=y
 # CONFIG_NETFILTER_XT_TARGET_RATEEST is not set
 # CONFIG_NETFILTER_XT_TARGET_TEE is not set
+# CONFIG_NETFILTER_XT_TARGET_TPROXY is not set
 # CONFIG_NETFILTER_XT_TARGET_TRACE is not set
+# CONFIG_NETFILTER_XT_TARGET_ACCOUNT is not set
+CONFIG_NETFILTER_XT_TARGET_CHAOS=m
+CONFIG_NETFILTER_XT_TARGET_DELUDE=m
+# CONFIG_NETFILTER_XT_TARGET_ECHO is not set
+CONFIG_NETFILTER_XT_TARGET_RAWNAT=m
+CONFIG_NETFILTER_XT_TARGET_STEAL=m
+CONFIG_NETFILTER_XT_TARGET_TARPIT=m
 CONFIG_NETFILTER_XT_TARGET_TCPMSS=y
 # CONFIG_NETFILTER_XT_TARGET_TCPOPTSTRIP is not set
 # CONFIG_NETFILTER_XT_MATCH_LAYER7 is not set
+# CONFIG_NETFILTER_XT_MATCH_LAYER7_DEBUG is not set
 
 #
 # Xtables matches
 #
 # CONFIG_NETFILTER_XT_MATCH_CLUSTER is not set
-# CONFIG_NETFILTER_XT_MATCH_COMMENT is not set
+CONFIG_NETFILTER_XT_MATCH_COMMENT=m
 CONFIG_NETFILTER_XT_MATCH_CONNBYTES=y
 CONFIG_NETFILTER_XT_MATCH_CONNLIMIT=y
 CONFIG_NETFILTER_XT_MATCH_CONNMARK=y
@@ -565,9 +574,9 @@
 # CONFIG_NETFILTER_XT_MATCH_REALM is not set
 CONFIG_NETFILTER_XT_MATCH_RECENT=y
 # CONFIG_NETFILTER_XT_MATCH_SCTP is not set
-# CONFIG_NETFILTER_XT_MATCH_SOCKET is not set
+CONFIG_NETFILTER_XT_MATCH_SOCKET=m
 CONFIG_NETFILTER_XT_MATCH_STATE=y
-# CONFIG_NETFILTER_XT_MATCH_STATISTIC is not set
+CONFIG_NETFILTER_XT_MATCH_STATISTIC=m
 CONFIG_NETFILTER_XT_MATCH_STRING=y
 CONFIG_NETFILTER_XT_MATCH_TCPMSS=y
 CONFIG_NETFILTER_XT_MATCH_TIME=y
@@ -575,6 +584,13 @@
 CONFIG_NETFILTER_XT_MATCH_WEBSTR=y
 CONFIG_NETFILTER_XT_MATCH_CONDITION=m
 CONFIG_NETFILTER_XT_MATCH_GEOIP=m
+CONFIG_NETFILTER_XT_MATCH_FUZZY=m
+CONFIG_NETFILTER_XT_MATCH_IFACE=m
+CONFIG_NETFILTER_XT_MATCH_IPV4OPTIONS=m
+CONFIG_NETFILTER_XT_MATCH_LSCAN=m
+CONFIG_NETFILTER_XT_MATCH_PKNOCK=m
+CONFIG_NETFILTER_XT_MATCH_PSD=m
+CONFIG_NETFILTER_XT_MATCH_QUOTA2=m
 CONFIG_IP_SET=m
 CONFIG_IP_SET_MAX=256
 CONFIG_IP_SET_BITMAP_IP=m
@@ -1025,7 +1041,28 @@
 # CONFIG_SCSI_DH is not set
 # CONFIG_SCSI_OSD_INITIATOR is not set
 # CONFIG_ATA is not set
-# CONFIG_MD is not set
+CONFIG_MD=y
+# CONFIG_BLK_DEV_MD is not set
+# CONFIG_MD_LINEAR is not set
+# CONFIG_MD_RAID0 is not set
+# CONFIG_MD_RAID1 is not set
+# CONFIG_MD_RAID10 is not set
+# CONFIG_MD_RAID456 is not set
+# CONFIG_MULTICORE_RAID456 is not set
+# CONFIG_MD_MULTIPATH is not set
+# CONFIG_MD_FAULTY is not set
+CONFIG_BLK_DEV_DM=m
+# CONFIG_DM_DEBUG is not set
+CONFIG_DM_CRYPT=m
+# CONFIG_DM_SNAPSHOT is not set
+# CONFIG_DM_MIRROR is not set
+# CONFIG_DM_LOG_USERSPACE is not set
+# CONFIG_DM_ZERO is not set
+# CONFIG_DM_MULTIPATH is not set
+# CONFIG_DM_MULTIPATH_QL is not set
+# CONFIG_DM_MULTIPATH_ST is not set
+# CONFIG_DM_DELAY is not set
+# CONFIG_DM_UEVENT is not set
 # CONFIG_FUSION is not set
 
 #
@@ -1240,7 +1277,10 @@
 #
 # PPS support
 #
-# CONFIG_PPS is not set
+CONFIG_PPS=m
+# CONFIG_PPS_DEBUG is not set
+CONFIG_PPS_CLIENT_KTIMER=m
+CONFIG_PPS_CLIENT_LDISC=m
 # CONFIG_W1 is not set
 # CONFIG_POWER_SUPPLY is not set
 # CONFIG_HWMON is not set
@@ -1273,14 +1313,14 @@
 # CONFIG_SOUND is not set
 CONFIG_HID_SUPPORT=y
 CONFIG_HID=m
-# CONFIG_HIDRAW is not set
+CONFIG_HIDRAW=y
 
 #
 # USB Input Devices
 #
 CONFIG_USB_HID=m
 # CONFIG_HID_PID is not set
-# CONFIG_USB_HIDDEV is not set
+CONFIG_USB_HIDDEV=y
 
 #
 # USB HID Boot Protocol drivers
@@ -1427,13 +1467,13 @@
 # CONFIG_USB_SERIAL_AIRCABLE is not set
 # CONFIG_USB_SERIAL_ARK3116 is not set
 # CONFIG_USB_SERIAL_BELKIN is not set
-# CONFIG_USB_SERIAL_CH341 is not set
+CONFIG_USB_SERIAL_CH341=m
 # CONFIG_USB_SERIAL_WHITEHEAT is not set
 # CONFIG_USB_SERIAL_DIGI_ACCELEPORT is not set
-# CONFIG_USB_SERIAL_CP210X is not set
+CONFIG_USB_SERIAL_CP210X=m
 # CONFIG_USB_SERIAL_CYPRESS_M8 is not set
 # CONFIG_USB_SERIAL_EMPEG is not set
-# CONFIG_USB_SERIAL_FTDI_SIO is not set
+CONFIG_USB_SERIAL_FTDI_SIO=m
 # CONFIG_USB_SERIAL_FUNSOFT is not set
 # CONFIG_USB_SERIAL_VISOR is not set
 # CONFIG_USB_SERIAL_IPAQ is not set
@@ -1452,7 +1492,7 @@
 # CONFIG_USB_SERIAL_MOS7840 is not set
 # CONFIG_USB_SERIAL_MOTOROLA is not set
 # CONFIG_USB_SERIAL_NAVMAN is not set
-# CONFIG_USB_SERIAL_PL2303 is not set
+CONFIG_USB_SERIAL_PL2303=m
 # CONFIG_USB_SERIAL_OTI6858 is not set
 # CONFIG_USB_SERIAL_QCAUX is not set
 # CONFIG_USB_SERIAL_QUALCOMM is not set
@@ -1577,8 +1617,11 @@
 #
 # CD-ROM/DVD Filesystems
 #
-# CONFIG_ISO9660_FS is not set
-# CONFIG_UDF_FS is not set
+CONFIG_ISO9660_FS=m
+CONFIG_JOLIET=y
+CONFIG_ZISOFS=y
+CONFIG_UDF_FS=m
+CONFIG_UDF_NLS=y
 
 #
 # DOS/FAT/NT Filesystems
@@ -1626,7 +1669,7 @@
 # CONFIG_JFFS2_CMODE_SIZE is not set
 # CONFIG_JFFS2_CMODE_FAVOURLZO is not set
 # CONFIG_LOGFS is not set
-# CONFIG_CRAMFS is not set
+CONFIG_CRAMFS=m
 CONFIG_SQUASHFS=y
 # CONFIG_SQUASHFS_XATTR is not set
 # CONFIG_SQUASHFS_LZO is not set
@@ -1823,7 +1866,7 @@
 CONFIG_CRYPTO_ECB=y
 # CONFIG_CRYPTO_LRW is not set
 # CONFIG_CRYPTO_PCBC is not set
-# CONFIG_CRYPTO_XTS is not set
+CONFIG_CRYPTO_XTS=m
 
 #
 # Hash modes
@@ -1840,41 +1883,42 @@
 # CONFIG_CRYPTO_MD4 is not set
 CONFIG_CRYPTO_MD5=y
 # CONFIG_CRYPTO_MICHAEL_MIC is not set
-# CONFIG_CRYPTO_RMD128 is not set
-# CONFIG_CRYPTO_RMD160 is not set
-# CONFIG_CRYPTO_RMD256 is not set
-# CONFIG_CRYPTO_RMD320 is not set
+CONFIG_CRYPTO_RMD128=m
+CONFIG_CRYPTO_RMD160=m
+CONFIG_CRYPTO_RMD256=m
+CONFIG_CRYPTO_RMD320=m
 CONFIG_CRYPTO_SHA1=y
-# CONFIG_CRYPTO_SHA256 is not set
-# CONFIG_CRYPTO_SHA512 is not set
-# CONFIG_CRYPTO_TGR192 is not set
-# CONFIG_CRYPTO_WP512 is not set
+CONFIG_CRYPTO_SHA256=m
+CONFIG_CRYPTO_SHA512=m
+CONFIG_CRYPTO_TGR192=m
+CONFIG_CRYPTO_WP512=m
 
 #
 # Ciphers
 #
 CONFIG_CRYPTO_AES=y
-# CONFIG_CRYPTO_ANUBIS is not set
+CONFIG_CRYPTO_ANUBIS=m
 CONFIG_CRYPTO_ARC4=y
-# CONFIG_CRYPTO_BLOWFISH is not set
-# CONFIG_CRYPTO_CAMELLIA is not set
-# CONFIG_CRYPTO_CAST5 is not set
-# CONFIG_CRYPTO_CAST6 is not set
+CONFIG_CRYPTO_BLOWFISH=m
+CONFIG_CRYPTO_CAMELLIA=m
+CONFIG_CRYPTO_CAST5=m
+CONFIG_CRYPTO_CAST6=m
 CONFIG_CRYPTO_DES=m
-# CONFIG_CRYPTO_FCRYPT is not set
-# CONFIG_CRYPTO_KHAZAD is not set
-# CONFIG_CRYPTO_SALSA20 is not set
-# CONFIG_CRYPTO_SEED is not set
-# CONFIG_CRYPTO_SERPENT is not set
-# CONFIG_CRYPTO_TEA is not set
-# CONFIG_CRYPTO_TWOFISH is not set
+CONFIG_CRYPTO_FCRYPT=m
+CONFIG_CRYPTO_KHAZAD=m
+CONFIG_CRYPTO_SALSA20=m
+CONFIG_CRYPTO_SEED=m
+CONFIG_CRYPTO_SERPENT=m
+CONFIG_CRYPTO_TEA=m
+CONFIG_CRYPTO_TWOFISH=m
+CONFIG_CRYPTO_TWOFISH_COMMON=m
 
 #
 # Compression
 #
-# CONFIG_CRYPTO_DEFLATE is not set
-# CONFIG_CRYPTO_ZLIB is not set
-# CONFIG_CRYPTO_LZO is not set
+CONFIG_CRYPTO_DEFLATE=m
+CONFIG_CRYPTO_ZLIB=m
+CONFIG_CRYPTO_LZO=m
 
 #
 # Random Number Generation
@@ -1882,6 +1926,7 @@
 CONFIG_CRYPTO_ANSI_CPRNG=y
 CONFIG_CRYPTO_HW=y
 # CONFIG_CRYPTO_DEV_HIFN_795X is not set
+# CONFIG_CRYPTO_DEV_HIFN_795X_RNG is not set
 # CONFIG_BINARY_PRINTF is not set
 
 #
--- ./asuswrt-merlin-380.66-alpha1-original/release/src-rt-6.x.4708/linux/linux-2.6.36/drivers/usb/serial/ftdi_sio.c	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src-rt-6.x.4708/linux/linux-2.6.36/drivers/usb/serial/ftdi_sio.c	2017-02-12 21:44:27.319769613 -0500
@@ -1868,8 +1868,20 @@
 	   are only processed once.  */
 	status = packet[0] & FTDI_STATUS_B0_MASK;
 	if (status != priv->prev_status) {
-		priv->diff_status |= status ^ priv->prev_status;
-		wake_up_interruptible(&priv->delta_msr_wait);
+                char diff_status = status ^ priv->prev_status;
+                priv->diff_status |= diff_status;
+        
+                if (diff_status & FTDI_RS0_RLSD) {
+                        struct tty_struct *tty;
+ 
+                        tty = tty_port_tty_get(&port->port);
+                        if (tty)
+                                usb_serial_handle_dcd_change(port, tty,
+                                                status & FTDI_RS0_RLSD);
+                        tty_kref_put(tty);
+                }
+
+                wake_up_interruptible(&priv->delta_msr_wait);
 		priv->prev_status = status;
 	}
 
--- ./asuswrt-merlin-380.66-alpha1-original/release/src-rt-6.x.4708/linux/linux-2.6.36/drivers/usb/serial/generic.c	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src-rt-6.x.4708/linux/linux-2.6.36/drivers/usb/serial/generic.c	2017-02-12 21:44:27.323771613 -0500
@@ -491,6 +491,15 @@
 	struct tty_port *port = &usb_port->port;
 
 	dbg("%s - port %d, status %d", __func__, usb_port->number, status);
+        if (tty) {
+               struct tty_ldisc *ld = tty_ldisc_ref(tty);
+
+               if (ld) {
+                       if (ld->ops->dcd_change)
+                               ld->ops->dcd_change(tty, status, NULL);
+                       tty_ldisc_deref(ld);
+               }
+        }
 
 	if (status)
 		wake_up_interruptible(&port->open_wait);
diff -u -B -N -r -x '*.rej' -x '*.orig' -x .directory ./asuswrt-merlin-380.66-alpha1-original/release/src-rt-6.x.4708/linux/linux-2.6.36/net/netfilter/Kconfig ./asuswrt-merlin-380.66-alpha1/release/src-rt-6.x.4708/linux/linux-2.6.36/net/netfilter/Kconfig
--- ./asuswrt-merlin-380.66-alpha1-original/release/src-rt-6.x.4708/linux/linux-2.6.36/net/netfilter/Kconfig	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src-rt-6.x.4708/linux/linux-2.6.36/net/netfilter/Kconfig	2017-02-12 21:44:27.323771613 -0500
@@ -590,6 +590,203 @@
 
 	  To compile it as a module, choose M here.  If unsure, say N.
 
+config NETFILTER_XT_TARGET_ACCOUNT
+	tristate '"ACCOUNT" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  The ACCOUNT target is a high performance accounting system for large
+	  local networks. It allows per-IP accounting in whole prefixes of IPv4
+	  addresses with size of up to /8 without the need to add individual
+	  accouting rule for each IP address.
+
+	  The ACCOUNT is designed to be queried for data every second or at
+	  least every ten seconds. It is written as kernel module to handle high
+	  bandwidths without packet loss.
+
+	  The largest possible subnet size is 24 bit, meaning for example 10.0.0.0/8
+	  network. ACCOUNT uses fixed internal data structures
+	  which speeds up the processing of each packet. Furthermore,
+	  accounting data for one complete 192.168.1.X/24 network takes 4 KB of
+	  memory. Memory for 16 or 24 bit networks is only allocated when
+	  needed.
+
+	  To optimize the kernel<->userspace data transfer a bit more, the
+	  kernel module only transfers information about IPs, where the src/dst
+	  packet counter is not 0. This saves precious kernel time.
+
+	  There is no /proc interface as it would be too slow for continuous access.
+	  The read-and-flush query operation is the fastest, as no internal data
+	  snapshot needs to be created&copied for all data. Use the "read"
+	  operation without flush only for debugging purposes!
+
+	  Usage:
+
+	  ACCOUNT takes two mandatory parameters:
+
+	  --addr network/netmask
+	  where network/netmask is the subnet to account for, in CIDR syntax
+
+	  --tname NAME
+	  where NAME is the name of the table where the accounting information
+	  should be stored
+
+	  The subnet 0.0.0.0/0 is a special case: all data are then stored in the src_bytes
+	  and src_packets structure of slot "0". This is useful if you want
+	  to account the overall traffic to/from your internet provider.
+
+	  The data can be queried using the userspace libxt_ACCOUNT_cl library,
+	  and by the reference implementation to show usage of this library,
+	  the iptaccount(8) tool.
+
+	  Here is an example of use:
+
+	  iptables -A FORWARD -j ACCOUNT --addr 0.0.0.0/0 --tname all_outgoing;
+	  iptables -A FORWARD -j ACCOUNT --addr 192.168.1.0/24 --tname sales;
+
+	  This creates two tables called "all_outgoing" and "sales" which can be
+	  queried using the userspace library/iptaccount tool.
+
+	  Note that this target is non-terminating, the packet destined to it
+	  will continue traversing the chain in which it has been used.
+
+	  Also note that once a table has been defined for specific CIDR address/netmask
+	  block, it can be referenced multiple times using -j ACCOUNT, provided
+	  that both the original table name and address/netmask block are specified.
+
+	  For more information go to http://www.intra2net.com/en/developer/ipt_ACCOUNT/
+
+	  To compile it as a module, choose M here.  If unsure, say N.
+
+config NETFILTER_XT_TARGET_CHAOS
+	tristate '"CHAOS" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  Causes confusion on the other end by doing odd things with incoming packets.
+	  CHAOS will randomly reply (or not) with one of its configurable subtargets:
+
+	  --delude
+	  Use the REJECT and DELUDE targets as a base to do a sudden or deferred
+	  connection reset, fooling some network scanners to return non-deterministic
+	  (randomly open/closed) results, and in case it is deemed open, it is actually
+	  closed/filtered.
+
+	  --tarpit
+	  Use the REJECT and TARPIT target as a base to hold the connection until it
+	  times out. This consumes conntrack entries when connection tracking is loaded
+	  (which usually is on most machines), and routers inbetween you and the Internet
+	  may fail to do their connection tracking if they have to handle more
+	  connections than they can.
+
+	  The randomness factor of not replying vs. replying can be set during load-time
+	  of the xt_CHAOS module or during runtime in /sys/modules/xt_CHAOS/parameters.
+
+	  See http://jengelh.medozas.de/projects/chaostables/ for more information
+	  about CHAOS, DELUDE and lscan.
+
+	  To compile it as a module, choose M here.  If unsure, say N.
+
+config NETFILTER_XT_TARGET_DELUDE
+	tristate '"DELUDE" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  The DELUDE target will reply to a SYN packet with SYN-ACK, and to all other
+	  packets with an RST. This will terminate the connection much like REJECT, but
+	  network scanners doing TCP half-open discovery can be spoofed to make them
+	  belive the port is open rather than closed/filtered.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_TARGET_ECHO
+	tristate '"ECHO" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  The ECHO target will send back all packets it received. It serves as an
+	  examples for an Xtables target.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_TARGET_RAWNAT
+	tristate '"RAWNAT" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  The RAWSNAT and RAWDNAT targets provide stateless network address
+	  translation.
+
+	  The RAWDNAT target will rewrite the destination address in the IP header,
+	  much like the NETMAP target.
+
+	  --to-destination addr[/mask]
+	  Network address to map to. The resulting address will be constructed the
+	  following way: All 'one' bits in the mask are filled in from the new
+	  address. All bits that are zero in the mask are filled in from the
+	  original address.
+
+	  The RAWSNAT target will rewrite the source address in the IP header, much
+	  like the NETMAP target. RAWSNAT (and RAWDNAT) may only be
+	  used in the raw or rawpost tables, but can be used in all chains,
+	  which makes it possible to change the source address either when the packet
+	  enters the machine or when it leaves it. The reason for this table constraint
+	  is that RAWNAT must happen outside of connection tracking.
+
+	  --to-source addr[/mask]
+	  Network address to map to. The resulting address will be constructed the
+	  following way: All 'one' bits in the mask are filled in from the new
+	  address. All bits that are zero in the mask are filled in from the
+	  original address.
+
+	  As an example, changing the destination for packets forwarded from an internal
+	  LAN to the internet:
+
+	  -t raw -A PREROUTING -i lan0 -d 212.201.100.135 -j RAWDNAT --to-destination 199.181.132.250;
+	  -t rawpost -A POSTROUTING -o lan0 -s 199.181.132.250 -j RAWSNAT --to-source 212.201.100.135;
+
+	  Note that changing addresses may influence the route selection! Specifically,
+	  it statically NATs packets, not connections, like the normal DNAT/SNAT targets
+	  would do. Also note that it can transform already-NATed connections, as
+	  said, it is completely external to Netfilter's connection tracking/NAT.
+
+	  If the machine itself generates packets that are to be rawnat'ed, you need a
+	  rule in the OUTPUT chain instead, just like you would with the stateful NAT
+	  targets.
+
+	  It may be necessary that in doing so, you also need an extra RAWSNAT rule, to
+	  override the automatic source address selection that the routing code does
+	  before passing packets to iptables. If the connecting socket has not been
+	  explicitly bound to an address, as is the common mode of operation, the address
+	  that will be chosen is the primary address of the device through which the
+	  packet would be routed with its initial destination address - the address as
+	  seen before any RAWNAT takes place.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_TARGET_STEAL
+	tristate '"STEAL" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  Like the DROP target, but does not throw an error like DROP when used in the
+	  OUTPUT chain.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+	  
+config NETFILTER_XT_TARGET_TARPIT
+	tristate '"TARPIT" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  Adds a TARPIT target to iptables, which captures and holds
+	  incoming TCP connections using no local per-connection resources.
+	  Connections are accepted, but immediately switched to the persist
+	  state (0 byte window), in which the remote side stops sending data
+	  and asks to continue every 60-240 seconds. Attempts to close the
+	  connection are ignored, forcing the remote side to time out the
+	  connection in 12-24 minutes.
+
+	  This offers similar functionality to LaBrea
+	  <http://www.hackbusters.net/LaBrea/>, but does not require dedicated
+	  hardware or IPs. Any TCP port that you would normally DROP or REJECT
+	  can instead become a tarpit.
+
+	  To compile it as a module, choose M here.  If unsure, say N.
+  
 config NETFILTER_XT_TARGET_TCPMSS
 	tristate '"TCPMSS" target support'
 	depends on (IPV6 || IPV6=n)
@@ -1096,6 +1293,350 @@
           <file:Documentation/modules.txt>.  The module will be
           called `ipt_geoip'.  If unsure, say `N'.
 
+config NETFILTER_XT_MATCH_FUZZY
+	tristate '"MATCH" match support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  This module matches a rate limit based on a fuzzy logic controller (FLC).
+
+	  --lower-limit number
+	  Specifies the lower limit, in packets per second.
+
+	  --upper-limit number
+	  Specifies the upper limit, also in packets per second.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_MATCH_IFACE
+	tristate '"IFACE" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  Allows you to check interface states. First, an interface needs to be selected
+	  for comparison. Exactly one option of the following three must be specified:
+
+	  --iface name
+	  Check the states on the given interface.
+
+	  --dev-in
+	  Check the states on the interface on which the packet came in. If the input
+	  device is not set, because for example you are using -m iface in the OUTPUT
+	  chain, this submatch returns false.
+
+	  --dev-out
+	  Check the states on the interface on which the packet will go out. If the
+	  output device is not set, because for example you are using -m iface in the
+	  INPUT chain, this submatch returns false.
+
+	  Following that, one can select the interface properties to check for:
+
+	  [!] --up, [!] --down
+	  Check the UP flag.
+
+	  [!] --broadcast
+	  Check the BROADCAST flag.
+
+	  [!] --loopback
+	  Check the LOOPBACK flag.
+
+	  [!] --pointtopoint
+	  Check the POINTTOPOINT flag.
+
+	  [!] --running
+	  Check the RUNNING flag. Do NOT rely on it!
+
+	  [!] --noarp, [!] --arp
+	  Check the NOARP flag.
+
+	  [!] --promisc
+	  Check the PROMISC flag.
+
+	  [!] --multicast
+	  Check the MULTICAST flag.
+
+	  [!] --dynamic
+	  Check the DYNAMIC flag.
+
+	  [!] --lower-up
+	  Check the LOWER_UP flag.
+
+	  [!] --dormant
+	  Check the DORMANT flag.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_MATCH_IPV4OPTIONS
+	tristate '"IPV4OPTIONS" match support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  The "ipv4options" module allows to match against a set of IPv4 header options.
+
+	  --flags [!]symbol[,[!]symbol...]
+	  Specify the options that shall appear or not appear in the header. Each
+	  symbol specification is delimited by a comma, and a '!' can be prefixed to
+	  a symbol to negate its presence. Symbols are either the name of an IPv4 option
+	  or its number. See examples below.
+
+	  --any
+	  By default, all of the flags specified must be present/absent, that is, they
+	  form an AND condition. Use the --any flag instead to use an OR condition
+	  where only at least one symbol spec must be true.
+
+	  Known symbol names (and their number):
+
+	  1 nop
+	  2 security RFC 1108
+	  3 lsrr Loose Source Routing, RFC 791
+	  4 timestamp RFC 781, 791
+	  7 record-route RFC 791
+	  9 ssrr Strict Source Routing, RFC 791
+	  11 mtu-probe RFC 1063
+	  12 mtu-reply RFC 1063
+	  18 traceroute RFC 1393
+	  20 router-alert RFC 2113
+
+	  Examples:
+
+	  Match packets that have both Timestamp and NOP:
+	  -m ipv4options --flags nop,timestamp
+
+	  ~ that have either of Timestamp or NOP, or both:
+	  --flags nop,timestamp --any
+
+	  ~ that have Timestamp and no NOP: --flags '!nop,timestamp'
+
+	  ~ that have either no NOP or a timestamp (or both conditions):
+	  --flags '!nop,timestamp' --any
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_MATCH_LSCAN
+	tristate '"LSCAN" match support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  Detects simple low-level scan attemps based upon the packet's contents.
+	  (This is different from other implementations, which also try to match the rate of new
+	  connections.) Note that an attempt is only discovered after it has been carried
+	  out, but this information can be used in conjunction with other rules to block
+	  the remote host's future connections. So this match module will match on the
+	  (probably) last packet the remote side will send to your machine.
+
+	  --stealth
+	  Match if the packet did not belong to any known TCP connection
+	  (Stealth/FIN/XMAS/NULL scan).
+
+	  --synscan
+	  Match if the connection was a TCP half-open discovery (SYN scan), i.e. the
+	  connection was torn down after the 2nd packet in the 3-way handshake.
+
+	  --cnscan
+	  Match if the connection was a TCP full open discovery (connect scan), i.e. the
+	  connection was torn down after completion of the 3-way handshake.
+
+	  --grscan
+	  Match if data in the connection only flew in the direction of the remote side,
+	  e.g. if the connection was terminated after a locally running daemon sent its
+	  identification. (E.g. openssh, smtp, ftpd.) This may falsely trigger on
+	  warranted single-direction data flows, usually bulk data transfers such as
+	  FTP DATA connections or IRC DCC. Grab Scan Detection should only be used on
+	  ports where a protocol runs that is guaranteed to do a bidirectional exchange
+	  of bytes.
+
+	  NOTE: Some clients (Windows XP for example) may do what looks like a SYN scan,
+	  so be advised to carefully use xt_lscan in conjunction with blocking rules,
+	  as it may lock out your very own internal network.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+	  
+config NETFILTER_XT_MATCH_PKNOCK
+	tristate '"PKNOCK" match support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  Pknock match implements so-called "port knocking", a stealthy system
+	  for network authentication: a client sends packets to selected
+	  ports in a specific sequence (= simple mode, see example 1 below), or a HMAC
+	  payload to a single port (= complex mode, see example 2 below),
+	  to a target machine that has pknock rule(s) installed. The target machine
+	  then decides whether to unblock or block (again) the pknock-protected port(s).
+	  This can be used, for instance, to avoid brute force
+	  attacks on ssh or ftp services.
+
+	  Example prerequisites:
+
+	  modprobe cn
+
+	  modprobe xt_pknock
+
+	  Example 1 (TCP mode, manual closing of opened port not possible):
+
+	  iptables -P INPUT DROP
+
+	  iptables -A INPUT -p tcp -m pknock --knockports 4002,4001,4004 --strict
+	  --name SSH --time 10 --autoclose 60 --dport 22 -j ACCEPT
+
+	  The rule will allow tcp port 22 for the attempting IP address after the successful reception of TCP SYN packets
+	  to ports 4002, 4001 and 4004, in this order (a.k.a. port-knocking).
+	  Port numbers in the connect sequence must follow the exact specification, no
+	  other ports may be "knocked" inbetween. The rule is named 'SSH', a file of
+	  the same name for tracking port knocking states will be created in
+	  /proc/net/xt_pknock .
+	  Successive port knocks must occur with delay of at most 10 seconds. Port 22 (from the example) will
+	  be automatiaclly dropped after 60 minutes after it was previously allowed.
+
+	  Example 2 (UDP mode, non-replayable and non-spoofable, manual closing
+	  of opened port possible, secure, also called "SPA" = Secure Port
+	  Authorization):
+
+	  iptables -A INPUT -p udp -m pknock --knockports 4000 --name FTP
+	  --opensecret foo --closesecret bar --autoclose 240 -j DROP
+
+	  iptables -A INPUT -p tcp -m pknock --checkip --name FTP --dport 21 -j ACCEPT
+
+	  The first rule will create an "ALLOWED" record in /proc/net/xt_pknock/FTP after
+	  the successful reception of an UDP packet to port 4000. The packet payload must be
+	  constructed as a HMAC256 using "foo" as a key. The HMAC content is the particular 
+	  client's IP address as a 32-bit network byteorder quantity,
+	  plus the number of minutes since the Unix epoch, also as a 32-bit value.
+	  (This is known as Simple Packet Authorization, also called "SPA".)
+	  In such case, any subsequent attempt to connect to port 21 from the client's IP
+	  address will cause such packets to be accepted in the second rule.
+
+	  Similarly, upon reception of an UDP packet constructed the same way, but with
+	  the key "bar", the first rule will remove a previously installed "ALLOWED" state
+	  record from /proc/net/xt_pknock/FTP, which means that the second rule will
+	  stop matching for subsequent connection attempts to port 21.
+	  In case no close-secret packet is received within 4 hours, the first rule
+	  will remove "ALLOWED" record from /proc/net/xt_pknock/FTP itself.
+
+	  Things worth noting:
+
+	  General:
+
+	  Specifying --autoclose 0 means that no automatic close will be performed at all.
+
+	  xt_pknock is capable of sending information about successful matches
+	  via a netlink socket to userspace, should you need to implement your own
+	  way of receiving and handling portknock notifications.
+	  Be sure to read the documentation in the doc/pknock/ directory,
+	  or visit the original site, http://portknocko.berlios.de/ .
+
+	  TCP mode:
+
+	  This mode is not immune against eavesdropping, spoofing and
+	  replaying of the port knock sequence by someone else (but its use may still
+	  be sufficient for scenarios where these factors are not necessarily
+	  this important, such as bare shielding of the SSH port from brute-force attacks).
+	  However, if you need these features, you should use UDP mode.
+
+	  It is always wise to specify three or more ports that are not monotonically
+	  increasing or decreasing with a small stepsize (e.g. 1024,1025,1026)
+	  to avoid accidentally triggering
+	  the rule by a portscan.
+
+	  Specifying the inter-knock timeout with --time is mandatory in TCP mode,
+	  to avoid permanent denial of services by clogging up the peer knock-state tracking table
+	  that xt_pknock internally keeps, should there be a DDoS on the
+	  first-in-row knock port from more hostile IP addresses than what the actual size
+	  of this table is (defaults to 16, can be changed via the "peer_hasht_ents" module parameter).
+	  It is also wise to use as short a time as possible (1 second) for --time
+	  for this very reason. You may also consider increasing the size
+	  of the peer knock-state tracking table. Using --strict also helps,
+	  as it requires the knock sequence to be exact. This means that if the
+	  hostile client sends more knocks to the same port, xt_pknock will
+	  mark such attempt as failed knock sequence and will forget it immediately.
+	  To completely thwart this kind of DDoS, knock-ports would need to have
+	  an additional rate-limit protection. Or you may consider using UDP mode.
+
+	  UDP mode:
+
+	  This mode is immune against eavesdropping, replaying and spoofing attacks.
+	  It is also immune against DDoS attack on the knockport.
+
+	  For this mode to work, the clock difference on the client and on the server
+	  must be below 1 minute. Synchronizing time on both ends by means
+	  of NTP or rdate is strongly suggested.
+
+	  There is a rate limiter built into xt_pknock which blocks any subsequent
+	  open attempt in UDP mode should the request arrive within less than one
+	  minute since the first successful open. This is intentional;
+	  it thwarts eventual spoofing attacks.
+
+	  Because the payload value of an UDP knock packet is influenced by client's IP address,
+	  UDP mode cannot be used across NAT.
+
+	  For sending UDP "SPA" packets, you may use either knock.sh or
+	  knock-orig.sh. These may be found in doc/pknock/util.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_MATCH_PSD
+	tristate '"PSD" match support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  Attempt to detect TCP and UDP port scans. This match was derived from
+	  Solar Designer's scanlogd.
+
+	  --psd-weight-threshold threshold
+	  Total weight of the latest TCP/UDP packets with different
+	  destination ports coming from the same host to be treated as port
+	  scan sequence.
+
+	  --psd-delay-threshold delay
+	  Delay (in hundredths of second) for the packets with different
+	  destination ports coming from the same host to be treated as
+	  possible port scan subsequence.
+
+	  --psd-lo-ports-weight weight
+	  Weight of the packet with privileged (<=1024) destination port.
+
+	  --psd-hi-ports-weight weight
+	  Weight of the packet with non-priviliged destination port.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_MATCH_QUOTA2
+	tristate '"QUOTA2" match support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  The "quota2" implements a named counter which can be increased or decreased
+	  on a per-match basis. Available modes are packet counting or byte counting.
+	  The value of the counter can be read and reset through procfs, thereby making
+	  this match a minimalist accounting tool.
+
+	  When counting down from the initial quota, the counter will stop at 0 and
+	  the match will return false, just like the original "quota" match. In growing
+	  (upcounting) mode, it will always return true.
+
+	  --grow
+	  Count upwards instead of downwards.
+
+	  --no-change
+	  Makes it so the counter or quota amount is never changed by packets matching
+	  this rule. This is only really useful in "quota" mode, as it will allow you to
+	  use complex prerouting rules in association with the quota system, without
+	  counting a packet twice.
+
+	  --name name
+	  Assign the counter a specific name. This option must be present, as an empty
+	  name is not allowed. Names starting with a dot or names containing a slash are
+	  prohibited.
+
+	  [!] --quota iq
+	  Specify the initial quota for this counter. If the counter already exists,
+	  it is not reset. An "!" may be used to invert the result of the match. The
+	  negation has no effect when --grow is used.
+
+	  --packets
+	  Count packets instead of bytes that passed the quota2 match.
+
+	  Because counters in quota2 can be shared, you can combine them for various
+	  purposes, for example, a bytebucket filter that only lets as much traffic go
+	  out as has come in:
+
+	  -A INPUT -p tcp --dport 6881 -m quota --name bt --grow;
+	  -A OUTPUT -p tcp --sport 6881 -m quota --name bt;
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
 endif # NETFILTER_XTABLES
 
 endmenu
diff -u -B -N -r -x '*.rej' -x '*.orig' -x .directory ./asuswrt-merlin-380.66-alpha1-original/release/src-rt-6.x.4708/linux/linux-2.6.36/net/netfilter/Makefile ./asuswrt-merlin-380.66-alpha1/release/src-rt-6.x.4708/linux/linux-2.6.36/net/netfilter/Makefile
--- ./asuswrt-merlin-380.66-alpha1-original/release/src-rt-6.x.4708/linux/linux-2.6.36/net/netfilter/Makefile	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src-rt-6.x.4708/linux/linux-2.6.36/net/netfilter/Makefile	2017-02-12 21:44:27.327773613 -0500
@@ -40,6 +40,7 @@
 
 # generic X tables 
 obj-$(CONFIG_NETFILTER_XTABLES) += x_tables.o xt_tcpudp.o
+obj-y += compat_xtables.o
 
 # combos
 obj-$(CONFIG_NETFILTER_XT_MARK) += xt_mark.o
@@ -61,6 +62,14 @@
 obj-$(CONFIG_NETFILTER_XT_TARGET_RATEEST) += xt_RATEEST.o
 obj-$(CONFIG_NETFILTER_XT_TARGET_SECMARK) += xt_SECMARK.o
 obj-$(CONFIG_NETFILTER_XT_TARGET_TPROXY) += xt_TPROXY.o
+obj-$(CONFIG_NETFILTER_XT_TARGET_CHAOS) += xt_CHAOS.o
+obj-$(CONFIG_NETFILTER_XT_TARGET_DELUDE) += xt_DELUDE.o
+obj-$(CONFIG_NETFILTER_XT_TARGET_RAWNAT) += xt_RAWNAT.o iptable_rawpost.o
+ifneq (${CONFIG_IP6_NF_IPTABLES},)
+obj-${CONFIG_NETFILTER_XT_TARGET_RAWNAT} += ip6table_rawpost.o
+endif
+obj-$(CONFIG_NETFILTER_XT_TARGET_STEAL) += xt_STEAL.o
+obj-$(CONFIG_NETFILTER_XT_TARGET_TARPIT) += xt_TARPIT.o
 obj-$(CONFIG_NETFILTER_XT_TARGET_TCPMSS) += xt_TCPMSS.o
 obj-$(CONFIG_NETFILTER_XT_TARGET_TCPOPTSTRIP) += xt_TCPOPTSTRIP.o
 obj-$(CONFIG_NETFILTER_XT_TARGET_TEE) += xt_TEE.o
@@ -109,6 +118,13 @@
 obj-$(CONFIG_NETFILTER_XT_MATCH_CONDITION) += xt_condition.o
 obj-$(CONFIG_NETFILTER_XT_MATCH_GEOIP) += xt_geoip.o
 obj-$(CONFIG_NETFILTER_XT_MATCH_ETHPORT) += xt_ethport.o
+obj-$(CONFIG_NETFILTER_XT_MATCH_FUZZY) += xt_fuzzy.o
+obj-$(CONFIG_NETFILTER_XT_MATCH_IFACE) += xt_iface.o
+obj-$(CONFIG_NETFILTER_XT_MATCH_IPV4OPTIONS) += xt_ipv4options.o
+obj-$(CONFIG_NETFILTER_XT_MATCH_LSCAN) += xt_lscan.o
+obj-$(CONFIG_NETFILTER_XT_MATCH_PKNOCK) += xt_pknock.o
+obj-$(CONFIG_NETFILTER_XT_MATCH_PSD) += xt_psd.o
+obj-$(CONFIG_NETFILTER_XT_MATCH_QUOTA2) += xt_quota2.o
 
 # ipset
 obj-$(CONFIG_IP_SET) += ipset/
--- ./asuswrt-merlin-380.66-alpha1-original/release/src-rt-7.14.114.x/src/linux/linux-2.6.36/config_base.6a	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src-rt-7.14.114.x/src/linux/linux-2.6.36/config_base.6a	2017-02-24 20:12:15.295315909 -0500
@@ -500,7 +500,7 @@
 CONFIG_NETFILTER_NETLINK_LOG=y
 CONFIG_NF_CONNTRACK=y
 CONFIG_NF_CONNTRACK_MARK=y
-# CONFIG_NF_CONNTRACK_EVENTS is not set
+CONFIG_NF_CONNTRACK_EVENTS=y
 # CONFIG_NF_CT_PROTO_DCCP is not set
 CONFIG_NF_CT_PROTO_GRE=m
 # CONFIG_NF_CT_PROTO_SCTP is not set
@@ -543,15 +543,25 @@
 CONFIG_NETFILTER_XT_TARGET_NOTRACK=y
 # CONFIG_NETFILTER_XT_TARGET_RATEEST is not set
 # CONFIG_NETFILTER_XT_TARGET_TEE is not set
+# CONFIG_NETFILTER_XT_TARGET_TPROXY is not set
 # CONFIG_NETFILTER_XT_TARGET_TRACE is not set
+# CONFIG_NETFILTER_XT_TARGET_ACCOUNT is not set
+CONFIG_NETFILTER_XT_TARGET_CHAOS=m
+CONFIG_NETFILTER_XT_TARGET_DELUDE=m
+# CONFIG_NETFILTER_XT_TARGET_ECHO is not set
+CONFIG_NETFILTER_XT_TARGET_RAWNAT=m
+CONFIG_NETFILTER_XT_TARGET_STEAL=m
+CONFIG_NETFILTER_XT_TARGET_TARPIT=m
 CONFIG_NETFILTER_XT_TARGET_TCPMSS=y
 # CONFIG_NETFILTER_XT_TARGET_TCPOPTSTRIP is not set
+# CONFIG_NETFILTER_XT_MATCH_LAYER7 is not set
+# CONFIG_NETFILTER_XT_MATCH_LAYER7_DEBUG is not set
 
 #
 # Xtables matches
 #
 # CONFIG_NETFILTER_XT_MATCH_CLUSTER is not set
-# CONFIG_NETFILTER_XT_MATCH_COMMENT is not set
+CONFIG_NETFILTER_XT_MATCH_COMMENT=m
 CONFIG_NETFILTER_XT_MATCH_CONNBYTES=y
 CONFIG_NETFILTER_XT_MATCH_CONNLIMIT=y
 CONFIG_NETFILTER_XT_MATCH_CONNMARK=y
@@ -578,9 +588,9 @@
 # CONFIG_NETFILTER_XT_MATCH_REALM is not set
 CONFIG_NETFILTER_XT_MATCH_RECENT=y
 # CONFIG_NETFILTER_XT_MATCH_SCTP is not set
-# CONFIG_NETFILTER_XT_MATCH_SOCKET is not set
+CONFIG_NETFILTER_XT_MATCH_SOCKET=m
 CONFIG_NETFILTER_XT_MATCH_STATE=y
-# CONFIG_NETFILTER_XT_MATCH_STATISTIC is not set
+CONFIG_NETFILTER_XT_MATCH_STATISTIC=m
 CONFIG_NETFILTER_XT_MATCH_STRING=y
 CONFIG_NETFILTER_XT_MATCH_TCPMSS=y
 CONFIG_NETFILTER_XT_MATCH_TIME=y
@@ -588,6 +598,13 @@
 CONFIG_NETFILTER_XT_MATCH_WEBSTR=y
 CONFIG_NETFILTER_XT_MATCH_CONDITION=m
 CONFIG_NETFILTER_XT_MATCH_GEOIP=m
+CONFIG_NETFILTER_XT_MATCH_FUZZY=m
+CONFIG_NETFILTER_XT_MATCH_IFACE=m
+CONFIG_NETFILTER_XT_MATCH_IPV4OPTIONS=m
+CONFIG_NETFILTER_XT_MATCH_LSCAN=m
+CONFIG_NETFILTER_XT_MATCH_PKNOCK=m
+CONFIG_NETFILTER_XT_MATCH_PSD=m
+CONFIG_NETFILTER_XT_MATCH_QUOTA2=m
 CONFIG_IP_SET=m
 CONFIG_IP_SET_MAX=256
 CONFIG_IP_SET_BITMAP_IP=m
@@ -1052,7 +1069,28 @@
 # CONFIG_SATA_INIC162X is not set
 # CONFIG_SATA_SIL24 is not set
 # CONFIG_ATA_SFF is not set
-# CONFIG_MD is not set
+CONFIG_MD=y
+# CONFIG_BLK_DEV_MD is not set
+# CONFIG_MD_LINEAR is not set
+# CONFIG_MD_RAID0 is not set
+# CONFIG_MD_RAID1 is not set
+# CONFIG_MD_RAID10 is not set
+# CONFIG_MD_RAID456 is not set
+# CONFIG_MULTICORE_RAID456 is not set
+# CONFIG_MD_MULTIPATH is not set
+# CONFIG_MD_FAULTY is not set
+CONFIG_BLK_DEV_DM=m
+# CONFIG_DM_DEBUG is not set
+CONFIG_DM_CRYPT=m
+# CONFIG_DM_SNAPSHOT is not set
+# CONFIG_DM_MIRROR is not set
+# CONFIG_DM_LOG_USERSPACE is not set
+# CONFIG_DM_ZERO is not set
+# CONFIG_DM_MULTIPATH is not set
+# CONFIG_DM_MULTIPATH_QL is not set
+# CONFIG_DM_MULTIPATH_ST is not set
+# CONFIG_DM_DELAY is not set
+# CONFIG_DM_UEVENT is not set
 # CONFIG_FUSION is not set
 
 #
@@ -1269,7 +1307,10 @@
 #
 # PPS support
 #
-# CONFIG_PPS is not set
+CONFIG_PPS=m
+# CONFIG_PPS_DEBUG is not set
+CONFIG_PPS_CLIENT_KTIMER=m
+CONFIG_PPS_CLIENT_LDISC=m
 # CONFIG_W1 is not set
 # CONFIG_POWER_SUPPLY is not set
 # CONFIG_HWMON is not set
@@ -1302,14 +1343,14 @@
 # CONFIG_SOUND is not set
 CONFIG_HID_SUPPORT=y
 CONFIG_HID=m
-# CONFIG_HIDRAW is not set
+CONFIG_HIDRAW=y
 
 #
 # USB Input Devices
 #
 CONFIG_USB_HID=m
 # CONFIG_HID_PID is not set
-# CONFIG_USB_HIDDEV is not set
+CONFIG_USB_HIDDEV=y
 
 #
 # USB HID Boot Protocol drivers
@@ -1456,13 +1497,13 @@
 # CONFIG_USB_SERIAL_AIRCABLE is not set
 # CONFIG_USB_SERIAL_ARK3116 is not set
 # CONFIG_USB_SERIAL_BELKIN is not set
-# CONFIG_USB_SERIAL_CH341 is not set
+CONFIG_USB_SERIAL_CH341=m
 # CONFIG_USB_SERIAL_WHITEHEAT is not set
 # CONFIG_USB_SERIAL_DIGI_ACCELEPORT is not set
-# CONFIG_USB_SERIAL_CP210X is not set
+CONFIG_USB_SERIAL_CP210X=m
 # CONFIG_USB_SERIAL_CYPRESS_M8 is not set
 # CONFIG_USB_SERIAL_EMPEG is not set
-# CONFIG_USB_SERIAL_FTDI_SIO is not set
+CONFIG_USB_SERIAL_FTDI_SIO=m
 # CONFIG_USB_SERIAL_FUNSOFT is not set
 # CONFIG_USB_SERIAL_VISOR is not set
 # CONFIG_USB_SERIAL_IPAQ is not set
@@ -1481,7 +1522,7 @@
 # CONFIG_USB_SERIAL_MOS7840 is not set
 # CONFIG_USB_SERIAL_MOTOROLA is not set
 # CONFIG_USB_SERIAL_NAVMAN is not set
-# CONFIG_USB_SERIAL_PL2303 is not set
+CONFIG_USB_SERIAL_PL2303=m
 # CONFIG_USB_SERIAL_OTI6858 is not set
 # CONFIG_USB_SERIAL_QCAUX is not set
 # CONFIG_USB_SERIAL_QUALCOMM is not set
@@ -1606,8 +1647,11 @@
 #
 # CD-ROM/DVD Filesystems
 #
-# CONFIG_ISO9660_FS is not set
-# CONFIG_UDF_FS is not set
+CONFIG_ISO9660_FS=m
+CONFIG_JOLIET=y
+CONFIG_ZISOFS=y
+CONFIG_UDF_FS=m
+CONFIG_UDF_NLS=y
 
 #
 # DOS/FAT/NT Filesystems
@@ -1656,7 +1700,7 @@
 # CONFIG_JFFS2_CMODE_SIZE is not set
 # CONFIG_JFFS2_CMODE_FAVOURLZO is not set
 # CONFIG_LOGFS is not set
-# CONFIG_CRAMFS is not set
+CONFIG_CRAMFS=m
 CONFIG_SQUASHFS=y
 # CONFIG_SQUASHFS_XATTR is not set
 # CONFIG_SQUASHFS_LZO is not set
@@ -1853,7 +1897,7 @@
 CONFIG_CRYPTO_ECB=y
 # CONFIG_CRYPTO_LRW is not set
 # CONFIG_CRYPTO_PCBC is not set
-# CONFIG_CRYPTO_XTS is not set
+CONFIG_CRYPTO_XTS=m
 
 #
 # Hash modes
@@ -1870,41 +1914,42 @@
 # CONFIG_CRYPTO_MD4 is not set
 CONFIG_CRYPTO_MD5=y
 # CONFIG_CRYPTO_MICHAEL_MIC is not set
-# CONFIG_CRYPTO_RMD128 is not set
-# CONFIG_CRYPTO_RMD160 is not set
-# CONFIG_CRYPTO_RMD256 is not set
-# CONFIG_CRYPTO_RMD320 is not set
+CONFIG_CRYPTO_RMD128=m
+CONFIG_CRYPTO_RMD160=m
+CONFIG_CRYPTO_RMD256=m
+CONFIG_CRYPTO_RMD320=m
 CONFIG_CRYPTO_SHA1=y
-# CONFIG_CRYPTO_SHA256 is not set
-# CONFIG_CRYPTO_SHA512 is not set
-# CONFIG_CRYPTO_TGR192 is not set
-# CONFIG_CRYPTO_WP512 is not set
+CONFIG_CRYPTO_SHA256=m
+CONFIG_CRYPTO_SHA512=m
+CONFIG_CRYPTO_TGR192=m
+CONFIG_CRYPTO_WP512=m
 
 #
 # Ciphers
 #
 CONFIG_CRYPTO_AES=y
-# CONFIG_CRYPTO_ANUBIS is not set
+CONFIG_CRYPTO_ANUBIS=m
 CONFIG_CRYPTO_ARC4=y
-# CONFIG_CRYPTO_BLOWFISH is not set
-# CONFIG_CRYPTO_CAMELLIA is not set
-# CONFIG_CRYPTO_CAST5 is not set
-# CONFIG_CRYPTO_CAST6 is not set
+CONFIG_CRYPTO_BLOWFISH=m
+CONFIG_CRYPTO_CAMELLIA=m
+CONFIG_CRYPTO_CAST5=m
+CONFIG_CRYPTO_CAST6=m
 CONFIG_CRYPTO_DES=m
-# CONFIG_CRYPTO_FCRYPT is not set
-# CONFIG_CRYPTO_KHAZAD is not set
-# CONFIG_CRYPTO_SALSA20 is not set
-# CONFIG_CRYPTO_SEED is not set
-# CONFIG_CRYPTO_SERPENT is not set
-# CONFIG_CRYPTO_TEA is not set
-# CONFIG_CRYPTO_TWOFISH is not set
+CONFIG_CRYPTO_FCRYPT=m
+CONFIG_CRYPTO_KHAZAD=m
+CONFIG_CRYPTO_SALSA20=m
+CONFIG_CRYPTO_SEED=m
+CONFIG_CRYPTO_SERPENT=m
+CONFIG_CRYPTO_TEA=m
+CONFIG_CRYPTO_TWOFISH=m
+CONFIG_CRYPTO_TWOFISH_COMMON=m
 
 #
 # Compression
 #
-# CONFIG_CRYPTO_DEFLATE is not set
-# CONFIG_CRYPTO_ZLIB is not set
-# CONFIG_CRYPTO_LZO is not set
+CONFIG_CRYPTO_DEFLATE=m
+CONFIG_CRYPTO_ZLIB=m
+CONFIG_CRYPTO_LZO=m
 
 #
 # Random Number Generation
@@ -1912,6 +1957,7 @@
 CONFIG_CRYPTO_ANSI_CPRNG=y
 CONFIG_CRYPTO_HW=y
 # CONFIG_CRYPTO_DEV_HIFN_795X is not set
+# CONFIG_CRYPTO_DEV_HIFN_795X_RNG is not set
 # CONFIG_BINARY_PRINTF is not set
 
 #
--- ./asuswrt-merlin-380.66-alpha1-original/release/src-rt-7.14.114.x/src/linux/linux-2.6.36/drivers/usb/serial/ftdi_sio.c	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src-rt-7.14.114.x/src/linux/linux-2.6.36/drivers/usb/serial/ftdi_sio.c	2017-02-12 21:44:27.327773613 -0500
@@ -1868,8 +1868,20 @@
 	   are only processed once.  */
 	status = packet[0] & FTDI_STATUS_B0_MASK;
 	if (status != priv->prev_status) {
-		priv->diff_status |= status ^ priv->prev_status;
-		wake_up_interruptible(&priv->delta_msr_wait);
+                char diff_status = status ^ priv->prev_status;
+                priv->diff_status |= diff_status;
+        
+                if (diff_status & FTDI_RS0_RLSD) {
+                        struct tty_struct *tty;
+ 
+                        tty = tty_port_tty_get(&port->port);
+                        if (tty)
+                                usb_serial_handle_dcd_change(port, tty,
+                                                status & FTDI_RS0_RLSD);
+                        tty_kref_put(tty);
+                }
+
+                wake_up_interruptible(&priv->delta_msr_wait);
 		priv->prev_status = status;
 	}
 
--- ./asuswrt-merlin-380.66-alpha1-original/release/src-rt-7.14.114.x/src/linux/linux-2.6.36/drivers/usb/serial/generic.c	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src-rt-7.14.114.x/src/linux/linux-2.6.36/drivers/usb/serial/generic.c	2017-02-12 21:44:27.327773613 -0500
@@ -491,6 +491,15 @@
 	struct tty_port *port = &usb_port->port;
 
 	dbg("%s - port %d, status %d", __func__, usb_port->number, status);
+        if (tty) {
+               struct tty_ldisc *ld = tty_ldisc_ref(tty);
+
+               if (ld) {
+                       if (ld->ops->dcd_change)
+                               ld->ops->dcd_change(tty, status, NULL);
+                       tty_ldisc_deref(ld);
+               }
+        }
 
 	if (status)
 		wake_up_interruptible(&port->open_wait);
diff -u -B -N -r -x '*.rej' -x '*.orig' -x .directory ./asuswrt-merlin-380.66-alpha1-original/release/src-rt-7.14.114.x/src/linux/linux-2.6.36/net/netfilter/Kconfig ./asuswrt-merlin-380.66-alpha1/release/src-rt-7.14.114.x/src/linux/linux-2.6.36/net/netfilter/Kconfig
--- ./asuswrt-merlin-380.66-alpha1-original/release/src-rt-7.14.114.x/src/linux/linux-2.6.36/net/netfilter/Kconfig	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src-rt-7.14.114.x/src/linux/linux-2.6.36/net/netfilter/Kconfig	2017-02-12 21:44:27.335777613 -0500
@@ -589,7 +589,204 @@
 	  packets, for use with security subsystems.
 
 	  To compile it as a module, choose M here.  If unsure, say N.
+	  
+config NETFILTER_XT_TARGET_ACCOUNT
+	tristate '"ACCOUNT" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  The ACCOUNT target is a high performance accounting system for large
+	  local networks. It allows per-IP accounting in whole prefixes of IPv4
+	  addresses with size of up to /8 without the need to add individual
+	  accouting rule for each IP address.
+
+	  The ACCOUNT is designed to be queried for data every second or at
+	  least every ten seconds. It is written as kernel module to handle high
+	  bandwidths without packet loss.
+
+	  The largest possible subnet size is 24 bit, meaning for example 10.0.0.0/8
+	  network. ACCOUNT uses fixed internal data structures
+	  which speeds up the processing of each packet. Furthermore,
+	  accounting data for one complete 192.168.1.X/24 network takes 4 KB of
+	  memory. Memory for 16 or 24 bit networks is only allocated when
+	  needed.
+
+	  To optimize the kernel<->userspace data transfer a bit more, the
+	  kernel module only transfers information about IPs, where the src/dst
+	  packet counter is not 0. This saves precious kernel time.
+
+	  There is no /proc interface as it would be too slow for continuous access.
+	  The read-and-flush query operation is the fastest, as no internal data
+	  snapshot needs to be created&copied for all data. Use the "read"
+	  operation without flush only for debugging purposes!
+
+	  Usage:
+
+	  ACCOUNT takes two mandatory parameters:
+
+	  --addr network/netmask
+	  where network/netmask is the subnet to account for, in CIDR syntax
+
+	  --tname NAME
+	  where NAME is the name of the table where the accounting information
+	  should be stored
+
+	  The subnet 0.0.0.0/0 is a special case: all data are then stored in the src_bytes
+	  and src_packets structure of slot "0". This is useful if you want
+	  to account the overall traffic to/from your internet provider.
+
+	  The data can be queried using the userspace libxt_ACCOUNT_cl library,
+	  and by the reference implementation to show usage of this library,
+	  the iptaccount(8) tool.
+
+	  Here is an example of use:
+
+	  iptables -A FORWARD -j ACCOUNT --addr 0.0.0.0/0 --tname all_outgoing;
+	  iptables -A FORWARD -j ACCOUNT --addr 192.168.1.0/24 --tname sales;
+
+	  This creates two tables called "all_outgoing" and "sales" which can be
+	  queried using the userspace library/iptaccount tool.
+
+	  Note that this target is non-terminating, the packet destined to it
+	  will continue traversing the chain in which it has been used.
+
+	  Also note that once a table has been defined for specific CIDR address/netmask
+	  block, it can be referenced multiple times using -j ACCOUNT, provided
+	  that both the original table name and address/netmask block are specified.
+
+	  For more information go to http://www.intra2net.com/en/developer/ipt_ACCOUNT/
+
+	  To compile it as a module, choose M here.  If unsure, say N.
+
+config NETFILTER_XT_TARGET_CHAOS
+	tristate '"CHAOS" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  Causes confusion on the other end by doing odd things with incoming packets.
+	  CHAOS will randomly reply (or not) with one of its configurable subtargets:
+
+	  --delude
+	  Use the REJECT and DELUDE targets as a base to do a sudden or deferred
+	  connection reset, fooling some network scanners to return non-deterministic
+	  (randomly open/closed) results, and in case it is deemed open, it is actually
+	  closed/filtered.
+
+	  --tarpit
+	  Use the REJECT and TARPIT target as a base to hold the connection until it
+	  times out. This consumes conntrack entries when connection tracking is loaded
+	  (which usually is on most machines), and routers inbetween you and the Internet
+	  may fail to do their connection tracking if they have to handle more
+	  connections than they can.
+
+	  The randomness factor of not replying vs. replying can be set during load-time
+	  of the xt_CHAOS module or during runtime in /sys/modules/xt_CHAOS/parameters.
+
+	  See http://jengelh.medozas.de/projects/chaostables/ for more information
+	  about CHAOS, DELUDE and lscan.
+
+	  To compile it as a module, choose M here.  If unsure, say N.
+
+config NETFILTER_XT_TARGET_DELUDE
+	tristate '"DELUDE" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  The DELUDE target will reply to a SYN packet with SYN-ACK, and to all other
+	  packets with an RST. This will terminate the connection much like REJECT, but
+	  network scanners doing TCP half-open discovery can be spoofed to make them
+	  belive the port is open rather than closed/filtered.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_TARGET_ECHO
+	tristate '"ECHO" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  The ECHO target will send back all packets it received. It serves as an
+	  examples for an Xtables target.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_TARGET_RAWNAT
+	tristate '"RAWNAT" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  The RAWSNAT and RAWDNAT targets provide stateless network address
+	  translation.
+
+	  The RAWDNAT target will rewrite the destination address in the IP header,
+	  much like the NETMAP target.
+
+	  --to-destination addr[/mask]
+	  Network address to map to. The resulting address will be constructed the
+	  following way: All 'one' bits in the mask are filled in from the new
+	  address. All bits that are zero in the mask are filled in from the
+	  original address.
+
+	  The RAWSNAT target will rewrite the source address in the IP header, much
+	  like the NETMAP target. RAWSNAT (and RAWDNAT) may only be
+	  used in the raw or rawpost tables, but can be used in all chains,
+	  which makes it possible to change the source address either when the packet
+	  enters the machine or when it leaves it. The reason for this table constraint
+	  is that RAWNAT must happen outside of connection tracking.
+
+	  --to-source addr[/mask]
+	  Network address to map to. The resulting address will be constructed the
+	  following way: All 'one' bits in the mask are filled in from the new
+	  address. All bits that are zero in the mask are filled in from the
+	  original address.
+
+	  As an example, changing the destination for packets forwarded from an internal
+	  LAN to the internet:
+
+	  -t raw -A PREROUTING -i lan0 -d 212.201.100.135 -j RAWDNAT --to-destination 199.181.132.250;
+	  -t rawpost -A POSTROUTING -o lan0 -s 199.181.132.250 -j RAWSNAT --to-source 212.201.100.135;
+
+	  Note that changing addresses may influence the route selection! Specifically,
+	  it statically NATs packets, not connections, like the normal DNAT/SNAT targets
+	  would do. Also note that it can transform already-NATed connections, as
+	  said, it is completely external to Netfilter's connection tracking/NAT.
+
+	  If the machine itself generates packets that are to be rawnat'ed, you need a
+	  rule in the OUTPUT chain instead, just like you would with the stateful NAT
+	  targets.
+
+	  It may be necessary that in doing so, you also need an extra RAWSNAT rule, to
+	  override the automatic source address selection that the routing code does
+	  before passing packets to iptables. If the connecting socket has not been
+	  explicitly bound to an address, as is the common mode of operation, the address
+	  that will be chosen is the primary address of the device through which the
+	  packet would be routed with its initial destination address - the address as
+	  seen before any RAWNAT takes place.
 
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_TARGET_STEAL
+	tristate '"STEAL" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  Like the DROP target, but does not throw an error like DROP when used in the
+	  OUTPUT chain.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+	  
+config NETFILTER_XT_TARGET_TARPIT
+	tristate '"TARPIT" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  Adds a TARPIT target to iptables, which captures and holds
+	  incoming TCP connections using no local per-connection resources.
+	  Connections are accepted, but immediately switched to the persist
+	  state (0 byte window), in which the remote side stops sending data
+	  and asks to continue every 60-240 seconds. Attempts to close the
+	  connection are ignored, forcing the remote side to time out the
+	  connection in 12-24 minutes.
+
+	  This offers similar functionality to LaBrea
+	  <http://www.hackbusters.net/LaBrea/>, but does not require dedicated
+	  hardware or IPs. Any TCP port that you would normally DROP or REJECT
+	  can instead become a tarpit.
+
+	  To compile it as a module, choose M here.  If unsure, say N.
+	  
 config NETFILTER_XT_TARGET_TCPMSS
 	tristate '"TCPMSS" target support'
 	depends on (IPV6 || IPV6=n)
@@ -1117,6 +1314,350 @@
           <file:Documentation/modules.txt>.  The module will be
           called `ipt_geoip'.  If unsure, say `N'.
 
+config NETFILTER_XT_MATCH_FUZZY
+	tristate '"MATCH" match support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  This module matches a rate limit based on a fuzzy logic controller (FLC).
+
+	  --lower-limit number
+	  Specifies the lower limit, in packets per second.
+
+	  --upper-limit number
+	  Specifies the upper limit, also in packets per second.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_MATCH_IFACE
+	tristate '"IFACE" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  Allows you to check interface states. First, an interface needs to be selected
+	  for comparison. Exactly one option of the following three must be specified:
+
+	  --iface name
+	  Check the states on the given interface.
+
+	  --dev-in
+	  Check the states on the interface on which the packet came in. If the input
+	  device is not set, because for example you are using -m iface in the OUTPUT
+	  chain, this submatch returns false.
+
+	  --dev-out
+	  Check the states on the interface on which the packet will go out. If the
+	  output device is not set, because for example you are using -m iface in the
+	  INPUT chain, this submatch returns false.
+
+	  Following that, one can select the interface properties to check for:
+
+	  [!] --up, [!] --down
+	  Check the UP flag.
+
+	  [!] --broadcast
+	  Check the BROADCAST flag.
+
+	  [!] --loopback
+	  Check the LOOPBACK flag.
+
+	  [!] --pointtopoint
+	  Check the POINTTOPOINT flag.
+
+	  [!] --running
+	  Check the RUNNING flag. Do NOT rely on it!
+
+	  [!] --noarp, [!] --arp
+	  Check the NOARP flag.
+
+	  [!] --promisc
+	  Check the PROMISC flag.
+
+	  [!] --multicast
+	  Check the MULTICAST flag.
+
+	  [!] --dynamic
+	  Check the DYNAMIC flag.
+
+	  [!] --lower-up
+	  Check the LOWER_UP flag.
+
+	  [!] --dormant
+	  Check the DORMANT flag.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_MATCH_IPV4OPTIONS
+	tristate '"IPV4OPTIONS" match support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  The "ipv4options" module allows to match against a set of IPv4 header options.
+
+	  --flags [!]symbol[,[!]symbol...]
+	  Specify the options that shall appear or not appear in the header. Each
+	  symbol specification is delimited by a comma, and a '!' can be prefixed to
+	  a symbol to negate its presence. Symbols are either the name of an IPv4 option
+	  or its number. See examples below.
+
+	  --any
+	  By default, all of the flags specified must be present/absent, that is, they
+	  form an AND condition. Use the --any flag instead to use an OR condition
+	  where only at least one symbol spec must be true.
+
+	  Known symbol names (and their number):
+
+	  1 nop
+	  2 security RFC 1108
+	  3 lsrr Loose Source Routing, RFC 791
+	  4 timestamp RFC 781, 791
+	  7 record-route RFC 791
+	  9 ssrr Strict Source Routing, RFC 791
+	  11 mtu-probe RFC 1063
+	  12 mtu-reply RFC 1063
+	  18 traceroute RFC 1393
+	  20 router-alert RFC 2113
+
+	  Examples:
+
+	  Match packets that have both Timestamp and NOP:
+	  -m ipv4options --flags nop,timestamp
+
+	  ~ that have either of Timestamp or NOP, or both:
+	  --flags nop,timestamp --any
+
+	  ~ that have Timestamp and no NOP: --flags '!nop,timestamp'
+
+	  ~ that have either no NOP or a timestamp (or both conditions):
+	  --flags '!nop,timestamp' --any
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_MATCH_LSCAN
+	tristate '"LSCAN" match support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  Detects simple low-level scan attemps based upon the packet's contents.
+	  (This is different from other implementations, which also try to match the rate of new
+	  connections.) Note that an attempt is only discovered after it has been carried
+	  out, but this information can be used in conjunction with other rules to block
+	  the remote host's future connections. So this match module will match on the
+	  (probably) last packet the remote side will send to your machine.
+
+	  --stealth
+	  Match if the packet did not belong to any known TCP connection
+	  (Stealth/FIN/XMAS/NULL scan).
+
+	  --synscan
+	  Match if the connection was a TCP half-open discovery (SYN scan), i.e. the
+	  connection was torn down after the 2nd packet in the 3-way handshake.
+
+	  --cnscan
+	  Match if the connection was a TCP full open discovery (connect scan), i.e. the
+	  connection was torn down after completion of the 3-way handshake.
+
+	  --grscan
+	  Match if data in the connection only flew in the direction of the remote side,
+	  e.g. if the connection was terminated after a locally running daemon sent its
+	  identification. (E.g. openssh, smtp, ftpd.) This may falsely trigger on
+	  warranted single-direction data flows, usually bulk data transfers such as
+	  FTP DATA connections or IRC DCC. Grab Scan Detection should only be used on
+	  ports where a protocol runs that is guaranteed to do a bidirectional exchange
+	  of bytes.
+
+	  NOTE: Some clients (Windows XP for example) may do what looks like a SYN scan,
+	  so be advised to carefully use xt_lscan in conjunction with blocking rules,
+	  as it may lock out your very own internal network.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+	  
+config NETFILTER_XT_MATCH_PKNOCK
+	tristate '"PKNOCK" match support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  Pknock match implements so-called "port knocking", a stealthy system
+	  for network authentication: a client sends packets to selected
+	  ports in a specific sequence (= simple mode, see example 1 below), or a HMAC
+	  payload to a single port (= complex mode, see example 2 below),
+	  to a target machine that has pknock rule(s) installed. The target machine
+	  then decides whether to unblock or block (again) the pknock-protected port(s).
+	  This can be used, for instance, to avoid brute force
+	  attacks on ssh or ftp services.
+
+	  Example prerequisites:
+
+	  modprobe cn
+
+	  modprobe xt_pknock
+
+	  Example 1 (TCP mode, manual closing of opened port not possible):
+
+	  iptables -P INPUT DROP
+
+	  iptables -A INPUT -p tcp -m pknock --knockports 4002,4001,4004 --strict
+	  --name SSH --time 10 --autoclose 60 --dport 22 -j ACCEPT
+
+	  The rule will allow tcp port 22 for the attempting IP address after the successful reception of TCP SYN packets
+	  to ports 4002, 4001 and 4004, in this order (a.k.a. port-knocking).
+	  Port numbers in the connect sequence must follow the exact specification, no
+	  other ports may be "knocked" inbetween. The rule is named 'SSH', a file of
+	  the same name for tracking port knocking states will be created in
+	  /proc/net/xt_pknock .
+	  Successive port knocks must occur with delay of at most 10 seconds. Port 22 (from the example) will
+	  be automatiaclly dropped after 60 minutes after it was previously allowed.
+
+	  Example 2 (UDP mode, non-replayable and non-spoofable, manual closing
+	  of opened port possible, secure, also called "SPA" = Secure Port
+	  Authorization):
+
+	  iptables -A INPUT -p udp -m pknock --knockports 4000 --name FTP
+	  --opensecret foo --closesecret bar --autoclose 240 -j DROP
+
+	  iptables -A INPUT -p tcp -m pknock --checkip --name FTP --dport 21 -j ACCEPT
+
+	  The first rule will create an "ALLOWED" record in /proc/net/xt_pknock/FTP after
+	  the successful reception of an UDP packet to port 4000. The packet payload must be
+	  constructed as a HMAC256 using "foo" as a key. The HMAC content is the particular 
+	  client's IP address as a 32-bit network byteorder quantity,
+	  plus the number of minutes since the Unix epoch, also as a 32-bit value.
+	  (This is known as Simple Packet Authorization, also called "SPA".)
+	  In such case, any subsequent attempt to connect to port 21 from the client's IP
+	  address will cause such packets to be accepted in the second rule.
+
+	  Similarly, upon reception of an UDP packet constructed the same way, but with
+	  the key "bar", the first rule will remove a previously installed "ALLOWED" state
+	  record from /proc/net/xt_pknock/FTP, which means that the second rule will
+	  stop matching for subsequent connection attempts to port 21.
+	  In case no close-secret packet is received within 4 hours, the first rule
+	  will remove "ALLOWED" record from /proc/net/xt_pknock/FTP itself.
+
+	  Things worth noting:
+
+	  General:
+
+	  Specifying --autoclose 0 means that no automatic close will be performed at all.
+
+	  xt_pknock is capable of sending information about successful matches
+	  via a netlink socket to userspace, should you need to implement your own
+	  way of receiving and handling portknock notifications.
+	  Be sure to read the documentation in the doc/pknock/ directory,
+	  or visit the original site, http://portknocko.berlios.de/ .
+
+	  TCP mode:
+
+	  This mode is not immune against eavesdropping, spoofing and
+	  replaying of the port knock sequence by someone else (but its use may still
+	  be sufficient for scenarios where these factors are not necessarily
+	  this important, such as bare shielding of the SSH port from brute-force attacks).
+	  However, if you need these features, you should use UDP mode.
+
+	  It is always wise to specify three or more ports that are not monotonically
+	  increasing or decreasing with a small stepsize (e.g. 1024,1025,1026)
+	  to avoid accidentally triggering
+	  the rule by a portscan.
+
+	  Specifying the inter-knock timeout with --time is mandatory in TCP mode,
+	  to avoid permanent denial of services by clogging up the peer knock-state tracking table
+	  that xt_pknock internally keeps, should there be a DDoS on the
+	  first-in-row knock port from more hostile IP addresses than what the actual size
+	  of this table is (defaults to 16, can be changed via the "peer_hasht_ents" module parameter).
+	  It is also wise to use as short a time as possible (1 second) for --time
+	  for this very reason. You may also consider increasing the size
+	  of the peer knock-state tracking table. Using --strict also helps,
+	  as it requires the knock sequence to be exact. This means that if the
+	  hostile client sends more knocks to the same port, xt_pknock will
+	  mark such attempt as failed knock sequence and will forget it immediately.
+	  To completely thwart this kind of DDoS, knock-ports would need to have
+	  an additional rate-limit protection. Or you may consider using UDP mode.
+
+	  UDP mode:
+
+	  This mode is immune against eavesdropping, replaying and spoofing attacks.
+	  It is also immune against DDoS attack on the knockport.
+
+	  For this mode to work, the clock difference on the client and on the server
+	  must be below 1 minute. Synchronizing time on both ends by means
+	  of NTP or rdate is strongly suggested.
+
+	  There is a rate limiter built into xt_pknock which blocks any subsequent
+	  open attempt in UDP mode should the request arrive within less than one
+	  minute since the first successful open. This is intentional;
+	  it thwarts eventual spoofing attacks.
+
+	  Because the payload value of an UDP knock packet is influenced by client's IP address,
+	  UDP mode cannot be used across NAT.
+
+	  For sending UDP "SPA" packets, you may use either knock.sh or
+	  knock-orig.sh. These may be found in doc/pknock/util.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_MATCH_PSD
+	tristate '"PSD" match support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  Attempt to detect TCP and UDP port scans. This match was derived from
+	  Solar Designer's scanlogd.
+
+	  --psd-weight-threshold threshold
+	  Total weight of the latest TCP/UDP packets with different
+	  destination ports coming from the same host to be treated as port
+	  scan sequence.
+
+	  --psd-delay-threshold delay
+	  Delay (in hundredths of second) for the packets with different
+	  destination ports coming from the same host to be treated as
+	  possible port scan subsequence.
+
+	  --psd-lo-ports-weight weight
+	  Weight of the packet with privileged (<=1024) destination port.
+
+	  --psd-hi-ports-weight weight
+	  Weight of the packet with non-priviliged destination port.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_MATCH_QUOTA2
+	tristate '"QUOTA2" match support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  The "quota2" implements a named counter which can be increased or decreased
+	  on a per-match basis. Available modes are packet counting or byte counting.
+	  The value of the counter can be read and reset through procfs, thereby making
+	  this match a minimalist accounting tool.
+
+	  When counting down from the initial quota, the counter will stop at 0 and
+	  the match will return false, just like the original "quota" match. In growing
+	  (upcounting) mode, it will always return true.
+
+	  --grow
+	  Count upwards instead of downwards.
+
+	  --no-change
+	  Makes it so the counter or quota amount is never changed by packets matching
+	  this rule. This is only really useful in "quota" mode, as it will allow you to
+	  use complex prerouting rules in association with the quota system, without
+	  counting a packet twice.
+
+	  --name name
+	  Assign the counter a specific name. This option must be present, as an empty
+	  name is not allowed. Names starting with a dot or names containing a slash are
+	  prohibited.
+
+	  [!] --quota iq
+	  Specify the initial quota for this counter. If the counter already exists,
+	  it is not reset. An "!" may be used to invert the result of the match. The
+	  negation has no effect when --grow is used.
+
+	  --packets
+	  Count packets instead of bytes that passed the quota2 match.
+
+	  Because counters in quota2 can be shared, you can combine them for various
+	  purposes, for example, a bytebucket filter that only lets as much traffic go
+	  out as has come in:
+
+	  -A INPUT -p tcp --dport 6881 -m quota --name bt --grow;
+	  -A OUTPUT -p tcp --sport 6881 -m quota --name bt;
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
 endif # NETFILTER_XTABLES
 
 endmenu
diff -u -B -N -r -x '*.rej' -x '*.orig' -x .directory ./asuswrt-merlin-380.66-alpha1-original/release/src-rt-7.14.114.x/src/linux/linux-2.6.36/net/netfilter/Makefile ./asuswrt-merlin-380.66-alpha1/release/src-rt-7.14.114.x/src/linux/linux-2.6.36/net/netfilter/Makefile
--- ./asuswrt-merlin-380.66-alpha1-original/release/src-rt-7.14.114.x/src/linux/linux-2.6.36/net/netfilter/Makefile	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src-rt-7.14.114.x/src/linux/linux-2.6.36/net/netfilter/Makefile	2017-02-12 21:44:27.335777613 -0500
@@ -40,6 +40,7 @@
 
 # generic X tables 
 obj-$(CONFIG_NETFILTER_XTABLES) += x_tables.o xt_tcpudp.o
+obj-y += compat_xtables.o
 
 # combos
 obj-$(CONFIG_NETFILTER_XT_MARK) += xt_mark.o
@@ -61,6 +62,14 @@
 obj-$(CONFIG_NETFILTER_XT_TARGET_RATEEST) += xt_RATEEST.o
 obj-$(CONFIG_NETFILTER_XT_TARGET_SECMARK) += xt_SECMARK.o
 obj-$(CONFIG_NETFILTER_XT_TARGET_TPROXY) += xt_TPROXY.o
+obj-$(CONFIG_NETFILTER_XT_TARGET_CHAOS) += xt_CHAOS.o
+obj-$(CONFIG_NETFILTER_XT_TARGET_DELUDE) += xt_DELUDE.o
+obj-$(CONFIG_NETFILTER_XT_TARGET_RAWNAT) += xt_RAWNAT.o iptable_rawpost.o
+ifneq (${CONFIG_IP6_NF_IPTABLES},)
+obj-${CONFIG_NETFILTER_XT_TARGET_RAWNAT} += ip6table_rawpost.o
+endif
+obj-$(CONFIG_NETFILTER_XT_TARGET_STEAL) += xt_STEAL.o
+obj-$(CONFIG_NETFILTER_XT_TARGET_TARPIT) += xt_TARPIT.o
 obj-$(CONFIG_NETFILTER_XT_TARGET_TCPMSS) += xt_TCPMSS.o
 obj-$(CONFIG_NETFILTER_XT_TARGET_TCPOPTSTRIP) += xt_TCPOPTSTRIP.o
 obj-$(CONFIG_NETFILTER_XT_TARGET_TEE) += xt_TEE.o
@@ -108,6 +117,13 @@
 obj-$(CONFIG_NETFILTER_XT_MATCH_CONDITION) += xt_condition.o
 obj-$(CONFIG_NETFILTER_XT_MATCH_GEOIP) += xt_geoip.o
 obj-$(CONFIG_NETFILTER_XT_MATCH_ETHPORT) += xt_ethport.o
+obj-$(CONFIG_NETFILTER_XT_MATCH_FUZZY) += xt_fuzzy.o
+obj-$(CONFIG_NETFILTER_XT_MATCH_IFACE) += xt_iface.o
+obj-$(CONFIG_NETFILTER_XT_MATCH_IPV4OPTIONS) += xt_ipv4options.o
+obj-$(CONFIG_NETFILTER_XT_MATCH_LSCAN) += xt_lscan.o
+obj-$(CONFIG_NETFILTER_XT_MATCH_PKNOCK) += xt_pknock.o
+obj-$(CONFIG_NETFILTER_XT_MATCH_PSD) += xt_psd.o
+obj-$(CONFIG_NETFILTER_XT_MATCH_QUOTA2) += xt_quota2.o
 
 # ipset
 obj-$(CONFIG_IP_SET) += ipset/
--- ./asuswrt-merlin-380.66-alpha1-original/release/src-rt-7.x.main/src/linux/linux-2.6.36/config_base.6a	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src-rt-7.x.main/src/linux/linux-2.6.36/config_base.6a	2017-02-24 20:12:15.251293910 -0500
@@ -497,7 +497,7 @@
 CONFIG_NETFILTER_NETLINK_LOG=y
 CONFIG_NF_CONNTRACK=y
 CONFIG_NF_CONNTRACK_MARK=y
-# CONFIG_NF_CONNTRACK_EVENTS is not set
+CONFIG_NF_CONNTRACK_EVENTS=y
 # CONFIG_NF_CT_PROTO_DCCP is not set
 CONFIG_NF_CT_PROTO_GRE=y
 # CONFIG_NF_CT_PROTO_SCTP is not set
@@ -540,16 +540,25 @@
 CONFIG_NETFILTER_XT_TARGET_NOTRACK=y
 # CONFIG_NETFILTER_XT_TARGET_RATEEST is not set
 # CONFIG_NETFILTER_XT_TARGET_TEE is not set
+# CONFIG_NETFILTER_XT_TARGET_TPROXY is not set
 # CONFIG_NETFILTER_XT_TARGET_TRACE is not set
+# CONFIG_NETFILTER_XT_TARGET_ACCOUNT is not set
+CONFIG_NETFILTER_XT_TARGET_CHAOS=m
+CONFIG_NETFILTER_XT_TARGET_DELUDE=m
+# CONFIG_NETFILTER_XT_TARGET_ECHO is not set
+CONFIG_NETFILTER_XT_TARGET_RAWNAT=m
+CONFIG_NETFILTER_XT_TARGET_STEAL=m
+CONFIG_NETFILTER_XT_TARGET_TARPIT=m
 CONFIG_NETFILTER_XT_TARGET_TCPMSS=y
 # CONFIG_NETFILTER_XT_TARGET_TCPOPTSTRIP is not set
 # CONFIG_NETFILTER_XT_MATCH_LAYER7 is not set
+# CONFIG_NETFILTER_XT_MATCH_LAYER7_DEBUG is not set
 
 #
 # Xtables matches
 #
 # CONFIG_NETFILTER_XT_MATCH_CLUSTER is not set
-# CONFIG_NETFILTER_XT_MATCH_COMMENT is not set
+CONFIG_NETFILTER_XT_MATCH_COMMENT=m
 CONFIG_NETFILTER_XT_MATCH_CONNBYTES=y
 CONFIG_NETFILTER_XT_MATCH_CONNLIMIT=y
 CONFIG_NETFILTER_XT_MATCH_CONNMARK=y
@@ -576,8 +585,9 @@
 # CONFIG_NETFILTER_XT_MATCH_REALM is not set
 CONFIG_NETFILTER_XT_MATCH_RECENT=y
 # CONFIG_NETFILTER_XT_MATCH_SCTP is not set
+CONFIG_NETFILTER_XT_MATCH_SOCKET=m
 CONFIG_NETFILTER_XT_MATCH_STATE=y
-# CONFIG_NETFILTER_XT_MATCH_STATISTIC is not set
+CONFIG_NETFILTER_XT_MATCH_STATISTIC=m
 CONFIG_NETFILTER_XT_MATCH_STRING=y
 CONFIG_NETFILTER_XT_MATCH_TCPMSS=y
 CONFIG_NETFILTER_XT_MATCH_TIME=y
@@ -585,6 +595,13 @@
 CONFIG_NETFILTER_XT_MATCH_WEBSTR=y
 CONFIG_NETFILTER_XT_MATCH_CONDITION=m
 CONFIG_NETFILTER_XT_MATCH_GEOIP=m
+CONFIG_NETFILTER_XT_MATCH_FUZZY=m
+CONFIG_NETFILTER_XT_MATCH_IFACE=m
+CONFIG_NETFILTER_XT_MATCH_IPV4OPTIONS=m
+CONFIG_NETFILTER_XT_MATCH_LSCAN=m
+CONFIG_NETFILTER_XT_MATCH_PKNOCK=m
+CONFIG_NETFILTER_XT_MATCH_PSD=m
+CONFIG_NETFILTER_XT_MATCH_QUOTA2=m
 CONFIG_IP_SET=m
 CONFIG_IP_SET_MAX=256
 CONFIG_IP_SET_BITMAP_IP=m
@@ -1048,7 +1065,28 @@
 # CONFIG_SATA_INIC162X is not set
 # CONFIG_SATA_SIL24 is not set
 # CONFIG_ATA_SFF is not set
-# CONFIG_MD is not set
+CONFIG_MD=y
+# CONFIG_BLK_DEV_MD is not set
+# CONFIG_MD_LINEAR is not set
+# CONFIG_MD_RAID0 is not set
+# CONFIG_MD_RAID1 is not set
+# CONFIG_MD_RAID10 is not set
+# CONFIG_MD_RAID456 is not set
+# CONFIG_MULTICORE_RAID456 is not set
+# CONFIG_MD_MULTIPATH is not set
+# CONFIG_MD_FAULTY is not set
+CONFIG_BLK_DEV_DM=m
+# CONFIG_DM_DEBUG is not set
+CONFIG_DM_CRYPT=m
+# CONFIG_DM_SNAPSHOT is not set
+# CONFIG_DM_MIRROR is not set
+# CONFIG_DM_LOG_USERSPACE is not set
+# CONFIG_DM_ZERO is not set
+# CONFIG_DM_MULTIPATH is not set
+# CONFIG_DM_MULTIPATH_QL is not set
+# CONFIG_DM_MULTIPATH_ST is not set
+# CONFIG_DM_DELAY is not set
+# CONFIG_DM_UEVENT is not set
 # CONFIG_FUSION is not set
 
 #
@@ -1210,14 +1248,14 @@
 # CONFIG_INPUT_MISC is not set
 CONFIG_HID_SUPPORT=y
 CONFIG_HID=m
-# CONFIG_HIDRAW is not set
+CONFIG_HIDRAW=y
 
 #
 # USB Input Devices
 #
 CONFIG_USB_HID=m
 # CONFIG_HID_PID is not set
-# CONFIG_USB_HIDDEV is not set
+CONFIG_USB_HIDDEV=y
 
 #
 # USB HID Boot Protocol drivers
@@ -1321,7 +1359,10 @@
 #
 # PPS support
 #
-# CONFIG_PPS is not set
+CONFIG_PPS=m
+# CONFIG_PPS_DEBUG is not set
+CONFIG_PPS_CLIENT_KTIMER=m
+CONFIG_PPS_CLIENT_LDISC=m
 # CONFIG_W1 is not set
 # CONFIG_POWER_SUPPLY is not set
 # CONFIG_HWMON is not set
@@ -1449,13 +1490,13 @@
 # CONFIG_USB_SERIAL_AIRCABLE is not set
 # CONFIG_USB_SERIAL_ARK3116 is not set
 # CONFIG_USB_SERIAL_BELKIN is not set
-# CONFIG_USB_SERIAL_CH341 is not set
+CONFIG_USB_SERIAL_CH341=m
 # CONFIG_USB_SERIAL_WHITEHEAT is not set
 # CONFIG_USB_SERIAL_DIGI_ACCELEPORT is not set
-# CONFIG_USB_SERIAL_CP210X is not set
+CONFIG_USB_SERIAL_CP210X=m
 # CONFIG_USB_SERIAL_CYPRESS_M8 is not set
 # CONFIG_USB_SERIAL_EMPEG is not set
-# CONFIG_USB_SERIAL_FTDI_SIO is not set
+CONFIG_USB_SERIAL_FTDI_SIO=m
 # CONFIG_USB_SERIAL_FUNSOFT is not set
 # CONFIG_USB_SERIAL_VISOR is not set
 # CONFIG_USB_SERIAL_IPAQ is not set
@@ -1474,7 +1515,7 @@
 # CONFIG_USB_SERIAL_MOS7840 is not set
 # CONFIG_USB_SERIAL_MOTOROLA is not set
 # CONFIG_USB_SERIAL_NAVMAN is not set
-# CONFIG_USB_SERIAL_PL2303 is not set
+CONFIG_USB_SERIAL_PL2303=m
 # CONFIG_USB_SERIAL_OTI6858 is not set
 # CONFIG_USB_SERIAL_QCAUX is not set
 # CONFIG_USB_SERIAL_QUALCOMM is not set
@@ -1599,8 +1640,11 @@
 #
 # CD-ROM/DVD Filesystems
 #
-# CONFIG_ISO9660_FS is not set
-# CONFIG_UDF_FS is not set
+CONFIG_ISO9660_FS=m
+CONFIG_JOLIET=y
+CONFIG_ZISOFS=y
+CONFIG_UDF_FS=m
+CONFIG_UDF_NLS=y
 
 #
 # DOS/FAT/NT Filesystems
@@ -1649,7 +1693,7 @@
 # CONFIG_JFFS2_CMODE_SIZE is not set
 # CONFIG_JFFS2_CMODE_FAVOURLZO is not set
 # CONFIG_LOGFS is not set
-# CONFIG_CRAMFS is not set
+CONFIG_CRAMFS=m
 CONFIG_SQUASHFS=y
 # CONFIG_SQUASHFS_XATTR is not set
 # CONFIG_SQUASHFS_LZO is not set
@@ -1846,7 +1890,7 @@
 CONFIG_CRYPTO_ECB=y
 # CONFIG_CRYPTO_LRW is not set
 # CONFIG_CRYPTO_PCBC is not set
-# CONFIG_CRYPTO_XTS is not set
+CONFIG_CRYPTO_XTS=m
 
 #
 # Hash modes
@@ -1863,41 +1907,42 @@
 # CONFIG_CRYPTO_MD4 is not set
 CONFIG_CRYPTO_MD5=y
 # CONFIG_CRYPTO_MICHAEL_MIC is not set
-# CONFIG_CRYPTO_RMD128 is not set
-# CONFIG_CRYPTO_RMD160 is not set
-# CONFIG_CRYPTO_RMD256 is not set
-# CONFIG_CRYPTO_RMD320 is not set
+CONFIG_CRYPTO_RMD128=m
+CONFIG_CRYPTO_RMD160=m
+CONFIG_CRYPTO_RMD256=m
+CONFIG_CRYPTO_RMD320=m
 CONFIG_CRYPTO_SHA1=y
 CONFIG_CRYPTO_SHA256=m
 CONFIG_CRYPTO_SHA512=m
-# CONFIG_CRYPTO_TGR192 is not set
-# CONFIG_CRYPTO_WP512 is not set
+CONFIG_CRYPTO_TGR192=m
+CONFIG_CRYPTO_WP512=m
 
 #
 # Ciphers
 #
 CONFIG_CRYPTO_AES=y
-# CONFIG_CRYPTO_ANUBIS is not set
+CONFIG_CRYPTO_ANUBIS=m
 CONFIG_CRYPTO_ARC4=y
-# CONFIG_CRYPTO_BLOWFISH is not set
-# CONFIG_CRYPTO_CAMELLIA is not set
-# CONFIG_CRYPTO_CAST5 is not set
-# CONFIG_CRYPTO_CAST6 is not set
+CONFIG_CRYPTO_BLOWFISH=m
+CONFIG_CRYPTO_CAMELLIA=m
+CONFIG_CRYPTO_CAST5=m
+CONFIG_CRYPTO_CAST6=m
 CONFIG_CRYPTO_DES=m
-# CONFIG_CRYPTO_FCRYPT is not set
-# CONFIG_CRYPTO_KHAZAD is not set
-# CONFIG_CRYPTO_SALSA20 is not set
-# CONFIG_CRYPTO_SEED is not set
-# CONFIG_CRYPTO_SERPENT is not set
-# CONFIG_CRYPTO_TEA is not set
-# CONFIG_CRYPTO_TWOFISH is not set
+CONFIG_CRYPTO_FCRYPT=m
+CONFIG_CRYPTO_KHAZAD=m
+CONFIG_CRYPTO_SALSA20=m
+CONFIG_CRYPTO_SEED=m
+CONFIG_CRYPTO_SERPENT=m
+CONFIG_CRYPTO_TEA=m
+CONFIG_CRYPTO_TWOFISH=m
+CONFIG_CRYPTO_TWOFISH_COMMON=m
 
 #
 # Compression
 #
-# CONFIG_CRYPTO_DEFLATE is not set
-# CONFIG_CRYPTO_ZLIB is not set
-# CONFIG_CRYPTO_LZO is not set
+CONFIG_CRYPTO_DEFLATE=m
+CONFIG_CRYPTO_ZLIB=m
+CONFIG_CRYPTO_LZO=m
 
 #
 # Random Number Generation
@@ -1905,6 +1950,7 @@
 CONFIG_CRYPTO_ANSI_CPRNG=y
 CONFIG_CRYPTO_HW=y
 # CONFIG_CRYPTO_DEV_HIFN_795X is not set
+# CONFIG_CRYPTO_DEV_HIFN_795X_RNG is not set
 # CONFIG_BINARY_PRINTF is not set
 
 #
--- ./asuswrt-merlin-380.66-alpha1-original/release/src-rt-7.x.main/src/linux/linux-2.6.36/drivers/usb/serial/ftdi_sio.c	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src-rt-7.x.main/src/linux/linux-2.6.36/drivers/usb/serial/ftdi_sio.c	2017-02-12 21:44:27.339779614 -0500
@@ -1868,8 +1868,20 @@
 	   are only processed once.  */
 	status = packet[0] & FTDI_STATUS_B0_MASK;
 	if (status != priv->prev_status) {
-		priv->diff_status |= status ^ priv->prev_status;
-		wake_up_interruptible(&priv->delta_msr_wait);
+                char diff_status = status ^ priv->prev_status;
+                priv->diff_status |= diff_status;
+        
+                if (diff_status & FTDI_RS0_RLSD) {
+                        struct tty_struct *tty;
+ 
+                        tty = tty_port_tty_get(&port->port);
+                        if (tty)
+                                usb_serial_handle_dcd_change(port, tty,
+                                                status & FTDI_RS0_RLSD);
+                        tty_kref_put(tty);
+                }
+
+                wake_up_interruptible(&priv->delta_msr_wait);
 		priv->prev_status = status;
 	}
 
--- ./asuswrt-merlin-380.66-alpha1-original/release/src-rt-7.x.main/src/linux/linux-2.6.36/drivers/usb/serial/generic.c	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src-rt-7.x.main/src/linux/linux-2.6.36/drivers/usb/serial/generic.c	2017-02-12 21:44:27.339779614 -0500
@@ -491,6 +491,15 @@
 	struct tty_port *port = &usb_port->port;
 
 	dbg("%s - port %d, status %d", __func__, usb_port->number, status);
+        if (tty) {
+               struct tty_ldisc *ld = tty_ldisc_ref(tty);
+
+               if (ld) {
+                       if (ld->ops->dcd_change)
+                               ld->ops->dcd_change(tty, status, NULL);
+                       tty_ldisc_deref(ld);
+               }
+        }
 
 	if (status)
 		wake_up_interruptible(&port->open_wait);
diff -u -B -N -r -x '*.rej' -x '*.orig' -x .directory ./asuswrt-merlin-380.66-alpha1-original/release/src-rt-7.x.main/src/linux/linux-2.6.36/net/netfilter/Kconfig ./asuswrt-merlin-380.66-alpha1/release/src-rt-7.x.main/src/linux/linux-2.6.36/net/netfilter/Kconfig
--- ./asuswrt-merlin-380.66-alpha1-original/release/src-rt-7.x.main/src/linux/linux-2.6.36/net/netfilter/Kconfig	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src-rt-7.x.main/src/linux/linux-2.6.36/net/netfilter/Kconfig	2017-02-12 21:44:27.343781614 -0500
@@ -589,6 +589,203 @@
 
 	  To compile it as a module, choose M here.  If unsure, say N.
 
+config NETFILTER_XT_TARGET_ACCOUNT
+	tristate '"ACCOUNT" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  The ACCOUNT target is a high performance accounting system for large
+	  local networks. It allows per-IP accounting in whole prefixes of IPv4
+	  addresses with size of up to /8 without the need to add individual
+	  accouting rule for each IP address.
+
+	  The ACCOUNT is designed to be queried for data every second or at
+	  least every ten seconds. It is written as kernel module to handle high
+	  bandwidths without packet loss.
+
+	  The largest possible subnet size is 24 bit, meaning for example 10.0.0.0/8
+	  network. ACCOUNT uses fixed internal data structures
+	  which speeds up the processing of each packet. Furthermore,
+	  accounting data for one complete 192.168.1.X/24 network takes 4 KB of
+	  memory. Memory for 16 or 24 bit networks is only allocated when
+	  needed.
+
+	  To optimize the kernel<->userspace data transfer a bit more, the
+	  kernel module only transfers information about IPs, where the src/dst
+	  packet counter is not 0. This saves precious kernel time.
+
+	  There is no /proc interface as it would be too slow for continuous access.
+	  The read-and-flush query operation is the fastest, as no internal data
+	  snapshot needs to be created&copied for all data. Use the "read"
+	  operation without flush only for debugging purposes!
+
+	  Usage:
+
+	  ACCOUNT takes two mandatory parameters:
+
+	  --addr network/netmask
+	  where network/netmask is the subnet to account for, in CIDR syntax
+
+	  --tname NAME
+	  where NAME is the name of the table where the accounting information
+	  should be stored
+
+	  The subnet 0.0.0.0/0 is a special case: all data are then stored in the src_bytes
+	  and src_packets structure of slot "0". This is useful if you want
+	  to account the overall traffic to/from your internet provider.
+
+	  The data can be queried using the userspace libxt_ACCOUNT_cl library,
+	  and by the reference implementation to show usage of this library,
+	  the iptaccount(8) tool.
+
+	  Here is an example of use:
+
+	  iptables -A FORWARD -j ACCOUNT --addr 0.0.0.0/0 --tname all_outgoing;
+	  iptables -A FORWARD -j ACCOUNT --addr 192.168.1.0/24 --tname sales;
+
+	  This creates two tables called "all_outgoing" and "sales" which can be
+	  queried using the userspace library/iptaccount tool.
+
+	  Note that this target is non-terminating, the packet destined to it
+	  will continue traversing the chain in which it has been used.
+
+	  Also note that once a table has been defined for specific CIDR address/netmask
+	  block, it can be referenced multiple times using -j ACCOUNT, provided
+	  that both the original table name and address/netmask block are specified.
+
+	  For more information go to http://www.intra2net.com/en/developer/ipt_ACCOUNT/
+
+	  To compile it as a module, choose M here.  If unsure, say N.
+
+config NETFILTER_XT_TARGET_CHAOS
+	tristate '"CHAOS" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  Causes confusion on the other end by doing odd things with incoming packets.
+	  CHAOS will randomly reply (or not) with one of its configurable subtargets:
+
+	  --delude
+	  Use the REJECT and DELUDE targets as a base to do a sudden or deferred
+	  connection reset, fooling some network scanners to return non-deterministic
+	  (randomly open/closed) results, and in case it is deemed open, it is actually
+	  closed/filtered.
+
+	  --tarpit
+	  Use the REJECT and TARPIT target as a base to hold the connection until it
+	  times out. This consumes conntrack entries when connection tracking is loaded
+	  (which usually is on most machines), and routers inbetween you and the Internet
+	  may fail to do their connection tracking if they have to handle more
+	  connections than they can.
+
+	  The randomness factor of not replying vs. replying can be set during load-time
+	  of the xt_CHAOS module or during runtime in /sys/modules/xt_CHAOS/parameters.
+
+	  See http://jengelh.medozas.de/projects/chaostables/ for more information
+	  about CHAOS, DELUDE and lscan.
+
+	  To compile it as a module, choose M here.  If unsure, say N.
+
+config NETFILTER_XT_TARGET_DELUDE
+	tristate '"DELUDE" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  The DELUDE target will reply to a SYN packet with SYN-ACK, and to all other
+	  packets with an RST. This will terminate the connection much like REJECT, but
+	  network scanners doing TCP half-open discovery can be spoofed to make them
+	  belive the port is open rather than closed/filtered.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_TARGET_ECHO
+	tristate '"ECHO" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  The ECHO target will send back all packets it received. It serves as an
+	  examples for an Xtables target.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_TARGET_RAWNAT
+	tristate '"RAWNAT" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  The RAWSNAT and RAWDNAT targets provide stateless network address
+	  translation.
+
+	  The RAWDNAT target will rewrite the destination address in the IP header,
+	  much like the NETMAP target.
+
+	  --to-destination addr[/mask]
+	  Network address to map to. The resulting address will be constructed the
+	  following way: All 'one' bits in the mask are filled in from the new
+	  address. All bits that are zero in the mask are filled in from the
+	  original address.
+
+	  The RAWSNAT target will rewrite the source address in the IP header, much
+	  like the NETMAP target. RAWSNAT (and RAWDNAT) may only be
+	  used in the raw or rawpost tables, but can be used in all chains,
+	  which makes it possible to change the source address either when the packet
+	  enters the machine or when it leaves it. The reason for this table constraint
+	  is that RAWNAT must happen outside of connection tracking.
+
+	  --to-source addr[/mask]
+	  Network address to map to. The resulting address will be constructed the
+	  following way: All 'one' bits in the mask are filled in from the new
+	  address. All bits that are zero in the mask are filled in from the
+	  original address.
+
+	  As an example, changing the destination for packets forwarded from an internal
+	  LAN to the internet:
+
+	  -t raw -A PREROUTING -i lan0 -d 212.201.100.135 -j RAWDNAT --to-destination 199.181.132.250;
+	  -t rawpost -A POSTROUTING -o lan0 -s 199.181.132.250 -j RAWSNAT --to-source 212.201.100.135;
+
+	  Note that changing addresses may influence the route selection! Specifically,
+	  it statically NATs packets, not connections, like the normal DNAT/SNAT targets
+	  would do. Also note that it can transform already-NATed connections, as
+	  said, it is completely external to Netfilter's connection tracking/NAT.
+
+	  If the machine itself generates packets that are to be rawnat'ed, you need a
+	  rule in the OUTPUT chain instead, just like you would with the stateful NAT
+	  targets.
+
+	  It may be necessary that in doing so, you also need an extra RAWSNAT rule, to
+	  override the automatic source address selection that the routing code does
+	  before passing packets to iptables. If the connecting socket has not been
+	  explicitly bound to an address, as is the common mode of operation, the address
+	  that will be chosen is the primary address of the device through which the
+	  packet would be routed with its initial destination address - the address as
+	  seen before any RAWNAT takes place.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_TARGET_STEAL
+	tristate '"STEAL" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  Like the DROP target, but does not throw an error like DROP when used in the
+	  OUTPUT chain.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+	  
+config NETFILTER_XT_TARGET_TARPIT
+	tristate '"TARPIT" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  Adds a TARPIT target to iptables, which captures and holds
+	  incoming TCP connections using no local per-connection resources.
+	  Connections are accepted, but immediately switched to the persist
+	  state (0 byte window), in which the remote side stops sending data
+	  and asks to continue every 60-240 seconds. Attempts to close the
+	  connection are ignored, forcing the remote side to time out the
+	  connection in 12-24 minutes.
+
+	  This offers similar functionality to LaBrea
+	  <http://www.hackbusters.net/LaBrea/>, but does not require dedicated
+	  hardware or IPs. Any TCP port that you would normally DROP or REJECT
+	  can instead become a tarpit.
+
+	  To compile it as a module, choose M here.  If unsure, say N.
+	  
 config NETFILTER_XT_TARGET_TCPMSS
 	tristate '"TCPMSS" target support'
 	depends on (IPV6 || IPV6=n)
@@ -1115,6 +1312,350 @@
           <file:Documentation/modules.txt>.  The module will be
           called `ipt_geoip'.  If unsure, say `N'.
 
+config NETFILTER_XT_MATCH_FUZZY
+	tristate '"MATCH" match support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  This module matches a rate limit based on a fuzzy logic controller (FLC).
+
+	  --lower-limit number
+	  Specifies the lower limit, in packets per second.
+
+	  --upper-limit number
+	  Specifies the upper limit, also in packets per second.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_MATCH_IFACE
+	tristate '"IFACE" target support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  Allows you to check interface states. First, an interface needs to be selected
+	  for comparison. Exactly one option of the following three must be specified:
+
+	  --iface name
+	  Check the states on the given interface.
+
+	  --dev-in
+	  Check the states on the interface on which the packet came in. If the input
+	  device is not set, because for example you are using -m iface in the OUTPUT
+	  chain, this submatch returns false.
+
+	  --dev-out
+	  Check the states on the interface on which the packet will go out. If the
+	  output device is not set, because for example you are using -m iface in the
+	  INPUT chain, this submatch returns false.
+
+	  Following that, one can select the interface properties to check for:
+
+	  [!] --up, [!] --down
+	  Check the UP flag.
+
+	  [!] --broadcast
+	  Check the BROADCAST flag.
+
+	  [!] --loopback
+	  Check the LOOPBACK flag.
+
+	  [!] --pointtopoint
+	  Check the POINTTOPOINT flag.
+
+	  [!] --running
+	  Check the RUNNING flag. Do NOT rely on it!
+
+	  [!] --noarp, [!] --arp
+	  Check the NOARP flag.
+
+	  [!] --promisc
+	  Check the PROMISC flag.
+
+	  [!] --multicast
+	  Check the MULTICAST flag.
+
+	  [!] --dynamic
+	  Check the DYNAMIC flag.
+
+	  [!] --lower-up
+	  Check the LOWER_UP flag.
+
+	  [!] --dormant
+	  Check the DORMANT flag.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_MATCH_IPV4OPTIONS
+	tristate '"IPV4OPTIONS" match support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  The "ipv4options" module allows to match against a set of IPv4 header options.
+
+	  --flags [!]symbol[,[!]symbol...]
+	  Specify the options that shall appear or not appear in the header. Each
+	  symbol specification is delimited by a comma, and a '!' can be prefixed to
+	  a symbol to negate its presence. Symbols are either the name of an IPv4 option
+	  or its number. See examples below.
+
+	  --any
+	  By default, all of the flags specified must be present/absent, that is, they
+	  form an AND condition. Use the --any flag instead to use an OR condition
+	  where only at least one symbol spec must be true.
+
+	  Known symbol names (and their number):
+
+	  1 nop
+	  2 security RFC 1108
+	  3 lsrr Loose Source Routing, RFC 791
+	  4 timestamp RFC 781, 791
+	  7 record-route RFC 791
+	  9 ssrr Strict Source Routing, RFC 791
+	  11 mtu-probe RFC 1063
+	  12 mtu-reply RFC 1063
+	  18 traceroute RFC 1393
+	  20 router-alert RFC 2113
+
+	  Examples:
+
+	  Match packets that have both Timestamp and NOP:
+	  -m ipv4options --flags nop,timestamp
+
+	  ~ that have either of Timestamp or NOP, or both:
+	  --flags nop,timestamp --any
+
+	  ~ that have Timestamp and no NOP: --flags '!nop,timestamp'
+
+	  ~ that have either no NOP or a timestamp (or both conditions):
+	  --flags '!nop,timestamp' --any
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_MATCH_LSCAN
+	tristate '"LSCAN" match support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  Detects simple low-level scan attemps based upon the packet's contents.
+	  (This is different from other implementations, which also try to match the rate of new
+	  connections.) Note that an attempt is only discovered after it has been carried
+	  out, but this information can be used in conjunction with other rules to block
+	  the remote host's future connections. So this match module will match on the
+	  (probably) last packet the remote side will send to your machine.
+
+	  --stealth
+	  Match if the packet did not belong to any known TCP connection
+	  (Stealth/FIN/XMAS/NULL scan).
+
+	  --synscan
+	  Match if the connection was a TCP half-open discovery (SYN scan), i.e. the
+	  connection was torn down after the 2nd packet in the 3-way handshake.
+
+	  --cnscan
+	  Match if the connection was a TCP full open discovery (connect scan), i.e. the
+	  connection was torn down after completion of the 3-way handshake.
+
+	  --grscan
+	  Match if data in the connection only flew in the direction of the remote side,
+	  e.g. if the connection was terminated after a locally running daemon sent its
+	  identification. (E.g. openssh, smtp, ftpd.) This may falsely trigger on
+	  warranted single-direction data flows, usually bulk data transfers such as
+	  FTP DATA connections or IRC DCC. Grab Scan Detection should only be used on
+	  ports where a protocol runs that is guaranteed to do a bidirectional exchange
+	  of bytes.
+
+	  NOTE: Some clients (Windows XP for example) may do what looks like a SYN scan,
+	  so be advised to carefully use xt_lscan in conjunction with blocking rules,
+	  as it may lock out your very own internal network.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+	  
+config NETFILTER_XT_MATCH_PKNOCK
+	tristate '"PKNOCK" match support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  Pknock match implements so-called "port knocking", a stealthy system
+	  for network authentication: a client sends packets to selected
+	  ports in a specific sequence (= simple mode, see example 1 below), or a HMAC
+	  payload to a single port (= complex mode, see example 2 below),
+	  to a target machine that has pknock rule(s) installed. The target machine
+	  then decides whether to unblock or block (again) the pknock-protected port(s).
+	  This can be used, for instance, to avoid brute force
+	  attacks on ssh or ftp services.
+
+	  Example prerequisites:
+
+	  modprobe cn
+
+	  modprobe xt_pknock
+
+	  Example 1 (TCP mode, manual closing of opened port not possible):
+
+	  iptables -P INPUT DROP
+
+	  iptables -A INPUT -p tcp -m pknock --knockports 4002,4001,4004 --strict
+	  --name SSH --time 10 --autoclose 60 --dport 22 -j ACCEPT
+
+	  The rule will allow tcp port 22 for the attempting IP address after the successful reception of TCP SYN packets
+	  to ports 4002, 4001 and 4004, in this order (a.k.a. port-knocking).
+	  Port numbers in the connect sequence must follow the exact specification, no
+	  other ports may be "knocked" inbetween. The rule is named 'SSH', a file of
+	  the same name for tracking port knocking states will be created in
+	  /proc/net/xt_pknock .
+	  Successive port knocks must occur with delay of at most 10 seconds. Port 22 (from the example) will
+	  be automatiaclly dropped after 60 minutes after it was previously allowed.
+
+	  Example 2 (UDP mode, non-replayable and non-spoofable, manual closing
+	  of opened port possible, secure, also called "SPA" = Secure Port
+	  Authorization):
+
+	  iptables -A INPUT -p udp -m pknock --knockports 4000 --name FTP
+	  --opensecret foo --closesecret bar --autoclose 240 -j DROP
+
+	  iptables -A INPUT -p tcp -m pknock --checkip --name FTP --dport 21 -j ACCEPT
+
+	  The first rule will create an "ALLOWED" record in /proc/net/xt_pknock/FTP after
+	  the successful reception of an UDP packet to port 4000. The packet payload must be
+	  constructed as a HMAC256 using "foo" as a key. The HMAC content is the particular 
+	  client's IP address as a 32-bit network byteorder quantity,
+	  plus the number of minutes since the Unix epoch, also as a 32-bit value.
+	  (This is known as Simple Packet Authorization, also called "SPA".)
+	  In such case, any subsequent attempt to connect to port 21 from the client's IP
+	  address will cause such packets to be accepted in the second rule.
+
+	  Similarly, upon reception of an UDP packet constructed the same way, but with
+	  the key "bar", the first rule will remove a previously installed "ALLOWED" state
+	  record from /proc/net/xt_pknock/FTP, which means that the second rule will
+	  stop matching for subsequent connection attempts to port 21.
+	  In case no close-secret packet is received within 4 hours, the first rule
+	  will remove "ALLOWED" record from /proc/net/xt_pknock/FTP itself.
+
+	  Things worth noting:
+
+	  General:
+
+	  Specifying --autoclose 0 means that no automatic close will be performed at all.
+
+	  xt_pknock is capable of sending information about successful matches
+	  via a netlink socket to userspace, should you need to implement your own
+	  way of receiving and handling portknock notifications.
+	  Be sure to read the documentation in the doc/pknock/ directory,
+	  or visit the original site, http://portknocko.berlios.de/ .
+
+	  TCP mode:
+
+	  This mode is not immune against eavesdropping, spoofing and
+	  replaying of the port knock sequence by someone else (but its use may still
+	  be sufficient for scenarios where these factors are not necessarily
+	  this important, such as bare shielding of the SSH port from brute-force attacks).
+	  However, if you need these features, you should use UDP mode.
+
+	  It is always wise to specify three or more ports that are not monotonically
+	  increasing or decreasing with a small stepsize (e.g. 1024,1025,1026)
+	  to avoid accidentally triggering
+	  the rule by a portscan.
+
+	  Specifying the inter-knock timeout with --time is mandatory in TCP mode,
+	  to avoid permanent denial of services by clogging up the peer knock-state tracking table
+	  that xt_pknock internally keeps, should there be a DDoS on the
+	  first-in-row knock port from more hostile IP addresses than what the actual size
+	  of this table is (defaults to 16, can be changed via the "peer_hasht_ents" module parameter).
+	  It is also wise to use as short a time as possible (1 second) for --time
+	  for this very reason. You may also consider increasing the size
+	  of the peer knock-state tracking table. Using --strict also helps,
+	  as it requires the knock sequence to be exact. This means that if the
+	  hostile client sends more knocks to the same port, xt_pknock will
+	  mark such attempt as failed knock sequence and will forget it immediately.
+	  To completely thwart this kind of DDoS, knock-ports would need to have
+	  an additional rate-limit protection. Or you may consider using UDP mode.
+
+	  UDP mode:
+
+	  This mode is immune against eavesdropping, replaying and spoofing attacks.
+	  It is also immune against DDoS attack on the knockport.
+
+	  For this mode to work, the clock difference on the client and on the server
+	  must be below 1 minute. Synchronizing time on both ends by means
+	  of NTP or rdate is strongly suggested.
+
+	  There is a rate limiter built into xt_pknock which blocks any subsequent
+	  open attempt in UDP mode should the request arrive within less than one
+	  minute since the first successful open. This is intentional;
+	  it thwarts eventual spoofing attacks.
+
+	  Because the payload value of an UDP knock packet is influenced by client's IP address,
+	  UDP mode cannot be used across NAT.
+
+	  For sending UDP "SPA" packets, you may use either knock.sh or
+	  knock-orig.sh. These may be found in doc/pknock/util.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_MATCH_PSD
+	tristate '"PSD" match support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  Attempt to detect TCP and UDP port scans. This match was derived from
+	  Solar Designer's scanlogd.
+
+	  --psd-weight-threshold threshold
+	  Total weight of the latest TCP/UDP packets with different
+	  destination ports coming from the same host to be treated as port
+	  scan sequence.
+
+	  --psd-delay-threshold delay
+	  Delay (in hundredths of second) for the packets with different
+	  destination ports coming from the same host to be treated as
+	  possible port scan subsequence.
+
+	  --psd-lo-ports-weight weight
+	  Weight of the packet with privileged (<=1024) destination port.
+
+	  --psd-hi-ports-weight weight
+	  Weight of the packet with non-priviliged destination port.
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
+config NETFILTER_XT_MATCH_QUOTA2
+	tristate '"QUOTA2" match support'
+	depends on NETFILTER_XTABLES
+	---help---
+	  The "quota2" implements a named counter which can be increased or decreased
+	  on a per-match basis. Available modes are packet counting or byte counting.
+	  The value of the counter can be read and reset through procfs, thereby making
+	  this match a minimalist accounting tool.
+
+	  When counting down from the initial quota, the counter will stop at 0 and
+	  the match will return false, just like the original "quota" match. In growing
+	  (upcounting) mode, it will always return true.
+
+	  --grow
+	  Count upwards instead of downwards.
+
+	  --no-change
+	  Makes it so the counter or quota amount is never changed by packets matching
+	  this rule. This is only really useful in "quota" mode, as it will allow you to
+	  use complex prerouting rules in association with the quota system, without
+	  counting a packet twice.
+
+	  --name name
+	  Assign the counter a specific name. This option must be present, as an empty
+	  name is not allowed. Names starting with a dot or names containing a slash are
+	  prohibited.
+
+	  [!] --quota iq
+	  Specify the initial quota for this counter. If the counter already exists,
+	  it is not reset. An "!" may be used to invert the result of the match. The
+	  negation has no effect when --grow is used.
+
+	  --packets
+	  Count packets instead of bytes that passed the quota2 match.
+
+	  Because counters in quota2 can be shared, you can combine them for various
+	  purposes, for example, a bytebucket filter that only lets as much traffic go
+	  out as has come in:
+
+	  -A INPUT -p tcp --dport 6881 -m quota --name bt --grow;
+	  -A OUTPUT -p tcp --sport 6881 -m quota --name bt;
+
+	  To compile it as a module, choose M here.  If unsure, say N.  
+
 endif # NETFILTER_XTABLES
 
 endmenu
diff -u -B -N -r -x '*.rej' -x '*.orig' -x .directory ./asuswrt-merlin-380.66-alpha1-original/release/src-rt-7.x.main/src/linux/linux-2.6.36/net/netfilter/Makefile ./asuswrt-merlin-380.66-alpha1/release/src-rt-7.x.main/src/linux/linux-2.6.36/net/netfilter/Makefile
--- ./asuswrt-merlin-380.66-alpha1-original/release/src-rt-7.x.main/src/linux/linux-2.6.36/net/netfilter/Makefile	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src-rt-7.x.main/src/linux/linux-2.6.36/net/netfilter/Makefile	2017-02-12 21:44:27.343781614 -0500
@@ -40,6 +40,7 @@
 
 # generic X tables 
 obj-$(CONFIG_NETFILTER_XTABLES) += x_tables.o xt_tcpudp.o
+obj-y += compat_xtables.o
 
 # combos
 obj-$(CONFIG_NETFILTER_XT_MARK) += xt_mark.o
@@ -61,6 +62,14 @@
 obj-$(CONFIG_NETFILTER_XT_TARGET_RATEEST) += xt_RATEEST.o
 obj-$(CONFIG_NETFILTER_XT_TARGET_SECMARK) += xt_SECMARK.o
 obj-$(CONFIG_NETFILTER_XT_TARGET_TPROXY) += xt_TPROXY.o
+obj-$(CONFIG_NETFILTER_XT_TARGET_CHAOS) += xt_CHAOS.o
+obj-$(CONFIG_NETFILTER_XT_TARGET_DELUDE) += xt_DELUDE.o
+obj-$(CONFIG_NETFILTER_XT_TARGET_RAWNAT) += xt_RAWNAT.o iptable_rawpost.o
+ifneq (${CONFIG_IP6_NF_IPTABLES},)
+obj-${CONFIG_NETFILTER_XT_TARGET_RAWNAT} += ip6table_rawpost.o
+endif
+obj-$(CONFIG_NETFILTER_XT_TARGET_STEAL) += xt_STEAL.o
+obj-$(CONFIG_NETFILTER_XT_TARGET_TARPIT) += xt_TARPIT.o
 obj-$(CONFIG_NETFILTER_XT_TARGET_TCPMSS) += xt_TCPMSS.o
 obj-$(CONFIG_NETFILTER_XT_TARGET_TCPOPTSTRIP) += xt_TCPOPTSTRIP.o
 obj-$(CONFIG_NETFILTER_XT_TARGET_TEE) += xt_TEE.o
@@ -109,6 +118,13 @@
 obj-$(CONFIG_NETFILTER_XT_MATCH_CONDITION) += xt_condition.o
 obj-$(CONFIG_NETFILTER_XT_MATCH_GEOIP) += xt_geoip.o
 obj-$(CONFIG_NETFILTER_XT_MATCH_ETHPORT) += xt_ethport.o
+obj-$(CONFIG_NETFILTER_XT_MATCH_FUZZY) += xt_fuzzy.o
+obj-$(CONFIG_NETFILTER_XT_MATCH_IFACE) += xt_iface.o
+obj-$(CONFIG_NETFILTER_XT_MATCH_IPV4OPTIONS) += xt_ipv4options.o
+obj-$(CONFIG_NETFILTER_XT_MATCH_LSCAN) += xt_lscan.o
+obj-$(CONFIG_NETFILTER_XT_MATCH_PKNOCK) += xt_pknock.o
+obj-$(CONFIG_NETFILTER_XT_MATCH_PSD) += xt_psd.o
+obj-$(CONFIG_NETFILTER_XT_MATCH_QUOTA2) += xt_quota2.o
 
 # ipset
 obj-$(CONFIG_IP_SET) += ipset/
--- ./asuswrt-merlin-380.66-alpha1-original/release/src-rt/Makefile	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src-rt/Makefile	2017-02-24 20:12:15.235285906 -0500
@@ -2290,17 +2290,6 @@
 			sed -i "/CONFIG_USB_WDM/d" $(1); \
 			echo "# CONFIG_USB_WDM is not set" >>$(1); \
 		fi; \
-	else \
-		sed -i "/CONFIG_USB_SERIAL/d" $(1); \
-		echo "# CONFIG_USB_SERIAL is not set" >>$(1); \
-		sed -i "/CONFIG_USB_ACM/d" $(1); \
-		echo "# CONFIG_USB_ACM is not set" >>$(1); \
-		sed -i "/CONFIG_USB_USBNET/d" $(1); \
-		echo "# CONFIG_USB_USBNET is not set" >>$(1); \
-		sed -i "/CONFIG_USB_IPHETH/d" $(1); \
-		echo "# CONFIG_USB_IPHETH is not set" >>$(1); \
-		sed -i "/CONFIG_USB_WDM/d" $(1); \
-		echo "# CONFIG_USB_WDM is not set" >>$(1); \
 	fi; \
 	if [ "$(ARMCPUSMP)" = "up" ]; then \
 		sed -i "/CONFIG_GENERIC_CLOCKEVENTS_BROADCAST/d" $(1); \
@@ -2327,11 +2316,17 @@
 		if [ "$(BCMWL6A)" = "y" ]; then \
 			sed -i "/CONFIG_IP_ADVANCED_ROUTER/d" $(1); \
 			echo "CONFIG_IP_ADVANCED_ROUTER=y" >>$(1); \
+			sed -i "/CONFIG_ASK_IP_FIB_HASH/d" $(1); \
 			echo "CONFIG_ASK_IP_FIB_HASH=y" >>$(1); \
+			sed -i "/CONFIG_IP_FIB_TRIE/d" $(1); \
 			echo "# CONFIG_IP_FIB_TRIE is not set" >>$(1); \
+			sed -i "/CONFIG_IP_MULTIPLE_TABLES/d" $(1); \
 			echo "CONFIG_IP_MULTIPLE_TABLES=y" >>$(1); \
+			sed -i "/CONFIG_IP_ROUTE_MULTIPATH/d" $(1); \
 			echo "CONFIG_IP_ROUTE_MULTIPATH=y" >>$(1); \
+			sed -i "/CONFIG_IP_ROUTE_VERBOSE/d" $(1); \
 			echo "# CONFIG_IP_ROUTE_VERBOSE is not set" >>$(1); \
+			sed -i "/CONFIG_IP_MROUTE_MULTIPLE_TABLES/d" $(1); \
 			echo "CONFIG_IP_MROUTE_MULTIPLE_TABLES=y" >>$(1); \
 		fi ; \
 		if [ "$(CONFIG_BCMWL5)" != "y" ]; then \
@@ -2535,12 +2530,6 @@
 	else \
 		echo "CONFIG_LINUX_MTD=$(LINUX_MTD)" >>$(1); \
 	fi; \
-	sed -i "/CONFIG_NF_CONNTRACK_EVENTS/d" $(1); \
-	if [ "$(BWDPI)" = "y" ]; then \
-		echo "CONFIG_NF_CONNTRACK_EVENTS=y" >>$(1); \
-	else \
-		echo "# CONFIG_NF_CONNTRACK_EVENTS is not set" >>$(1); \
-	fi; \
 	if [ "$(USB_DEBUG)" = "y" ]; then \
 		sed -i "/CONFIG_USB_DEBUG/d" $(1); \
 		echo "CONFIG_USB_DEBUG=y" >>$(1); \
--- ./asuswrt-merlin-380.66-alpha1-original/release/src-rt/target.mak	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src-rt/target.mak	2017-02-24 20:13:30.765035102 -0500
@@ -1,91 +1,91 @@
 # Broadcom MIPS platform
 export RT-N66U := IPV6SUPP=y HTTPS=y MIPS32=r2 BCM57=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y \
-                  MEDIASRV=y MODEM=y MODEMPIN=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y CLOUDSYNC=y \
+                  MEDIASRV=n MODEM=y MODEMPIN=y PARENTAL2=n ACCEL_PPTPD=y PRINTER=y WEBDAV=n CLOUDSYNC=n \
                   USB="USB" GRO=n APP="nolocaldm" BUILD_NAME="RT-N66U" DNSMQ=y LFP=y NVRAM_64K=y NFS=y STAINFO=y \
                   RTN66U=y BECEEM=y ODMPID=y OPENVPN=y OPTIMIZE_XBOX=y JFFS2=y SSH=y DISK_MONITOR=y BCMWL6=y \
-                  USER_LOW_RSSI=y  TIMEMACHINE=n MDNS=n VPNC=y JFFS2LOG=n DROPBOXCLIENT=y FTPCLIENT=y SAMBACLIENT=y \
-                  PROXYSTA=y AUTODICT=y CFE_NVRAM_CHK=y DUMP_OOPS_MSG=y DEBUGFS=n SWEBDAVCLIENT=y SNMPD=y ROG=y \
-                  TFAT=n HFS="none" NTFS="paragon" IPSECMOD=y REPEATER=y DUALWAN=y YANDEXDNS=n DNSFILTER=y SAMBA36=y \
-                  CLOUDCHECK=y NATNL=y JFFS2USERICON=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y LAN50=y ATCOVER=y GETREALIP=y \
+                  USER_LOW_RSSI=y  TIMEMACHINE=n MDNS=n VPNC=y JFFS2LOG=n DROPBOXCLIENT=n FTPCLIENT=y SAMBACLIENT=y \
+                  PROXYSTA=y AUTODICT=y CFE_NVRAM_CHK=y DUMP_OOPS_MSG=y DEBUGFS=n SWEBDAVCLIENT=n SNMPD=n ROG=y \
+                  TFAT=n HFS="none" NTFS="paragon" IPSECMOD=y REPEATER=y DUALWAN=n YANDEXDNS=n DNSFILTER=n SAMBA36=y \
+                  CLOUDCHECK=n NATNL=y JFFS2USERICON=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y LAN50=y ATCOVER=y GETREALIP=y \
                   TOR=y UPNPIGD2=n DNSSEC=y NANO=y
 
 export RT-AC66U := IPV6SUPP=y HTTPS=y MIPS32=r2 BCM57=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y STAINFO=y \
-                   MEDIASRV=y MODEM=y MODEMPIN=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y CLOUDSYNC=y \
+                   MEDIASRV=n MODEM=y MODEMPIN=y PARENTAL2=n ACCEL_PPTPD=y PRINTER=y WEBDAV=n CLOUDSYNC=n \
                    USB="USB" GRO=n APP="nolocaldm" BUILD_NAME="RT-AC66U" DNSMQ=y LFP=y NVRAM_64K=y ROG=y \
                    RTAC66U=y BCMWL6=y BCMNAND=y PROXYSTA=y BECEEM=y ODMPID=y OPENVPN=y JFFS2=y AUTODICT=y \
-                   SSH=y BOOTLZMA=y DUAL_TRX=n DISK_MONITOR=y OPTIMIZE_XBOX=y NFS=y USER_LOW_RSSI=y SNMPD=y \
-                   TIMEMACHINE=n MDNS=n VPNC=y JFFS2LOG=y DUMP_OOPS_MSG=y DEBUGFS=n DROPBOXCLIENT=y TEMPROOTFS=y \
-                   FTPCLIENT=y SAMBACLIENT=y SWEBDAVCLIENT=y TOR=y UPNPIGD2=n STAINFO=y CLOUDCHECK=y NATNL=y \
+                   SSH=y BOOTLZMA=y DUAL_TRX=n DISK_MONITOR=y OPTIMIZE_XBOX=y NFS=y USER_LOW_RSSI=y SNMPD=n \
+                   TIMEMACHINE=n MDNS=n VPNC=y JFFS2LOG=y DUMP_OOPS_MSG=y DEBUGFS=n DROPBOXCLIENT=n TEMPROOTFS=y \
+                   FTPCLIENT=y SAMBACLIENT=y SWEBDAVCLIENT=n TOR=y UPNPIGD2=n STAINFO=y CLOUDCHECK=n NATNL=y \
                    REBOOT_SCHEDULE=y TFAT=n HFS="none" NTFS="paragon" MULTICASTIPTV=y QUAGGA=y JFFS2USERICON=y \
                    LAN50=y ATCOVER=y GETREALIP=y \
-                   IPSECMOD=y REPEATER=y DUALWAN=y YANDEXDNS=n DNSFILTER=y SAMBA36=y DNSSEC=y NANO=y
+                   IPSECMOD=y REPEATER=y DUALWAN=n YANDEXDNS=n DNSFILTER=n SAMBA36=y DNSSEC=y NANO=y
 
 # Broadcom ARM platform
 export RT-AC68U_BASE := IPV6SUPP=y HTTPS=y ARM=y BCM57=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y \
-                        SAMBA3=y MEDIASRV=y MODEM=y MODEMPIN=y BECEEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y STAINFO=y \
-                        WEBDAV=y CLOUDSYNC=y USB="USB" GRO=y APP="nolocaldm" PROXYSTA=y FTPCLIENT=y SAMBACLIENT=y \
+                        SAMBA3=y MEDIASRV=n MODEM=y MODEMPIN=y BECEEM=y PARENTAL2=n ACCEL_PPTPD=y PRINTER=y STAINFO=y \
+                        WEBDAV=n CLOUDSYNC=n USB="USB" GRO=y APP="nolocaldm" PROXYSTA=y FTPCLIENT=y SAMBACLIENT=y \
                         DNSMQ=y SHP=y NVRAM_64K=y RTAC68U=y BCMWL6=y BCMWL6A=y TUNEK="n" BCM5301X=y DISK_MONITOR=y \
-                        BTN_WIFITOG=y LOGO_LED=y OPTIMIZE_XBOX=y ODMPID=y LED_BTN=y ROG=y SSD=n EMAIL=y \
-                        BCMSMP=y XHCI=y SSH=y JFFS2=y NFS=y OPENVPN=y USER_LOW_RSSI=y DROPBOXCLIENT=y \
-                        TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BCMFA=y BWDPI=y HSPOT=y \
-                        DUMP_OOPS_MSG=y LINUX_MTD="64" BCM7=n TEMPROOTFS=y DEBUGFS=y SWEBDAVCLIENT=y SNMPD=y TOR=y \
+                        BTN_WIFITOG=y LOGO_LED=y OPTIMIZE_XBOX=y ODMPID=y LED_BTN=y ROG=y SSD=n EMAIL=n \
+                        BCMSMP=y XHCI=y SSH=y JFFS2=y NFS=y OPENVPN=y USER_LOW_RSSI=y DROPBOXCLIENT=n \
+                        TIMEMACHINE=n MDNS=n VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BCMFA=y BWDPI=n HSPOT=y \
+                        DUMP_OOPS_MSG=y LINUX_MTD="64" BCM7=n TEMPROOTFS=y DEBUGFS=y SWEBDAVCLIENT=n SNMPD=n TOR=y \
                         MULTICASTIPTV=y QUAGGA=y BCM_RECVFILE=y LAN50=y ATCOVER=y GETREALIP=y \
-                        BCM5301X_TRAFFIC_MONITOR=n CLOUDCHECK=y NATNL=y JFFS2USERICON=y REBOOT_SCHEDULE=y \
-                        TFAT=y HFS="tuxera" NTFS="tuxera" IPSECMOD=n REPEATER=y DUALWAN=y DNSFILTER=y SAMBA36=y UPNPIGD2=n \
+                        BCM5301X_TRAFFIC_MONITOR=n CLOUDCHECK=n NATNL=y JFFS2USERICON=y REBOOT_SCHEDULE=y \
+                        TFAT=y HFS="tuxera" NTFS="tuxera" IPSECMOD=n REPEATER=y DUALWAN=n DNSFILTER=n SAMBA36=y UPNPIGD2=n \
                         DNSSEC=y NANO=y
 
 export RT-AC68U := $(RT-AC68U_BASE) FAKEHDR=y FORCE_SN=380 FORCE_EN=1031
 export RT-AC68U += BUILD_NAME="RT-AC68U"
 
 export RT-AC56U := IPV6SUPP=y HTTPS=y ARM=y BCM57=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y ROMCCODE=y \
-                   SAMBA3=y MEDIASRV=y MODEM=y MODEMPIN=y BECEEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y STAINFO=y \
-                   WEBDAV=y CLOUDSYNC=y USB="USB" GRO=y APP="nolocaldm" BUILD_NAME="RT-AC56U" PROXYSTA=y BCM_RECVFILE=y \
+                   SAMBA3=y MEDIASRV=n MODEM=y MODEMPIN=y BECEEM=y PARENTAL2=n ACCEL_PPTPD=y PRINTER=y STAINFO=y \
+                   WEBDAV=n CLOUDSYNC=n USB="USB" GRO=y APP="nolocaldm" BUILD_NAME="RT-AC56U" PROXYSTA=y BCM_RECVFILE=y \
                    DNSMQ=y SHP=y NVRAM_64K=y RTAC56U=y BCMWL6=y BCMWL6A=y TUNEK="n" BCM5301X=y DISK_MONITOR=y \
-                   BTN_WIFITOG=y TURBO=y BCM4352_5G=y LANWAN_LED=y OPTIMIZE_XBOX=y ODMPID=y BCMSMP=y DROPBOXCLIENT=y \
-                   LED_ALL=y XHCI=y SSH=y JFFS2=y NFS=y OPENVPN=y LINUX_MTD="64" USER_LOW_RSSI=y ROG=y EMAIL=y \
-                   TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BCMFA=y XHCIMODE=y LAN50=y ATCOVER=y GETREALIP=y \
-                   TEMPROOTFS=y FTPCLIENT=y SAMBACLIENT=y SWEBDAVCLIENT=y SNMPD=y DEBUGFS=y BWDPI=y TOR=y \
-                   BCM5301X_TRAFFIC_MONITOR=n CLOUDCHECK=y DUMP_OOPS_MSG=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y \
-                   TFAT=y HFS="tuxera" NTFS="tuxera" IPSECMOD=n REPEATER=y DUALWAN=y DNSFILTER=y SAMBA36=y UPNPIGD2=n \
+                   BTN_WIFITOG=y TURBO=y BCM4352_5G=y LANWAN_LED=y OPTIMIZE_XBOX=y ODMPID=y BCMSMP=y DROPBOXCLIENT=n \
+                   LED_ALL=y XHCI=y SSH=y JFFS2=y NFS=y OPENVPN=y LINUX_MTD="64" USER_LOW_RSSI=y ROG=y EMAIL=n \
+                   TIMEMACHINE=n MDNS=n VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BCMFA=y XHCIMODE=y LAN50=y ATCOVER=y GETREALIP=y \
+                   TEMPROOTFS=y FTPCLIENT=y SAMBACLIENT=y SWEBDAVCLIENT=n SNMPD=n DEBUGFS=y BWDPI=n TOR=y \
+                   BCM5301X_TRAFFIC_MONITOR=n CLOUDCHECK=n DUMP_OOPS_MSG=y REBOOT_SCHEDULE=y MULTICASTIPTV=y QUAGGA=y \
+                   TFAT=y HFS="tuxera" NTFS="tuxera" IPSECMOD=n REPEATER=y DUALWAN=n DNSFILTER=n SAMBA36=y UPNPIGD2=n \
                    DNSSEC=y NANO=y
 
 export RT-AC87U := IPV6SUPP=y HTTPS=y ARM=y BCM57=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y WPS_DUALBAND=y ROG=y \
-                   SAMBA3=y MEDIASRV=y MODEM=y MODEMPIN=y BECEEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y STAINFO=y \
-                   WEBDAV=y CLOUDSYNC=y USB="USB" GRO=y APP="nolocaldm" BUILD_NAME="RT-AC87U" PROXYSTA=y \
+                   SAMBA3=y MEDIASRV=n MODEM=y MODEMPIN=y BECEEM=y PARENTAL2=n ACCEL_PPTPD=y PRINTER=y STAINFO=y \
+                   WEBDAV=n CLOUDSYNC=n USB="USB" GRO=y APP="nolocaldm" BUILD_NAME="RT-AC87U" PROXYSTA=y \
                    DNSMQ=y SHP=y NVRAM_64K=y BCMWL6=y BCMWL6A=y TUNEK="n" BCM5301X=y DISK_MONITOR=y JFFS2=y BCM_RECVFILE=y \
                    BTN_WIFITOG=y OPTIMIZE_XBOX=y ODMPID=y LED_BTN=y LED2_BTN=y DUMP_OOPS_MSG=y \
-                   BCMSMP=y XHCI=y DUALWAN=y REPEATER=y USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y EMAIL=y DROPBOXCLIENT=y \
-                   MDNS=y VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BCMFA=y RGMII_BCM_FA=y XHCIMODE=y DISABLE_REPEATER_UI=y \
-                   QTN=y TFTP=y LINUX_MTD="64" RGMII_BRCM5301X=y BWDPI=y RTAC87U=y EXT_LED_WPS=y DEBUGFS=y \
-                   BCM5301X_TRAFFIC_MONITOR=n NATNL=y JFFS2USERICON=y CLOUDCHECK=y LACP=n HW_DUALWAN=y \
-                   SWEBDAVCLIENT=y FTPCLIENT=y SAMBACLIENT=y TEMPROOTFS=y JFFS2ND_BACKUP=y SNMPD=y TOR=y REBOOT_SCHEDULE=y \
+                   BCMSMP=y XHCI=y DUALWAN=n REPEATER=y USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=n EMAIL=n DROPBOXCLIENT=n \
+                   MDNS=n VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BCMFA=y RGMII_BCM_FA=y XHCIMODE=y DISABLE_REPEATER_UI=y \
+                   QTN=y TFTP=y LINUX_MTD="64" RGMII_BRCM5301X=y BWDPI=n RTAC87U=y EXT_LED_WPS=y DEBUGFS=y \
+                   BCM5301X_TRAFFIC_MONITOR=n NATNL=y JFFS2USERICON=y CLOUDCHECK=n LACP=n HW_DUALWAN=n \
+                   SWEBDAVCLIENT=n FTPCLIENT=y SAMBACLIENT=y TEMPROOTFS=y JFFS2ND_BACKUP=y SNMPD=n TOR=y REBOOT_SCHEDULE=y \
                    MULTICASTIPTV=y QUAGGA=y LAN50=y ATCOVER=y GETREALIP=y NANO=y \
-                   TFAT=y HFS="tuxera" NTFS="tuxera" NFS=y SSH=y IPSECMOD=n DNSFILTER=y SAMBA36=y UPNPIGD2=n DNSSEC=y
+                   TFAT=y HFS="tuxera" NTFS="tuxera" NFS=y SSH=y IPSECMOD=n DNSFILTER=n SAMBA36=y UPNPIGD2=n DNSSEC=y
 
-export RT-AC3200 := IPV6SUPP=y HTTPS=y ARM=y BCM57=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y \
-                    MODEM=y MODEMPIN=y BECEEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y CLOUDSYNC=y SWEBDAVCLIENT=y \
+export RT-AC3200 := IPV6SUPP=y HTTPS=y ARM=y BCM57=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=n \
+                    MODEM=y MODEMPIN=y BECEEM=y PARENTAL2=n ACCEL_PPTPD=y PRINTER=y WEBDAV=n CLOUDSYNC=n SWEBDAVCLIENT=n \
                     USB="USB" GRO=y APP="nolocaldm" BUILD_NAME="RT-AC3200" PROXYSTA=y DNSMQ=y SHP=y NVRAM_64K=y STAINFO=y \
                     RTAC3200=y BCMWL6=y BCMWL6A=y BCM7=y TUNEK="n" BCM5301X=y DISK_MONITOR=y BTN_WIFITOG=y OPTIMIZE_XBOX=y \
-                    ODMPID=y LED_BTN=y BCMSMP=y DUALWAN=y REPEATER=y USER_LOW_RSSI=y OPENVPN=y \
-                    TIMEMACHINE=y MDNS=y TFAT=y NTFS="tuxera" HFS="tuxera" VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BCMFA=y \
-                    XHCI=y BWDPI=y DUMP_OOPS_MSG=y DHDAP=y GMAC3=y HSPOT=n LINUX_MTD="64" DEBUGFS=y NVSIZE="64" \
-                    TEMPROOTFS=y SSH=y DROPBOXCLIENT=y FTPCLIENT=y SAMBACLIENT=y NOWL=y EMAIL=y BCM_RECVFILE=y REBOOT_SCHEDULE=y \
-                    BCM5301X_TRAFFIC_MONITOR=n DPSTA=y CLOUDCHECK=y NATNL=y JFFS2USERICON=y DISABLE_REPEATER_UI=y \
+                    ODMPID=y LED_BTN=y BCMSMP=y DUALWAN=n REPEATER=y USER_LOW_RSSI=y OPENVPN=y \
+                    TIMEMACHINE=n MDNS=n TFAT=y NTFS="tuxera" HFS="tuxera" VPNC=y BRCM_NAND_JFFS2=y JFFS2LOG=y BCMFA=y \
+                    XHCI=y BWDPI=n DUMP_OOPS_MSG=y DHDAP=y GMAC3=y HSPOT=n LINUX_MTD="64" DEBUGFS=y NVSIZE="64" \
+                    TEMPROOTFS=y SSH=y DROPBOXCLIENT=n FTPCLIENT=y SAMBACLIENT=y NOWL=y EMAIL=n BCM_RECVFILE=y REBOOT_SCHEDULE=y \
+                    BCM5301X_TRAFFIC_MONITOR=n DPSTA=y CLOUDCHECK=n NATNL=y JFFS2USERICON=y DISABLE_REPEATER_UI=y \
                     MULTICASTIPTV=y QUAGGA=y LAN50=y ATCOVER=y GETREALIP=y NANO=y \
-                    NFS=y IPSECMOD=n DNSFILTER=y SAMBA36=y SNMPD=y TOR=y UPNPIGD2=n DNSSEC=y
+                    NFS=y IPSECMOD=n DNSFILTER=n SAMBA36=y SNMPD=n TOR=y UPNPIGD2=n DNSSEC=y
 
 
-export RT-AC88U_BASE := IPV6SUPP=y HTTPS=y ARM=y BCM57=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=y \
-                        MODEM=y MODEMPIN=y BECEEM=y PARENTAL2=y ACCEL_PPTPD=y PRINTER=y WEBDAV=y CLOUDSYNC=y SWEBDAVCLIENT=y \
+export RT-AC88U_BASE := IPV6SUPP=y HTTPS=y ARM=y BCM57=y AUTODICT=y BBEXTRAS=y USBEXTRAS=y EBTABLES=y SAMBA3=y MEDIASRV=n \
+                        MODEM=y MODEMPIN=y BECEEM=y PARENTAL2=n ACCEL_PPTPD=y PRINTER=y WEBDAV=n CLOUDSYNC=n SWEBDAVCLIENT=n \
                         USB="USB" GRO=y APP="nolocaldm" DNSMQ=y SHP=y BCMWL6=y BCMWL6A=y TUNEK="n" BCM5301X=y JFFS2USERICON=y \
                         DISK_MONITOR=y BTN_WIFITOG=y OPTIMIZE_XBOX=y LED_BTN=y ODMPID=y BCMSMP=y XHCI=y FTPCLIENT=y \
-                        DUALWAN=y REPEATER=y USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=y MDNS=y VPNC=y BRCM_NAND_JFFS2=y \
+                        DUALWAN=n REPEATER=y USER_LOW_RSSI=y OPENVPN=y TIMEMACHINE=n MDNS=n VPNC=y BRCM_NAND_JFFS2=y \
                         REBOOT_SCHEDULE=y FORCE_AUTO_UPGRADE=n FAKEID=n MULTICASTIPTV=y QUAGGA=y SAMBACLIENT=y \
-                        JFFS2LOG=y BWDPI=y DUMP_OOPS_MSG=y LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=y SSH=y WIFILOGO=n \
-                        DROPBOXCLIENT=y EMAIL=y ROG=y SSD=n STAINFO=y BCM5301X_TRAFFIC_MONITOR=n PROXYSTA=y \
-                        BCM_RECVFILE=y TFAT=y NTFS="tuxera" HFS="tuxera" CFEZ=y NATNL=y ERPTEST=n CLOUDCHECK=y \
+                        JFFS2LOG=y BWDPI=n DUMP_OOPS_MSG=y LINUX_MTD="64" DEBUGFS=y TEMPROOTFS=y SSH=y WIFILOGO=n \
+                        DROPBOXCLIENT=n EMAIL=n ROG=y SSD=n STAINFO=y BCM5301X_TRAFFIC_MONITOR=n PROXYSTA=y \
+                        BCM_RECVFILE=y TFAT=y NTFS="tuxera" HFS="tuxera" CFEZ=y NATNL=y ERPTEST=n CLOUDCHECK=n \
                         ASPMD=n BCMEVENT=n WLCLMLOAD=n BCM_MUMIMO=y LAN50=y ATCOVER=y GETREALIP=y \
-                        NFS=y IPSECMOD=n DNSFILTER=y SAMBA36=y SNMPD=y TOR=y UPNPIGD2=n DNSSEC=y NANO=y
+                        NFS=y IPSECMOD=n DNSFILTER=n SAMBA36=y SNMPD=n TOR=y UPNPIGD2=n DNSSEC=y NANO=y
 
 export RT-AC88U := $(RT-AC88U_BASE)
 export RT-AC88U += BUILD_NAME="RT-AC88U" RGMII_BRCM5301X=y SWITCH2="RTL8365MB" BCM_MMC=n BCM_7114=y NOWLALL=n \
--- ./asuswrt-merlin-380.66-alpha1-original/release/src/router/Makefile	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src/router/Makefile	2017-02-24 20:12:15.219277908 -0500
@@ -1103,6 +1103,7 @@
 endif
 
 	@cd $(TARGETDIR) && $(TOP)/others/rootprep${BCMEX}.sh
+	[ -d $${PWD%%/release*}/../asuswrt-merlin-addon/staging ] && cp -afv $${PWD%%/release*}/../asuswrt-merlin-addon/staging/* $(TARGETDIR)
 	@echo ---
 
 ifeq ($(RTCONFIG_QCA),y)
@@ -1152,7 +1153,7 @@
 	@mv $(TARGETDIR)/lib/modules/*/kernel/drivers/bluetooth $(PLATFORMDIR)/extras/bluetooth/drivers/ || true
 	@mv $(TARGETDIR)/lib/modules/*/kernel/net/bluetooth $(PLATFORMDIR)/extras/bluetooth/net/ || true
 
-	$(if $(RTCONFIG_USB_MODEM),@cp -f,@mv) $(TARGETDIR)/lib/modules/*/kernel/drivers/usb/usbserial.*o $(PLATFORMDIR)/extras/ || true
+	@cp -f $(TARGETDIR)/lib/modules/*/kernel/drivers/usb/usbserial.*o $(PLATFORMDIR)/extras/ || true
 	$(if $(RTCONFIG_USB_MODEM),@cp -f,@mv) $(TARGETDIR)/lib/modules/*/kernel/drivers/usb/option.*o $(PLATFORMDIR)/extras/ || true
 	$(if $(RTCONFIG_USB_MODEM),@cp -f,@mv) $(TARGETDIR)/lib/modules/*/kernel/drivers/usb/*acm.*o $(PLATFORMDIR)/extras/ || true
 	$(if $(RTCONFIG_USB_MODEM),@cp -f,@mv) $(TARGETDIR)/lib/modules/*/kernel/drivers/usb/cdc-wdm.*o $(PLATFORMDIR)/extras/ || true
@@ -1167,9 +1168,9 @@
 	$(if $(RTCONFIG_USB_MODEM),@cp -f,@mv) $(TARGETDIR)/lib/modules/*/kernel/drivers/net/usb/ipheth.*o $(PLATFORMDIR)/extras/ || true
 	$(if $(RTCONFIG_USB_MODEM),@cp -f,@mv) $(TARGETDIR)/lib/modules/*/kernel/drivers/usb/sierra.*o $(PLATFORMDIR)/extras/ || true
 
-	@mv $(TARGETDIR)/lib/modules/*/kernel/drivers/usb/usbkbd.*o $(PLATFORMDIR)/extras/ || true
+	@cp -f $(TARGETDIR)/lib/modules/*/kernel/drivers/usb/usbkbd.*o $(PLATFORMDIR)/extras/ || true
 	@mv $(TARGETDIR)/lib/modules/*/kernel/drivers/usb/usbmouse.*o $(PLATFORMDIR)/extras/ || true
-	@mv $(TARGETDIR)/lib/modules/*/kernel/drivers/usb/hid*.*o $(PLATFORMDIR)/extras/ || true
+	@cp -f $(TARGETDIR)/lib/modules/*/kernel/drivers/usb/hid*.*o $(PLATFORMDIR)/extras/ || true
 	@mv $(TARGETDIR)/lib/modules/*/kernel/drivers/usb/ipw.*o $(PLATFORMDIR)/extras/ || true
 	@mv $(TARGETDIR)/lib/modules/*/kernel/drivers/usb/audio.*o $(PLATFORMDIR)/extras/ || true
 	@mv $(TARGETDIR)/lib/modules/*/kernel/drivers/usb/ov51*.*o $(PLATFORMDIR)/extras/ || true
@@ -1182,15 +1183,13 @@
 	@rm -rf $(TARGETDIR)/lib/modules/*/kernel/drivers/sound || true
 	@mv $(TARGETDIR)/lib/modules/*/kernel/sound/* $(PLATFORMDIR)/extras/ || true
 	@rm -rf $(TARGETDIR)/lib/modules/*/kernel/sound || true
-	@mv $(TARGETDIR)/lib/modules/*/kernel/drivers/input/* $(PLATFORMDIR)/extras/ || true
-	@rm -rf $(TARGETDIR)/lib/modules/*/kernel/drivers/input || true
-	@mv $(TARGETDIR)/lib/modules/*/kernel/drivers/hid/* $(PLATFORMDIR)/extras/ || true
-	@rm -rf $(TARGETDIR)/lib/modules/*/kernel/drivers/hid || true
+	@cp -f $(TARGETDIR)/lib/modules/*/kernel/drivers/input/* $(PLATFORMDIR)/extras/ || true
+	@cp -f $(TARGETDIR)/lib/modules/*/kernel/drivers/hid/* $(PLATFORMDIR)/extras/ || true
 	@cp -f $(TARGETDIR)/lib/modules/*/kernel/drivers/net/bcm57*.*o $(PLATFORMDIR)/extras/ || true
 	$(if $(RTCONFIG_PPTP),@cp -f,@mv) $(TARGETDIR)/lib/modules/*/kernel/drivers/net/pptp.*o $(PLATFORMDIR)/extras/ || true
 	$(if $(RTCONFIG_L2TP),@cp -f,@mv) $(TARGETDIR)/lib/modules/*/kernel/drivers/net/pppol2tp.*o $(PLATFORMDIR)/extras/ || true
 	@mv $(TARGETDIR)/lib/modules/*/kernel/drivers/net/ppp_deflate.*o  $(PLATFORMDIR)/extras/ || true
-	$(if $(RTCONFIG_IPSEC),@cp -f,@mv) $(TARGETDIR)/lib/modules/*/kernel/crypto/* $(PLATFORMDIR)/extras/ || true
+	@cp -f $(TARGETDIR)/lib/modules/*/kernel/crypto/* $(PLATFORMDIR)/extras/ || true
 	[ ! -f $(TARGETDIR)/lib/modules/*/kernel/crypto/* ] && rm -rf $(TARGETDIR)/lib/modules/*/kernel/crypto || true
 
 	$(if $(NEED_EX_NLS),@cp -f,@mv) $(TARGETDIR)/lib/modules/*/kernel/fs/nls_cp9*.*o $(PLATFORMDIR)/extras/ || true
@@ -2814,6 +2813,14 @@
 tor-install: tor
 	install -D tor/src/or/tor $(INSTALLDIR)/tor/usr/sbin/Tor
 	$(STRIP) $(INSTALLDIR)/tor/usr/sbin/Tor
+	install -D tor/src/tools/tor-checkkey $(INSTALLDIR)/tor/usr/sbin/Tor-checkkey
+	$(STRIP) $(INSTALLDIR)/tor/usr/sbin/Tor-checkkey
+	install -D tor/src/tools/tor-gencert $(INSTALLDIR)/tor/usr/sbin/Tor-gencert
+	$(STRIP) $(INSTALLDIR)/tor/usr/sbin/Tor-gencert
+	install -D tor/src/tools/tor-resolve $(INSTALLDIR)/tor/usr/sbin/Tor-resolve
+	$(STRIP) $(INSTALLDIR)/tor/usr/sbin/Tor-resolve
+	install -Dpv tor/src/config/geoip $(TARGETDIR)/rom/tor/geoip
+	install -Dpv tor/src/config/geoip6 $(TARGETDIR)/rom/tor/geoip6
 
 tor-clean:
 	[ ! -f tor/Makefile ] || $(MAKE) -C tor clean
--- ./asuswrt-merlin-380.66-alpha1-original/release/src/router/rc/Makefile	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src/router/rc/Makefile	2017-02-24 20:12:15.195265907 -0500
@@ -700,10 +700,10 @@
 ate-broadcom.o:
 	@-cp -f ./prebuild/ate-broadcom.o .
 endif
-ifneq ($(wildcard ./prebuild/ate.o),)
-ate.o:
-	@-cp -f ./prebuild/ate.o .
-endif
+#ifneq ($(wildcard ./prebuild/ate.o),)
+#ate.o:
+#	@-cp -f ./prebuild/ate.o .
+#endif
 ifeq ($(BUILD_NAME), RT-AC68U)
 ifneq ($(wildcard ./prebuild/cfe.o),)
 cfe.o:
@@ -746,12 +746,12 @@
 endif
 endif
 
-ifeq ($(and $(CONFIG_BCMWL5),$(RTCONFIG_DUALWAN)),y)
-ifneq ($(wildcard ./prebuild/dualwan.o),)
-dualwan.o:
-	@-cp -f ./prebuild/dualwan.o .
-endif
-endif
+#ifeq ($(and $(CONFIG_BCMWL5),$(RTCONFIG_DUALWAN)),y)
+#ifneq ($(wildcard ./prebuild/dualwan.o),)
+#dualwan.o:
+#	@-cp -f ./prebuild/dualwan.o .
+#endif
+#endif
 
 %.o: %.c
 	@echo " [rc] CC $@"
--- ./asuswrt-merlin-380.66-alpha1-original/release/src/router/rc/firewall.c	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src/router/rc/firewall.c	2017-02-24 20:34:57.654066773 -0500
@@ -195,43 +195,6 @@
 	return (r & af);
 }
 
-// address_checker function was stolen from  qos.c
-#define TYPE_IP 0
-#define TYPE_MAC 1
-#define TYPE_IPRANGE 2
-static void address_checker(int *addr_type, char *addr_old, char *addr_new, int len)
-{
-	char *second, *last_dot;
-	int len_to_minus, len_to_dot;
-
-	second = strchr(addr_old, '-');
-	if (second != NULL)
-	{
-		*addr_type = TYPE_IPRANGE;
-		if (strchr(second+1, '.') != NULL){
-			// long notation
-			strncpy(addr_new, addr_old, len);
-		}
-		else{
-			// short notation
-			last_dot = strrchr(addr_old, '.');
-			len_to_minus = second - addr_old;
-			len_to_dot = last_dot - addr_old;
-			strncpy(addr_new, addr_old, len_to_minus+1);
-			strncpy(addr_new + len_to_minus + 1, addr_new, len_to_dot+1);
-			strcpy(addr_new + len_to_minus + len_to_dot + 2, second+1);
-		}
-	}
-	else
-	{
-		if (strlen(addr_old) == 17)
-			*addr_type = TYPE_MAC;
-		else
-			*addr_type = TYPE_IP;
-		strncpy(addr_new, addr_old, len);
-	}
-}
-
 /*
 void nvram_unsets(char *name, int count)
 {
@@ -1386,39 +1349,6 @@
 	//if (nvram_match("misc_natlog_x", "1"))
 	// 	fprintf(fp, "-A PREROUTING -i %s -j LOG --log-prefix ALERT --log-level 4\n", wan_if);
 
-#ifdef RTCONFIG_AUTOCOVER_SIP
-	if(nvram_get_int("atcover_sip") == 1 && !strcmp(lan_ip, nvram_default_get("lan_ipaddr")) && strcmp(lan_ip, nvram_safe_get("atcover_sip_ip"))){
-		int dst_port;
-
-		if(nvram_get_int("atcover_sip_type") == 1)
-			dst_port = 80;
-		else
-			dst_port = 18017;
-
-		fprintf(fp, "-A PREROUTING -d %s -p tcp --dport 80 -j DNAT --to-destination %s:%d\n",
-				nvram_safe_get("atcover_sip_ip"),
-				lan_ip,
-				dst_port
-				);
-	}
-#endif
-
-	/* VSERVER chain */
-	if (inet_addr_(wan_ip))
-		fprintf(fp, "-A PREROUTING -d %s -j VSERVER\n", wan_ip);
-	/* prerouting physical WAN port connection (DHCP+PPP case) */
-	if (strcmp(wan_if, wanx_if) && inet_addr_(wanx_ip))
-		fprintf(fp, "-A PREROUTING -d %s -j VSERVER\n", wanx_ip);
-
-
-#ifdef RTCONFIG_CAPTIVE_PORTAL
-	if(nvram_match("chilli_enable", "1")){
-		fprintf(fp, "-I PREROUTING 1 --dst 192.168.182.0/24 -p tcp --dport 80 -j REDIRECT --to-ports 3990\n");     
-	 	fprintf(fp, "-I PREROUTING 2 --src 192.168.182.0/24 --dst %s -p tcp --dport 80 -j REDIRECT --to-ports 8083\n", lan_ip);     
-//	 	fprintf(fp, "-I PREROUTING 2 --src 192.168.182.0/24 --dst 192.168.182.1 -p tcp --dport 50000 -j DNAT --to %s:8082\n", lan_ip);     
-	}
-#endif
-
 #ifdef RTCONFIG_TOR
 	 if(nvram_match("Tor_enable", "1")){
 		nv = strdup(nvram_safe_get("Tor_redir_list"));
@@ -1431,7 +1361,7 @@
 			while ((b = strsep(&nv, "<")) != NULL) {
 				if (strlen(b)==0) continue;
 				memset(addr_new, 0, sizeof(addr_new));
-				address_checker(&addr_type, b, addr_new, sizeof(addr_new));
+				addr_type = addr_type_parse(b, addr_new, sizeof(addr_new));
 				if (addr_type == TYPE_IP){
 					fprintf(fp, "-A PREROUTING -i %s -p udp --dport 53 -s %s -j REDIRECT --to-ports %s\n", lan_if, addr_new, nvram_safe_get("Tor_dnsport"));
 					fprintf(fp, "-A PREROUTING -i %s -p udp --dport 123 -s %s -j REDIRECT --to-ports 123\n", lan_if, addr_new); // requires an NTP server
@@ -1453,6 +1383,39 @@
 	}
 #endif
 
+#ifdef RTCONFIG_AUTOCOVER_SIP
+	if(nvram_get_int("atcover_sip") == 1 && !strcmp(lan_ip, nvram_default_get("lan_ipaddr")) && strcmp(lan_ip, nvram_safe_get("atcover_sip_ip"))){
+		int dst_port;
+
+		if(nvram_get_int("atcover_sip_type") == 1)
+			dst_port = 80;
+		else
+			dst_port = 18017;
+
+		fprintf(fp, "-A PREROUTING -d %s -p tcp --dport 80 -j DNAT --to-destination %s:%d\n",
+				nvram_safe_get("atcover_sip_ip"),
+				lan_ip,
+				dst_port
+				);
+	}
+#endif
+
+	/* VSERVER chain */
+	if (inet_addr_(wan_ip))
+		fprintf(fp, "-A PREROUTING -d %s -j VSERVER\n", wan_ip);
+	/* prerouting physical WAN port connection (DHCP+PPP case) */
+	if (strcmp(wan_if, wanx_if) && inet_addr_(wanx_ip))
+		fprintf(fp, "-A PREROUTING -d %s -j VSERVER\n", wanx_ip);
+
+
+#ifdef RTCONFIG_CAPTIVE_PORTAL
+	if(nvram_match("chilli_enable", "1")){
+		fprintf(fp, "-I PREROUTING 1 --dst 192.168.182.0/24 -p tcp --dport 80 -j REDIRECT --to-ports 3990\n");     
+	 	fprintf(fp, "-I PREROUTING 2 --src 192.168.182.0/24 --dst %s -p tcp --dport 80 -j REDIRECT --to-ports 8083\n", lan_ip);     
+//	 	fprintf(fp, "-I PREROUTING 2 --src 192.168.182.0/24 --dst 192.168.182.1 -p tcp --dport 50000 -j DNAT --to %s:8082\n", lan_ip);     
+	}
+#endif
+
 #ifdef RTCONFIG_YANDEXDNS
 	if (nvram_get_int("yadns_enable_x"))
 		write_yandexdns_filter(fp, lan_if, lan_ip);
@@ -1636,22 +1599,6 @@
 		//if (nvram_match("misc_natlog_x", "1"))
 		//	fprintf(fp, "-A PREROUTING -i %s -j LOG --log-prefix ALERT --log-level 4\n", wan_if);
 
-		/* VSERVER chain */
-		if(inet_addr_(wan_ip))
-			fprintf(fp, "-A PREROUTING -d %s -j VSERVER\n", wan_ip);
-
-		// wanx_if != wan_if means DHCP+PPP exist?
-		if (dualwan_unit__nonusbif(unit) && strcmp(wan_if, wanx_if) && inet_addr_(wanx_ip))
-			fprintf(fp, "-A PREROUTING -d %s -j VSERVER\n", wanx_ip);
-
-#ifdef RTCONFIG_CAPTIVE_PORTAL
-		if(nvram_match("chilli_enable", "1")){
-			fprintf(fp, "-I PREROUTING 1 --dst 192.168.182.0/24 -p tcp --dport 80 -j REDIRECT --to-ports 3990\n");     
-	 		fprintf(fp, "-I PREROUTING 2 --src 192.168.182.0/24 --dst %s -p tcp --dport 80 -j REDIRECT --to-ports 8083\n", lan_ip);     
-//	 		fprintf(fp, "-I PREROUTING 2 --src 192.168.182.0/24 --dst 192.168.182.1 -p tcp --dport 50000 -j DNAT --to %s:8082\n", lan_ip);     
-		}
-#endif
-
 #ifdef RTCONFIG_TOR
 	 if(nvram_match("Tor_enable", "1")){
 		nv = strdup(nvram_safe_get("Tor_redir_list"));
@@ -1664,7 +1611,7 @@
 			while ((b = strsep(&nv, "<")) != NULL) {
 				if (strlen(b)==0) continue;
 				memset(addr_new, 0, sizeof(addr_new));
-				address_checker(&addr_type, b, addr_new, sizeof(addr_new));
+				addr_type = addr_type_parse(b, addr_new, sizeof(addr_new));
 				if (addr_type == TYPE_IP){
 					fprintf(fp, "-A PREROUTING -i %s -p udp --dport 53 -s %s -j REDIRECT --to-ports %s\n", lan_if, addr_new, nvram_safe_get("Tor_dnsport"));
 					fprintf(fp, "-A PREROUTING -i %s -p udp --dport 123 -s %s -j REDIRECT --to-ports 123\n", lan_if, addr_new); // requires an NTP server
@@ -1685,6 +1632,22 @@
 		}
 	}
 #endif
+
+		/* VSERVER chain */
+		if(inet_addr_(wan_ip))
+			fprintf(fp, "-A PREROUTING -d %s -j VSERVER\n", wan_ip);
+
+		// wanx_if != wan_if means DHCP+PPP exist?
+		if (dualwan_unit__nonusbif(unit) && strcmp(wan_if, wanx_if) && inet_addr_(wanx_ip))
+			fprintf(fp, "-A PREROUTING -d %s -j VSERVER\n", wanx_ip);
+
+#ifdef RTCONFIG_CAPTIVE_PORTAL
+		if(nvram_match("chilli_enable", "1")){
+			fprintf(fp, "-I PREROUTING 1 --dst 192.168.182.0/24 -p tcp --dport 80 -j REDIRECT --to-ports 3990\n");     
+	 		fprintf(fp, "-I PREROUTING 2 --src 192.168.182.0/24 --dst %s -p tcp --dport 80 -j REDIRECT --to-ports 8083\n", lan_ip);     
+//	 		fprintf(fp, "-I PREROUTING 2 --src 192.168.182.0/24 --dst 192.168.182.1 -p tcp --dport 50000 -j DNAT --to %s:8082\n", lan_ip);     
+		}
+#endif
 	}
 	if (!fp) {
 		sprintf(name, "%s___", NAT_RULES);
@@ -3289,7 +3252,7 @@
 			while ((b = strsep(&nv, "<")) != NULL) {
 				if (strlen(b)==0) continue;
 				memset(addr_new, 0, sizeof(addr_new));
-				address_checker(&addr_type, b, addr_new, sizeof(addr_new));
+				addr_type = addr_type_parse(b, addr_new, sizeof(addr_new));
 				if (addr_type == TYPE_IP){
 					fprintf(fp, "-I FORWARD -i %s -s %s -j DROP\n", lan_if, addr_new);
 				}
@@ -4381,7 +4344,7 @@
 			while ((b = strsep(&nv, "<")) != NULL) {
 				if (strlen(b)==0) continue;
 				memset(addr_new, 0, sizeof(addr_new));
-				address_checker(&addr_type, b, addr_new, sizeof(addr_new));
+				addr_type = addr_type_parse(b, addr_new, sizeof(addr_new));
 				if (addr_type == TYPE_IP){
 					fprintf(fp, "-I FORWARD -i %s -s %s -j DROP\n", lan_if, addr_new);
 				}
--- ./asuswrt-merlin-380.66-alpha1-original/release/src/router/rc/openvpn.c	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src/router/rc/openvpn.c	2017-02-24 20:12:15.123229905 -0500
@@ -1473,11 +1473,11 @@
 		fprintf(fp, "#!/bin/sh\n");
 		sprintf(&buffer[0], "vpn_server%d_proto", serverNum);
 		strncpy(&buffer[0], nvram_safe_get(&buffer[0]), BUF_SIZE);
-		fprintf(fp, "iptables -t nat -I PREROUTING -p %s ", strtok(&buffer[0], "-"));
-		sprintf(&buffer[0], "vpn_server%d_port", serverNum);
-		fprintf(fp, "--dport %d -j ACCEPT\n", nvram_get_int(&buffer[0]));
-		sprintf(&buffer[0], "vpn_server%d_proto", serverNum);
-		strncpy(&buffer[0], nvram_safe_get(&buffer[0]), BUF_SIZE);
+//		fprintf(fp, "iptables -t nat -I PREROUTING -p %s ", strtok(&buffer[0], "-"));
+//		sprintf(&buffer[0], "vpn_server%d_port", serverNum);
+//		fprintf(fp, "--dport %d -j ACCEPT\n", nvram_get_int(&buffer[0]));
+//		sprintf(&buffer[0], "vpn_server%d_proto", serverNum);
+//		strncpy(&buffer[0], nvram_safe_get(&buffer[0]), BUF_SIZE);
 		fprintf(fp, "iptables -I INPUT -p %s ", strtok(&buffer[0], "-"));
 		sprintf(&buffer[0], "vpn_server%d_port", serverNum);
 		fprintf(fp, "--dport %d -j ACCEPT\n", nvram_get_int(&buffer[0]));
--- ./asuswrt-merlin-380.66-alpha1-original/release/src/router/rc/services.c	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src/router/rc/services.c	2017-02-24 20:12:15.115225899 -0500
@@ -3475,8 +3475,8 @@
 	if (pids("ntpclient"))
 		killall_tk("ntpclient");
 
-	if (!pids("ntp"))
-		_eval(ntp_argv, NULL, 0, &pid);
+//	if (!pids("ntp"))
+//		_eval(ntp_argv, NULL, 0, &pid);
 
 	return 0;
 }
--- ./asuswrt-merlin-380.66-alpha1-original/release/src/router/rc/wan.c	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src/router/rc/wan.c	2017-02-24 20:12:15.087211901 -0500
@@ -3338,8 +3338,16 @@
 #endif
 
 #if LINUX_KERNEL_VERSION >= KERNEL_VERSION(2,6,36)
-	f_write_string("/proc/sys/net/bridge/bridge-nf-call-iptables", "0", 0, 0);
-	f_write_string("/proc/sys/net/bridge/bridge-nf-call-ip6tables", "0", 0, 0);
+	#ifdef RTCONFIG_BCMARM
+		// for ARM platform, we have enabled BRIDGE_NETFILTER and the default behaviour
+		// is to pass bridged IPv4 & IPv6 traffic to iptables' chains
+		f_write_string("/proc/sys/net/bridge/bridge-nf-call-iptables", "1", 0, 0);
+		f_write_string("/proc/sys/net/bridge/bridge-nf-call-ip6tables", "1", 0, 0);
+	#else
+		// for MIPS platform, the BRIDGE_NETFILTER feature is not yet enabled
+		f_write_string("/proc/sys/net/bridge/bridge-nf-call-iptables", "0", 0, 0);
+		f_write_string("/proc/sys/net/bridge/bridge-nf-call-ip6tables", "0", 0, 0);
+	#endif
 #endif
 
 	/* Report stats */
--- ./asuswrt-merlin-380.66-alpha1-original/release/src/router/shared/misc.c	2017-02-24 13:54:22.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src/router/shared/misc.c	2017-02-24 20:12:15.071203900 -0500
@@ -2068,7 +2068,7 @@
 }
 #endif
 
-#ifdef RTCONFIG_BWDPI
+//#ifdef RTCONFIG_BWDPI
 /*
 	usage in rc or bwdpi for checking service
 */
@@ -2101,7 +2101,7 @@
 
 	return enabled;
 }
-#endif
+//#endif
 
 /*
 	transfer timestamp into date
--- ./asuswrt-merlin-380.66-alpha1-original/release/src/router/shared/notify_rc.c	1969-12-31 19:00:00.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src/router/shared/notify_rc.c	2017-02-03 00:12:55.000000000 -0500
@@ -0,0 +1,164 @@
+/*
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+/*
+ * This is the implementation of a routine to notify the rc driver that it
+ * should take some action.
+ *
+ * Copyright 2004, ASUSTeK Inc.
+ * All Rights Reserved.
+ *
+ * This is UNPUBLISHED PROPRIETARY SOURCE CODE of ASUSTeK Inc.;
+ * the contents of this file may not be disclosed to third parties, copied
+ * or duplicated in any form, in whole or in part, without the prior
+ * written permission of ASUSTeK Inc..
+ */
+
+#include <stdio.h>
+#include <stdlib.h>
+#include <errno.h>
+#include <string.h>
+#include <sys/types.h>
+#include <signal.h>
+#include <unistd.h>
+#include <typedefs.h>
+#include <bcmnvram.h>
+#include "shutils.h"
+#include "shared.h"
+#include "notify_rc.h"
+
+static int notify_rc_internal(const char *event_name, bool do_wait, int wait);
+
+int notify_rc(const char *event_name)
+{
+	return notify_rc_internal(event_name, FALSE, 30);
+}
+
+int notify_rc_after_wait(const char *event_name)
+{
+	return notify_rc_internal(event_name, FALSE, 30);
+}
+
+int notify_rc_after_period_wait(const char *event_name, int wait)
+{
+	return notify_rc_internal(event_name, FALSE, wait);
+}
+
+int notify_rc_and_wait(const char *event_name)
+{
+	return notify_rc_internal(event_name, TRUE, 10);
+}
+
+int notify_rc_and_wait_1min(const char *event_name)
+{
+	return notify_rc_internal(event_name, TRUE, 60);
+}
+
+int notify_rc_and_wait_2min(const char *event_name)
+{
+	return notify_rc_internal(event_name, TRUE, 120);
+}
+
+int notify_rc_and_period_wait(const char *event_name, int wait)
+{
+	return notify_rc_internal(event_name, TRUE, wait);
+}
+
+/*
+ * int wait_rc_service(int wait)
+ * wait: seconds to wait and check
+ *
+ * @return:
+ * 0: no  right
+ * 1: get right
+ */
+int wait_rc_service(int wait)
+{
+	int i=wait;
+	int first_try = 1;
+	char p1[16];
+
+	psname(nvram_get_int("rc_service_pid"), p1, sizeof(p1));
+
+	while (*nvram_safe_get("rc_service")) {
+		if(--i < 0) {
+			/* now the dead go peace */
+			if(!*p1)
+				nvram_set("rc_service", "");
+			return 0;
+		}
+
+		if(first_try){
+			logmessage_normal("rc_service", "waitting \"%s\" via %s ...", nvram_safe_get("rc_service"), p1);
+			first_try = 0;
+		}
+
+		_dprintf("%d: wait for previous script(%d/%d): %s %d %s.\n", getpid(), i, wait, nvram_safe_get("rc_service"), nvram_get_int("rc_service_pid"), p1);
+		sleep(1);
+	}
+
+	return 1;
+}
+
+
+/* @return:
+ * 	0:	success
+ *     -1:	invalid parameter
+ *      1:	wait pending rc_service timeout
+ */
+static int notify_rc_internal(const char *event_name, bool do_wait, int wait)
+{
+	int i;
+	char p2[16];
+
+	if (!event_name || wait < 0)
+		return -1;
+
+	psname(getpid(), p2, sizeof(p2));
+	_dprintf("<rc_service> [i:%s] %d:notify_rc %s", p2, getpid(), event_name);
+	logmessage_normal("rc_service", "%s %d:notify_rc %s", p2, getpid(), event_name);
+
+	// finish the last rc_service as soon as possibly.
+	if(strstr(event_name, "reboot")){
+		_dprintf("%s: kill the shell scripts for reboot.\n", event_name);
+		eval("killall", "sh");
+	}
+
+	if (!wait_rc_service(wait)) {
+		logmessage_normal("rc_service", "skip the event: %s.", event_name);
+		_dprintf("rc_service: skip the event: %s.\n", event_name);
+		return 1;
+	}
+
+	nvram_set("rc_service", event_name);
+	nvram_set_int("rc_service_pid", getpid());
+	kill(1, SIGUSR1);
+
+	if(do_wait)
+	{
+		i = wait;
+		while((nvram_match("rc_service", (char *)event_name))&&(i-- > 0)) {
+			_dprintf("%s %d: waiting after %d/%d.\n", event_name, getpid(), i, wait);
+			sleep(1);
+		}
+		if(i == 0 && nvram_match("rc_service", (char *)event_name))
+			return 2;
+	}
+
+	return 0;
+}
+
+
--- ./asuswrt-merlin-380.66-alpha1-original/release/src-rt-6.x.4708/toolchains/hndtools-arm-linux-2.6.36-uclibc-4.5.3/arm-brcm-linux-uclibcgnueabi/sysroot/usr/include/timepps.h	1969-12-31 19:00:00.000000000 -0500
+++ ./asuswrt-merlin-380.66-alpha1/release/src-rt-6.x.4708/toolchains/hndtools-arm-linux-2.6.36-uclibc-4.5.3/arm-brcm-linux-uclibcgnueabi/sysroot/usr/include/timepps.h	2017-02-12 21:44:27.367793615 -0500
@@ -0,0 +1,198 @@
+/*
+ * timepps.h -- PPS API main header
+ *
+ * Copyright (C) 2005-2007   Rodolfo Giometti <giometti@linux.it>
+ *
+ *   This program is free software; you can redistribute it and/or modify
+ *   it under the terms of the GNU General Public License as published by
+ *   the Free Software Foundation; either version 2 of the License, or
+ *   (at your option) any later version.
+ *
+ *   This program is distributed in the hope that it will be useful,
+ *   but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *   GNU General Public License for more details.
+ *
+ *   You should have received a copy of the GNU General Public License
+ *   along with this program; if not, write to the Free Software
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+ */
+
+#ifndef _SYS_TIMEPPS_H_
+#define _SYS_TIMEPPS_H_
+
+#include <errno.h>
+#include <sys/time.h>
+#include <sys/ioctl.h>
+#include <linux/types.h>
+#include <linux/pps.h>
+
+#define LINUXPPS	1		/* signal we are using LinuxPPS */
+
+/*
+ * New data structures
+ */
+
+struct ntp_fp {
+	unsigned int integral;
+	unsigned int fractional;
+};
+
+union pps_timeu {
+	struct timespec tspec;
+	struct ntp_fp ntpfp;
+	unsigned long longpad[3];
+};
+
+struct pps_info {
+	unsigned long assert_sequence;	/* seq. num. of assert event */
+	unsigned long clear_sequence;	/* seq. num. of clear event */
+	union pps_timeu assert_tu;	/* time of assert event */
+	union pps_timeu clear_tu;	/* time of clear event */
+	int current_mode;		/* current mode bits */
+};
+
+struct pps_params {
+	int api_version;		/* API version # */
+	int mode;			/* mode bits */
+	union pps_timeu assert_off_tu;	/* offset compensation for assert */
+	union pps_timeu clear_off_tu;	/* offset compensation for clear */
+};
+
+typedef int pps_handle_t;		/* represents a PPS source */
+typedef unsigned long pps_seq_t;	/* sequence number */
+typedef struct ntp_fp ntp_fp_t;		/* NTP-compatible time stamp */
+typedef union pps_timeu pps_timeu_t;	/* generic data type for time stamps */
+typedef struct pps_info pps_info_t;
+typedef struct pps_params pps_params_t;
+
+#define assert_timestamp        assert_tu.tspec
+#define clear_timestamp         clear_tu.tspec
+
+#define assert_timestamp_ntpfp  assert_tu.ntpfp
+#define clear_timestamp_ntpfp   clear_tu.ntpfp
+
+#define assert_offset		assert_off_tu.tspec
+#define clear_offset		clear_off_tu.tspec
+
+#define assert_offset_ntpfp     assert_off_tu.ntpfp
+#define clear_offset_ntpfp      clear_off_tu.ntpfp
+
+/*
+ * The PPS API
+ */
+
+static __inline int time_pps_create(int source, pps_handle_t *handle)
+{
+	int ret;
+	struct pps_kparams dummy;
+
+	if (!handle) {
+		errno = EINVAL;
+		return -1;
+	}
+
+	/* First we check if current device is a valid PPS one by
+	 * doing a dummy PPS_GETPARAMS...
+	 */
+	ret = ioctl(source, PPS_GETPARAMS, &dummy);
+	if (ret) {
+		errno = EOPNOTSUPP;
+		return -1;
+	}
+
+	/* ... then since in LinuxPPS there are no differences between a
+	 * "PPS source" and a "PPS handle", we simply return the same value.
+	 */
+	*handle = source;
+
+	return 0;
+}
+
+static __inline int time_pps_destroy(pps_handle_t handle)
+{
+	return close(handle);
+}
+
+static __inline int time_pps_getparams(pps_handle_t handle,
+					pps_params_t *ppsparams)
+{
+	int ret;
+	struct pps_kparams __ppsparams;
+
+	ret = ioctl(handle, PPS_GETPARAMS, &__ppsparams);
+
+	ppsparams->api_version = __ppsparams.api_version;
+	ppsparams->mode = __ppsparams.mode;
+	ppsparams->assert_off_tu.tspec.tv_sec = __ppsparams.assert_off_tu.sec;
+	ppsparams->assert_off_tu.tspec.tv_nsec = __ppsparams.assert_off_tu.nsec;
+	ppsparams->clear_off_tu.tspec.tv_sec = __ppsparams.clear_off_tu.sec;
+	ppsparams->clear_off_tu.tspec.tv_nsec = __ppsparams.clear_off_tu.nsec;
+
+	return ret;
+}
+
+static __inline int time_pps_setparams(pps_handle_t handle,
+					const pps_params_t *ppsparams)
+{
+	struct pps_kparams __ppsparams;
+
+	__ppsparams.api_version = ppsparams->api_version;
+	__ppsparams.mode = ppsparams->mode;
+	__ppsparams.assert_off_tu.sec = ppsparams->assert_off_tu.tspec.tv_sec;
+	__ppsparams.assert_off_tu.nsec = ppsparams->assert_off_tu.tspec.tv_nsec;
+	__ppsparams.clear_off_tu.sec = ppsparams->clear_off_tu.tspec.tv_sec;
+	__ppsparams.clear_off_tu.nsec = ppsparams->clear_off_tu.tspec.tv_nsec;
+
+	return ioctl(handle, PPS_SETPARAMS, &__ppsparams);
+}
+
+/* Get capabilities for handle */
+static __inline int time_pps_getcap(pps_handle_t handle, int *mode)
+{
+	return ioctl(handle, PPS_GETCAP, mode);
+}
+
+static __inline int time_pps_fetch(pps_handle_t handle, const int tsformat,
+					pps_info_t *ppsinfobuf,
+					const struct timespec *timeout)
+{
+	struct pps_fdata __fdata;
+	int ret;
+
+	/* Sanity checks */
+	if (tsformat != PPS_TSFMT_TSPEC) {
+		errno = EINVAL;
+		return -1;
+	}
+
+	if (timeout) {
+		__fdata.timeout.sec = timeout->tv_sec;
+		__fdata.timeout.nsec = timeout->tv_nsec;
+		__fdata.timeout.flags = ~PPS_TIME_INVALID;
+	} else
+		__fdata.timeout.flags = PPS_TIME_INVALID;
+
+	ret = ioctl(handle, PPS_FETCH, &__fdata);
+
+	ppsinfobuf->assert_sequence = __fdata.info.assert_sequence;
+	ppsinfobuf->clear_sequence = __fdata.info.clear_sequence;
+	ppsinfobuf->assert_tu.tspec.tv_sec = __fdata.info.assert_tu.sec;
+	ppsinfobuf->assert_tu.tspec.tv_nsec = __fdata.info.assert_tu.nsec;
+	ppsinfobuf->clear_tu.tspec.tv_sec = __fdata.info.clear_tu.sec;
+	ppsinfobuf->clear_tu.tspec.tv_nsec = __fdata.info.clear_tu.nsec;
+	ppsinfobuf->current_mode = __fdata.info.current_mode;
+
+	return ret;
+}
+
+static __inline int time_pps_kcbind(pps_handle_t handle,
+					const int kernel_consumer,
+					const int edge, const int tsformat)
+{
+	/* LinuxPPS doesn't implement kernel consumer feature */
+	errno = EOPNOTSUPP;
+	return -1;
+}
+
+#endif				/* _SYS_TIMEPPS_H_ */
