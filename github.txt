
---
git clone https://github.com/blackfuel/asuswrt-merlin

---
# format patch for specific commit
cd transmission
git format-patch -1 860d9e977d765f6680b5c07b7bb4b17dec435fa5

---
git format-patch origin

---
# Reset to upstream/master and apply the blackfuel mod
git clone https://github.com/blackfuel/asuswrt-merlin
git remote add upstream https://github.com/RMerl/asuswrt-merlin
git fetch upstream
git checkout master
git reset --hard upstream/master
#(apply patch)
git status
git add -A
git status
git commit -m "Reset to upstream/master and apply the blackfuel mod"
git push -f origin master

---
# See all commits
git reflog | more

---
# Unstage committed changes not yet pushed to remote
git reset HEAD~1

---
# unstage uncomitted changes
git reset HEAD <file>

---
# Revert committed changes already pushed to remote
git revert HEAD

---
# create a new repository on the command line
echo "# XXXXXXXXXXXXXXXXXXX" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/blackfuel/XXXXXXXXXXXXXXXXXXX.git
git push -u origin master

---
# git pull with backup
cd asuswrt-merlin-blackfuel
git pull
cd ..
rsync -a --del asuswrt-merlin-blackfuel/ asuswrt-merlin-backup

---
# refresh the git repo when it's out-of-sync
cd $HOME/blackfuel/asuswrt-merlin-blackfuel
rm -rf *
cp -a $HOME/asuswrt-merlin-original/* .
patch --dry-run -p1 -i ~/blackfuel/asuswrt-merlin-tools/380.68_4-ARM-mods+apps+xtables-addons.patch
patch --dry-run -p1 -i ~/blackfuel/asuswrt-merlin-tools/asuswrt-arm-entropy-backport-3.16.43.patch
git checkout README*
git checkout README-blackfuel.md
git checkout README-merlin.md
git status

---
rsync -a --del tomatoware/ tomatoware-backup
rsync -a --del evaluation@192.168.234.128:/home/evaluation/ homedir-backup

cd /opt/home
rsync --progress -a --del pi@192.168.1.139:/home/pi/tomatoware/ tomatoware

---
# merge with upstream master
git checkout master
git fetch upstream
git merge upstream/master 
#git merge --abort
#git add release/src/router/Makefile
#git commit -m "Sync with upstream master"
git push -f origin master

---
# merge up to specific commit in upstream master
git checkout master
git fetch upstream
git merge dff15591c745c4e80d400a6ec03aaaacf0e8d6a4
git push -f origin master

---
# merge with upstream master and resolve merge conflicts
git checkout master
git fetch upstream
git merge upstream/master
#(resolve merge issues here)
#git checkout --theirs release/src/router/rc/firewall.c
#git checkout --theirs release/src-rt/target.mak
#ed -s < ~/blackfuel/asuswrt-merlin-tools/380.65-beta4-target.patch
git status
git add -u
git commit -m "Sync with upstream master"
git push -f origin master

---
# create and merge with upstream branch and resolve merge conflicts
git checkout -b 7266
git fetch upstream
git merge upstream/7266
#(resolve merge issues here)
#git checkout --theirs release/src/router/rc/firewall.c
#git checkout --theirs release/src-rt/target.mak
#ed -s < ~/blackfuel/asuswrt-merlin-tools/380.65-beta4-target.patch
git status
git add -u
git commit -m "Sync with upstream 7266"
git push -f origin 7266

---
# create pull request for a single commit
git checkout -b forgetaboutit upstream/master
git cherry-pick 5f5807699c3a75c95372bda98eebb33f8351e9ab
git push origin forgetaboutit
git checkout master
#(now create the pull request)

---
# create pull request for a single commit
git checkout -b shutdown-control-2 upstream/master
git cherry-pick 7b062dee3c4e51797ad2f9a139568661c6168d3c
git push origin shutdown-control-2
git checkout master
#(now create the pull request)

---
# delete branch both locally and remotely
git checkout master
git push origin --delete shutdown-control-2
git branch -D shutdown-control-2

---
# Update branch for a pull request
git checkout shutdown-control
git reset --hard HEAD~
git cherry-pick 0e2e5e90da5e705f6505c3c6a5696722ffe0f09c
git push -f origin shutdown-control
git checkout master

---
# List all commits AND reset to a specific commit
git rev-list --all --remotes --pretty | more
git reset --hard <commit>
git push -f

---
# merge pull request with upstream master
git checkout clearhistory
git fetch upstream
git merge upstream/master
git push origin clearhistory

---
# restore original merlin README.md
git remote add upstream https://github.com/RMerl/asuswrt-merlin
git fetch upstream
git checkout ae512273ad9d10b56d1dcb7028cb5a06348a8a1f -- README.md
git add README-blackfuel.md
git status
git commit -m "restore original merlin README.md"
git status
git push

---
# resolving merge conflicts by adding, removing and reverting to upstream version of file

git status
git commit -m "Sync with upstream 380.63"
git push

---
# merge with upstream and ignore conflict for a specific file

git remote add upstream https://github.com/RMerl/asuswrt-merlin
git fetch upstream
git checkout master        # OR, git checkout -b 380.64_1
git merge upstream/master  # OR, git merge upstream/380.64_1
#
# **conflict**
#
git mergetool
# OR
git reset --hard
git config merge.renameLimit 999999
# OR
git reset --hard
echo release/src-rt/target.mak merge=ours >> .git/info/attributes
echo README.md merge=ours >> .git/info/attributes
git config merge.ours.driver true
git merge upstream/master
# OR
#git rebase upstream/master
# OR
git add release/src/router/tor/.gitignore
git rm release/src-rt-7.x.main/src/linux/linux-2.6.36/include/linux/netfilter_ipv4/ip_set.h
git rm release/src-rt-7.14.114.x/src/linux/linux-2.6.36/include/linux/netfilter_ipv4/ip_set.h
git rm release/src-rt-6.x.4708/linux/linux-2.6.36/include/linux/netfilter_ipv4/ip_set.h
git checkout upstream/master -- release/src/router/ipset/kernel/include/linux/netfilter_ipv4/ip_set.h
git add release/src/router/ipset/kernel/include/linux/netfilter_ipv4/ip_set.h
git checkout upstream/master -- release/src-rt/linux/linux-2.6/include/linux/netfilter_ipv4/ip_set.h
git add release/src-rt/linux/linux-2.6/include/linux/netfilter_ipv4/ip_set.h
git add -u
git commit -m "Sync with upstream 380.63_2"
git push -f origin master

---
# merge with upstream and ignore conflict for a specific folder

git remote add upstream https://github.com/RMerl/asuswrt-merlin
git fetch upstream
git checkout master
git merge --no-commit --no-ff upstream/master
git reset -- release/src/router/tor
git add -u
git commit -m "Sync with upstream 380.62_1"
git push -f origin master   # OR, git push -f origin 380.64_1

---

# apply patch and commit changes
patch --dry-run -p2 -i ../blackfuel-380.61-ARM-mods+apps.patch
patch -p2 -i ../blackfuel-380.61-ARM-mods+apps.patch
git add release/src-rt-6.x.4708/toolchains/hndtools-arm-linux-2.6.36-uclibc-4.5.3/arm-brcm-linux-uclibcgnueabi/sysroot/usr/include/timepps.h
git add release/src-rt-6.x.4708/linux/linux-2.6.36/config_base.6a
git add release/src-rt-6.x.4708/linux/linux-2.6.36/drivers/usb/serial/ftdi_sio.c
git add release/src-rt-6.x.4708/linux/linux-2.6.36/drivers/usb/serial/generic.c
git add release/src-rt-6.x.4708/linux/linux-2.6.36/net/ipv4/netfilter/Kconfig
git add release/src-rt-7.14.114.x/src/linux/linux-2.6.36/config_base.6a
git add release/src-rt-7.14.114.x/src/linux/linux-2.6.36/drivers/usb/serial/ftdi_sio.c
git add release/src-rt-7.14.114.x/src/linux/linux-2.6.36/drivers/usb/serial/generic.c
git add release/src-rt-7.14.114.x/src/linux/linux-2.6.36/net/ipv4/netfilter/Kconfig
git add release/src-rt/Makefile
git add release/src-rt/target.mak
git add release/src/router/Makefile
git add release/src/router/rc/Makefile
git add release/src/router/rc/openvpn.c
git add release/src/router/rc/services.c
git add release/src/router/rc/wan.c
git add release/src/router/rc/rc.h
git add release/src/router/shared/misc.c
git add README-blackfuel.md
git status
git commit -m "380.61 blackfuel merge"
git status
git push

# revert to previous commit
git reset --hard HEAD~
git push -f

# move to tip of current branch
git reset --hard ORIG_HEAD

---

# add support for RT-AC88U
git add release/src-rt-7.14.114.x/src/linux/linux-2.6.36/config_base.6a
git add release/src-rt-7.14.114.x/src/linux/linux-2.6.36/drivers/usb/serial/ftdi_sio.c
git add release/src-rt-7.14.114.x/src/linux/linux-2.6.36/drivers/usb/serial/generic.c
git add release/src-rt-7.14.114.x/src/linux/linux-2.6.36/net/ipv4/netfilter/Kconfig
git add release/src/router/Makefile
git commit -m "fixes to support RT-AC88U"
git status
git push

---

echo "# asuswrt-merlin-jffs" >> README.md
git init
git add README.md
git commit -m "initial files"
git remote add origin https://github.com/blackfuel/asuswrt-merlin-jffs.git
git push -u origin master

---
git stash save --keep-index
git rm --cached "Two-Factor_Pre-Boot_Authentication_for_Asus_Routers.pdf"

git add "Two-Factor_Pre-Boot_Authentication_for_Asus_Routers.jpg"
git status
git commit -m "replaced PDF with JPG"
git commit -m "little change"
git push

---
# increase max. elements in ipset from 65K to 1 million
git add release/src-rt-6.x.4708/linux/linux-2.6.36/include/linux/netfilter_ipv4/ip_set.h
git add release/src-rt-7.14.114.x/src/linux/linux-2.6.36/include/linux/netfilter_ipv4/ip_set.h
git add release/src-rt-7.x.main/src/linux/linux-2.6.36/include/linux/netfilter_ipv4/ip_set.h
git add release/src-rt/linux/linux-2.6/include/linux/netfilter_ipv4/ip_set.h
git add release/src/router/ipset/kernel/include/linux/netfilter_ipv4/ip_set.h
git commit -m "increase max. elements in ipset from 65K to 1 million"
git status
git push
---
# upgraded to TOR v0.2.8.9
git rm -r release/src/router/tor
## add new TOR folder
git add release/src/router/tor/*
git commit -m "Upgraded to TOR v0.2.8.9"
git status
git push
---
asuswrt-gt-ac5300
AsusWRT GT-AC5300 router GPL source code
https://www.asus.com/Networking/ROG-Rapture-GT-AC5300/HelpDesk_Download/
---
asuswrt-rt-ac86u
AsusWRT RT-AC86U router GPL source code
https://www.asus.com/Networking/RT-AC86U/HelpDesk_Download/
---
# upload Asus GPL source code to Github (first commit, slow)
cd $HOME/blackfuel
tar xzf /mnt/hgfs/sandbox/GPL_RT-AC86U_300438211816.tgz
mv asuswrt asuswrt-rt-ac86u
cd asuswrt-rt-ac86u
git init
git remote add origin https://github.com/blackfuel/asuswrt-rt-ac86u.git
git add -A
git commit -m "Asus GPL 3.0.0.4 382.11816 (RT-AC86U) first commit"
git push -u origin master
git tag 382.11816
git push origin --tags

# upload Asus GPL source code to Github (for updates)
cd $HOME/blackfuel
tar xzf /mnt/hgfs/sandbox/GPL_RT-AC86U_3.0.0.4.384.21045-gb451ba1.tgz
rm -rf asuswrt-rt-ac86u/*   # clears out everything except the .git directory
cd asuswrt-rt-ac86u
mv ../asuswrt/* .
rmdir ../asuswrt
git add -A
git commit -m "update GPL 384.21045"
git push -u origin master
git tag 384.21045
git push origin --tags
rm -rf *

---
cd $HOME/blackfuel
tar xzf /mnt/hgfs/sandbox/GPL_GT-AC5300_3.0.0.4.384.20648-g21e3702.tgz

---
---
# upload Asus GPL source code to Github (for updates) - RT-AC86U
cd $HOME/blackfuel
tar xzf /mnt/hgfs/sandbox/GPL_RT-AC86U_3.0.0.4.384.45149-g467037b.tgz
rm -rf asuswrt-rt-ac86u/*   # clears out everything except the .git directory
cd asuswrt-rt-ac86u
mv ../asuswrt/* .
rmdir ../asuswrt
git add -A
git commit -m "update GPL 384.45149"
git push -u origin master; git tag 384.45149; git push origin --tags; rm -rf *

---
# upload Asus GPL source code to Github (for updates) - GT-AC5300
cd $HOME/blackfuel
tar xzf /mnt/hgfs/sandbox/GPL_GT-AC5300_3.0.0.4.384.45149-g467037b.tgz
rm -rf asuswrt-gt-ac5300/*   # clears out everything except the .git directory
cd asuswrt-gt-ac5300
mv ../asuswrt/* .
rmdir ../asuswrt
git add -A
git commit -m "update GPL 384.45149"
git push -u origin master; git tag 384.45149; git push origin --tags; rm -rf *

---
# upload Asus GPL source code to Github (for updates) - RT-AX88U
cd $HOME/blackfuel
tar xzf /mnt/hgfs/sandbox/GPL_RT-AX88U_3.0.0.4.384.5247-g499251e.tgz
rm -rf asuswrt-rt-ax88u/*   # clears out everything except the .git directory
cd asuswrt-rt-ax88u
mv ../asuswrt/* .
rmdir ../asuswrt
git add -A
git commit -m "update GPL 384.5247"
git push -u origin master; git tag 384.5247; git push origin --tags; rm -rf *

---
# upload Asus GPL source code to Github (for updates) - BRT-AC828
cd $HOME/blackfuel
tar xzf /mnt/hgfs/sandbox/GPL_BRT-AC828_3.0.0.4.380.7587-ga6a3821.tgz
rm -rf asuswrt-brt-ac828/*   # clears out everything except the .git directory
cd asuswrt-brt-ac828
mv ../asuswrt/* .
rmdir ../asuswrt
git add -A
git commit -m "update GPL 380.7587"
git push -u origin master; git tag 380.7587; git push origin --tags; rm -rf *

---
---
# upload Asus GPL source code to Github (for updates) -- FAILED
cd $HOME/blackfuel
### fixes issue with missing symlinks
rm -rf asuswrt
mkdir asuswrt
find -L asuswrt2/ -xtype l -printf "%P\0" | xargs -0 -I '{}' cp -df --parents asuswrt2/'{}' asuswrt/
mv asuswrt/asuswrt2/* asuswrt/
rmdir asuswrt/asuswrt2
###
tar xzf /mnt/hgfs/sandbox/GPL_GT-AC5300_3.0.0.4.384.21045-gb451ba1.tgz
rm -rf asuswrt-gt-ac5300/*   # clears out everything except the .git directory
cd asuswrt-gt-ac5300
mv ../asuswrt/* .
rmdir ../asuswrt
git add -A
git commit -m "update GPL 384.21045"
git push -u origin master
git tag 384.21045
git push origin --tags; rm -rf *

---
# binwalk
# clone my fork and update it to a specific upstream commit that is more recent than my fork
git clone https://github.com/blackfuel/binwalk
cd binwalk
git remote add upstream https://github.com/devttys0/binwalk
git checkout master
git fetch upstream
git merge a709e0e3409eee066fe225e906fa413e95ca75e0
git push -f origin master

# ubi_reader
# clone my fork and update it to a previous upstream commit that is known to work
git clone https://github.com/blackfuel/ubi_reader
cd ubi_reader
git remote add upstream https://github.com/jrspruitt/ubi_reader
git checkout master
git fetch upstream
git reset --hard 0955e6b95f07d849a182125919a1f2b6790d5b51
git push -f origin master


---
# Download the latest Asuswrt-Merlin.ng
# merlin-download.sh
#!/bin/sh
set -e

BRANCH="$1"
[ -z "$BRANCH" ] && BRANCH="master"

VERSION_CONF=$(/usr/sbin/curl -L -s https://raw.githubusercontent.com/RMerl/asuswrt-merlin.ng/${BRANCH}/release/src-rt/version.conf)
eval $(/bin/echo $VERSION_CONF | /bin/sed 's# #\n#g' | grep SERIALNO)
eval $(/bin/echo $VERSION_CONF | /bin/sed 's# #\n#g' | grep EXTENDNO)
[ -z "$SERIALNO$EXTENDNO" ] && echo "cannot retrieve the release version number" && exit 1
VERSION="$SERIALNO-$EXTENDNO"

SOURCE_VERSION=$(/usr/sbin/curl -L -s https://api.github.com/repos/RMerl/asuswrt-merlin.ng/git/refs/heads/master | grep -A 4 '"object": {' | grep '"sha":' | cut -d'"' -f4)
[ -z "$SOURCE_VERSION" ] && echo "cannot retrieve the git commit hash" && exit 1

SOURCE_TIMESTAMP_X=$(/usr/sbin/curl -L -s https://api.github.com/repos/RMerl/asuswrt-merlin.ng/git/commits/${SOURCE_VERSION} | grep -A 4 '"author": {' | grep '"date":' | cut -d'"' -f4)
SOURCE_TIMESTAMP=$(date -u +@%s -d "$SOURCE_TIMESTAMP_X" 2>/dev/null || date -u +@%s -D '%Y-%m-%dT%H:%M:%S%Z' -d "$SOURCE_TIMESTAMP_X")

FILENAME="${VERSION}-${SOURCE_VERSION:0:7}.tar.gz"
if [ ! -f ${FILENAME} ]; then
  /bin/echo
  /bin/echo "Downloading $FILENAME ..."
  /bin/echo
  /usr/sbin/curl -L -S --retry 90 --retry-delay 5 -o "$FILENAME" https://github.com/RMerl/asuswrt-merlin.ng/archive/${BRANCH}.tar.gz && touch -d $SOURCE_TIMESTAMP ${FILENAME}
else
  /bin/echo
  /bin/echo Already have the latest commit as of $(date '+%Y-%m-%d %r' -d "$SOURCE_TIMESTAMP_X" 2>/dev/null || date '+%Y-%m-%d %r %Z' -d $(date -u +@%s -D '%Y-%m-%dT%H:%M:%S%Z' -d "$SOURCE_TIMESTAMP_X"))
  /bin/echo $FILENAME
  /bin/echo
fi

---
# Copy the original dnscrypt-proxy 1.9.5 repo to a local file
SOURCE_VERSION="3762f45e2f0d0781fbe3c73413b048dd9890cfd6"
VERSION="1.9.5"
git clone https://github.com/dyne/dnscrypt-proxy
cd dnscrypt-proxy
git checkout ${SOURCE_VERSION}
git submodule update --init --recursive # not needed for this particular repo because there are no submodules
SOURCE_TIMESTAMP="`git log -1 --format='@%ct'`"
rm -rf .git
cd ..
chmod -R g-w,o-w dnscrypt-proxy
tar --numeric-owner --owner=0 --group=0 --sort=name --mtime=$SOURCE_TIMESTAMP -cv dnscrypt-proxy | xz -zc -7e > dnscrypt-proxy-${VERSION}+git-${SOURCE_VERSION}.tar.xz

---

#!/bin/sh
# fosscad-download.sh
# Download the latest official FOSSCAD repository to a local file, for distribution purposes. Compressed archive is prepared by the Github site and downloaded by this script.
set -e
set -x

VERSION=$(wget -q -O - https://raw.githubusercontent.com/maduce/fosscad-repo/master/README.md | grep -A 3 "# Version" | grep -E '\*\s+[0-9]+\.[0-9]+\s+.*' | sed -r 's/\*\s+([0-9]+\.[0-9]+)\s+.*$/\1/')
[ -z "$VERSION" ] && echo "cannot retrieve the release version number" && exit 1

SOURCE_VERSION=$(wget -q -O - https://api.github.com/repos/maduce/fosscad-repo/git/refs/heads/master | grep -A 4 '"object": {' | grep '"sha":' | cut -d'"' -f4)
[ -z "$SOURCE_VERSION" ] && echo "cannot retrieve the git commit hash" && exit 1

SOURCE_TIMESTAMP_X=$(wget -q -O - https://api.github.com/repos/maduce/fosscad-repo/git/commits/${SOURCE_VERSION} | grep -A 4 '"author": {' | grep '"date":' | cut -d'"' -f4)
SOURCE_TIMESTAMP=$(date -u +@%s -d "$SOURCE_TIMESTAMP_X" 2>/dev/null || date -u +@%s -D '%Y-%m-%dT%H:%M:%S%Z' -d "$SOURCE_TIMESTAMP_X")

FILENAME="FOSSCAD_MEGA_PACK_v${VERSION}+git-${SOURCE_VERSION}"

[ ! -f ${FILENAME}.zip ] && wget -O ${FILENAME}.zip https://github.com/maduce/fosscad-repo/archive/master.zip && touch -d $SOURCE_TIMESTAMP ${FILENAME}.zip

[ ! -f ${FILENAME}.tar.gz ] && wget -O ${FILENAME}.tar.gz https://github.com/maduce/fosscad-repo/archive/master.tar.gz && touch -d $SOURCE_TIMESTAMP ${FILENAME}.tar.gz

---

#!/bin/sh
# fosscad-backup.sh
# Download the latest official FOSSCAD repository to a local file, for backup and mirror support. Compressed archive is created by this script.
set -e
set -x
unset BACKUP_NEEDED
if [ ! -d fosscad-repo ]; then
  git clone https://github.com/maduce/fosscad-repo
  cd fosscad-repo
  git checkout master
  git submodule update --init --recursive
  BACKUP_NEEDED=1
else
  cd fosscad-repo
  PULL_NEEDED=$(git fetch --dry-run 2>&1 | wc -c)
  if [ $PULL_NEEDED -gt 0 ]; then
    git pull
    git submodule update --init --recursive
    BACKUP_NEEDED=1
  fi
fi
if [ -n "$BACKUP_NEEDED" ]; then
  SOURCE_VERSION=`git ls-remote https://github.com/maduce/fosscad-repo | grep HEAD | cut -f1`
  [ -z "$SOURCE_VERSION" ] && SOURCE_VERSION="missing_git_source_version"
  SOURCE_TIMESTAMP="`git log -1 --format='@%ct'`"
  VERSION=$(grep -A 3 "# Version" README.md | grep -E '\*\s+[0-9]+\.[0-9]+\s+.*' | sed -r 's/\*\s+([0-9]+\.[0-9]+)\s+.*$/\1/')
  [ -z "$VERSION" ] && VERSION="N.N"
  FOLDER_NAME="FOSSCAD_MEGA_PACK_v${VERSION}+git-${SOURCE_VERSION}"
  cd ..
  rsync -aq fosscad-repo/ ${FOLDER_NAME} --exclude .git

  # make tar+xz archive (Linux)
  chmod -R g-w,o-w ${FOLDER_NAME}
  tar --numeric-owner --owner=0 --group=0 --sort=name --mtime=$SOURCE_TIMESTAMP -cv ${FOLDER_NAME} | xz -zc -7e > ${FOLDER_NAME}.tar.xz
  touch -d $SOURCE_TIMESTAMP ${FOLDER_NAME}.tar.xz

  # make zip archive (Windows)
  find ${FOLDER_NAME}/ -exec touch -d $SOURCE_TIMESTAMP {} +
  echo ${SOURCE_VERSION} | zip -r -z ${FOLDER_NAME}.zip ${FOLDER_NAME}
  touch -d $SOURCE_TIMESTAMP ${FOLDER_NAME}.zip

  rm -rf ${FOLDER_NAME}
fi

---


